[{"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/index.js":"1","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/App.js":"2","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/reportWebVitals.js":"3","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/WholeMainPageContainer.js":"4","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllTasksContainer.js":"5","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/TasksBox.js":"6","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Task.js":"7","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js":"8"},{"size":628,"mtime":1650382750332,"results":"9","hashOfConfig":"10"},{"size":1562,"mtime":1650385660471,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1650380008128,"results":"12","hashOfConfig":"10"},{"size":398,"mtime":1650380008128,"results":"13","hashOfConfig":"10"},{"size":1687,"mtime":1650383464069,"results":"14","hashOfConfig":"10"},{"size":352,"mtime":1650385490223,"results":"15","hashOfConfig":"10"},{"size":1179,"mtime":1650397916113,"results":"16","hashOfConfig":"10"},{"size":273,"mtime":1650398059966,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5dkkuu",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/index.js",[],[],"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/App.js",["48","49"],[],"import React, { useState, useEffect } from 'react';\nimport taskList from \"./helpers/dummyTasksApi.json\";\nimport WholeMainPageContainer from './containers/WholeMainPageContainer';\nimport DistinctTaskPage from './containers/DistinctTaskPage';\nimport {\n  Route,\n  Routes,\n  Outlet,\n  useNavigate\n} from \"react-router-dom\";\n\n\nimport './App.css';\n\nfunction App() {\n  const [allTasks, setAllTasks] = useState(null);\n  const [completedTasks, setCompletedTasks] = useState(null);\n  const [uncompletedTasks, setUncompletedTasks] = useState([]);\n\n\n    useEffect(() => {\n      // the api call that will get the initial data\n      setAllTasks(taskList)\n    }, []);\n\n    useEffect(() => {\n      // setting the comleted and unclompleted tasks \n      // in different states.\n      if(allTasks){\n      console.log(\"allTasks\", allTasks);////////////\n      let completedHelper = [];\n      let uncompletedHelper = [];\n      \n        for(let task of allTasks){\n          if(task.completed){\n            completedHelper.push(task);\n\n          }else{\n            uncompletedHelper.push(task);\n\n          }\n        }\n        setCompletedTasks(completedHelper);\n        setUncompletedTasks(uncompletedHelper);\n      }\n      \n    }, [allTasks]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<WholeMainPageContainer completedTasks={ completedTasks } uncompletedTasks={ uncompletedTasks }/>}/>\n      <Route path=\"/task/:task_title\" element={<DistinctTaskPage completedTasks={ completedTasks } uncompletedTasks={ uncompletedTasks }/>}/>\n    </Routes>\n  );\n}\n\nexport default App;\n",[],"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/reportWebVitals.js",[],[],"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/WholeMainPageContainer.js",["50","51"],[],"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllTasksContainer.js",[],[],"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/TasksBox.js",["52","53"],[],"import { useEffect, useState } from \"react\";\nimport Task from \"../components/Task\";\n\nconst TasksBox = ({ tasks, title }) => {\n    \n\n    return (\n        <div>\n            <h3>{title}</h3>\n\n           {   \n           tasks.map(task => (\n              <Task task={task}/>\n           ))\n    \n           }  \n        </div>\n    )\n}\n\nexport default TasksBox;",[],"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Task.js",["54","55"],[],"import { useNavigate, useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst Task = ({ task }) => {\n    const navigate = useNavigate();\n\n    const onTaskClick = (e) => {\n        console.log(\"a task has been clicked\");\n        navigate(`/task/:${task.title}`, {\n            state: {task:task}\n        })\n    }\n\n    return (\n            <div>\n                <input type=\"checkbox\" id=\"horns\" name=\"horns\"/>\n               {/* <Link to={{pathname: `/task/:${task.title}`,\n                state: {task:task}}}><label for=\"horns\"> <button onClick={onTaskClick}>{ task.title }</button> </label></Link>  */}\n                {/* <Link to={{pathname: `/task/:${task.title}`}}\n                state= {{task:task}}> */}\n                <label for=\"horns\"> <button onClick={onTaskClick}>{ task.title }</button> </label>\n                {/* </Link>  */}\n            </div>\n            // <Link  to={{pathname: `/question/:${question.id}`,\n            //     state: {question:question.id}}}><button className=\"main_button_style\" onClick={passingQid}> {questionToUse.answered? \"View Question\": \"Answer Question\"}</button></Link>\n      )\n}\n\nexport default Task;\n","/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js",["56"],[],"import { useNavigate, useLocation } from \"react-router-dom\";\n\nconst DistinctTaskPage = ({ task }) => {\n    const location = useLocation();\n    console.log(\"location\", location);\n\n    return (\n        <p>Hello from distinct task</p>\n    )\n}\n\nexport default DistinctTaskPage;",{"ruleId":"57","severity":1,"message":"58","line":8,"column":3,"nodeType":"59","messageId":"60","endLine":8,"endColumn":9},{"ruleId":"57","severity":1,"message":"61","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},{"ruleId":"57","severity":1,"message":"62","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"63","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"63","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":19},{"ruleId":"57","severity":1,"message":"62","line":1,"column":21,"nodeType":"59","messageId":"60","endLine":1,"endColumn":29},{"ruleId":"57","severity":1,"message":"64","line":1,"column":23,"nodeType":"59","messageId":"60","endLine":1,"endColumn":34},{"ruleId":"57","severity":1,"message":"65","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":21},"no-unused-vars","'Outlet' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'Link' is defined but never used."]