{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewTaskPage = () => {\n  _s();\n\n  // const [taskToBeEdited, setTaskToBeEdited] = useState(null);\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(null);\n  const [taskCategory, setTaskCategory] = useState(null);\n  const [taskPriority, setTaskPriority] = useState(null);\n  const [hasDate, setHasDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(null);\n  const [hasTime, setHasTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(null);\n  const [hasDuration, setHasDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(null);\n  const [hasCollaborators, setHasCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null); // const location = useLocation();\n  // useEffect(() => {\n  //     if(location){\n  //         const task = location.state.task;\n  //         setTaskToBeEdited(task);\n  //     }\n  // }, [location]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"taskTitle\",\n        id: \"name\",\n        value: taskTitle,\n        onChange: e => setTaskTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: taskTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create Task \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddNewTaskPage, \"cXz+Et/+hwH9RTEVhB0GQyREsIA=\");\n\n_c = AddNewTaskPage;\nexport default AddNewTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewTaskPage.js"],"names":["useState","useEffect","useNavigate","useLocation","AddNewTaskPage","taskTitle","setTaskTitle","taskDescription","setTaskDescription","taskCategory","setTaskCategory","taskPriority","setTaskPriority","hasDate","setHasDate","taskDate","setTaskDate","hasTime","setHasTime","taskTime","setTaskTime","hasDuration","setHasDuration","taskDuration","setTaskDuration","hasCollaborators","setHasCollaborators","taskCollaborators","setTaskCollaborators","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACyB,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAAC2B,iBAAD,EAAoBC,oBAApB,IAA4C5B,QAAQ,CAAC,IAAD,CAA1D,CAdyB,CAmBzB;AAGA;AACA;AACA;AACA;AACA;AAEA;;AAGA,sBACI;AAAA,4BAEI;AAAM,MAAA,MAAM,EAAC,EAAb;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,EAAE,EAAC,MAAvC;AAA8C,QAAA,KAAK,EAAEK,SAArD;AAAgE,QAAA,QAAQ,EAAEwB,CAAC,IAAGvB,YAAY,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1F;AAA4G,QAAA,QAAQ;AAApH;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,kBAAK1B;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH,CA5ED;;GAAMD,c;;KAAAA,c;AA8EN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst AddNewTaskPage = () => {\n    // const [taskToBeEdited, setTaskToBeEdited] = useState(null);\n    const [taskTitle, setTaskTitle] = useState(\"\");\n    const [taskDescription, setTaskDescription] = useState(null);\n    const [taskCategory, setTaskCategory] = useState(null);\n    const [taskPriority, setTaskPriority] = useState(null);\n\n    const [hasDate, setHasDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(null);\n    const [hasTime, setHasTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(null);\n    const [hasDuration, setHasDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(null);\n    const [hasCollaborators, setHasCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n   \n    \n\n    // const location = useLocation();\n    \n\n    // useEffect(() => {\n    //     if(location){\n    //         const task = location.state.task;\n    //         setTaskToBeEdited(task);\n    //     }\n        \n    // }, [location]);\n\n\n    return (\n        <div>\n            \n            <form action=\"\">\n                <input type=\"text\" name=\"taskTitle\" id=\"name\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                {/* {taskToBeEdited.title?  */}\n                <h3>{taskTitle}</h3>\n            </form>\n            <button>Create Task </button>\n             {/* <div className=\"distinctTaskFieldBox\">\n                <p>{ taskToBeEdited.type }</p>\n\n                {taskToBeEdited.date?\n                <p>{ taskToBeEdited.date }</p>\n                :\n                null\n                }\n\n                {taskToBeEdited.time?\n                <p>{ taskToBeEdited.time }</p>\n                :\n                null\n                }\n             </div>\n\n             <div>\n                 <h4>Collaborators</h4>\n             </div>\n\n             <div>\n                 <h4>Category</h4>\n                 <p>{ taskToBeEdited.category }</p>\n             </div>\n\n             <div>\n                 <h4>Priority</h4>\n                 <p>{ taskToBeEdited.priority }</p>\n             </div>\n\n             <div>\n                 <p>{ taskToBeEdited.description }</p>\n             </div> */}\n        </div>\n    )\n    \n}\n\nexport default AddNewTaskPage;"]},"metadata":{},"sourceType":"module"}