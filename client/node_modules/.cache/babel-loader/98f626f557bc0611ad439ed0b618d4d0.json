{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/TasksBox.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Task from \"../components/Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksBox = props => {\n  _s();\n\n  const [type, setType] = useState(null);\n  const [propName, setPropName] = useState(null);\n  useEffect(() => {\n    console.log(\"props\", props);\n    console.log(\"props[0]\", props[0]);\n    console.log(\"Object.keys(props)\", Object.keys(props));\n\n    if (Object.keys(props).includes(\"doOns\")) {\n      setType(\"Weeks Tasks\");\n      setPropName(\"doOns\");\n    }\n\n    if (Object.keys(props).includes(\"doBys\")) {\n      setType(\"Get it done soon\");\n      setPropName(\"doBys\");\n    }\n\n    if (Object.keys(props).includes(\"somedays\")) {\n      setType(\"Get it done someday\");\n      setPropName(\"somedays\");\n    } // Object.keys(props).includes\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), propName ? props[propName].map(task => /*#__PURE__*/_jsxDEV(Task, {\n      title: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TasksBox, \"qmsTl/dUfoLlmXsPg5kKuDDeOKQ=\");\n\n_c = TasksBox;\nexport default TasksBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksBox\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/TasksBox.js"],"names":["useEffect","useState","Task","TasksBox","props","type","setType","propName","setPropName","console","log","Object","keys","includes","map","task","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,KAAK,CAAC,CAAD,CAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,MAAM,CAACC,IAAP,CAAYR,KAAZ,CAAlC;;AACA,QAAGO,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,QAAnB,CAA4B,OAA5B,CAAH,EAAwC;AACpCP,MAAAA,OAAO,CAAC,aAAD,CAAP;AACAE,MAAAA,WAAW,CAAC,OAAD,CAAX;AAEH;;AAAA,QAAGG,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,QAAnB,CAA4B,OAA5B,CAAH,EAAwC;AACrCP,MAAAA,OAAO,CAAC,kBAAD,CAAP;AACAE,MAAAA,WAAW,CAAC,OAAD,CAAX;AAEH;;AAAA,QAAGG,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,QAAnB,CAA4B,UAA5B,CAAH,EAA2C;AACxCP,MAAAA,OAAO,CAAC,qBAAD,CAAP;AACAE,MAAAA,WAAW,CAAC,UAAD,CAAX;AAEH,KAhBW,CAiBZ;;AACH,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAA,4BACI;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,EAIGE,QAAQ,GACRH,KAAK,CAACG,QAAD,CAAL,CAAgBO,GAAhB,CAAoBC,IAAI,iBACrB,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,IAAI,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADH,CADQ,gBAKR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtCD;;GAAMb,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Task from \"../components/Task\";\n\nconst TasksBox = (props) => {\n    const [type, setType] = useState(null);\n    const [propName, setPropName] = useState(null);\n\n    useEffect(() => {\n        console.log(\"props\", props);\n        console.log(\"props[0]\", props[0]);\n        console.log(\"Object.keys(props)\", Object.keys(props));\n        if(Object.keys(props).includes(\"doOns\")){\n            setType(\"Weeks Tasks\")\n            setPropName(\"doOns\")\n\n        }if(Object.keys(props).includes(\"doBys\")){\n            setType(\"Get it done soon\")\n            setPropName(\"doBys\")\n            \n        }if(Object.keys(props).includes(\"somedays\")){\n            setType(\"Get it done someday\")\n            setPropName(\"somedays\")\n            \n        }\n        // Object.keys(props).includes\n    }, []);\n\n    return (\n        <div>\n            <h3>{type}</h3>\n\n           {   \n           propName?      \n           props[propName].map(task => (\n              <Task title={task.title}/>\n           ))\n           :\n           <p>Loading</p>\n           }  \n        </div>\n    )\n}\n\nexport default TasksBox;"]},"metadata":{},"sourceType":"module"}