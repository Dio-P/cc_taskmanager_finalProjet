{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllTasksContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport TasksBox from \"./TasksBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllTasksContainer = _ref => {\n  _s();\n\n  let {\n    uncompletedTasks,\n    completedTasks\n  } = _ref;\n  const [doOns, setDoOns] = useState([]);\n  const [doBys, setDoBys] = useState([]);\n  const [somedays, setSomedays] = useState([]);\n  const [doOnsCompl, setDoOnsCompl] = useState([]);\n  const [doBysCompl, setDoBysCompl] = useState([]);\n  const [somedaysCompl, setSomedaysCompl] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const doOnsHelper = [];\n    const doBysHelper = [];\n    const somedaysHelper = []; // deviding the tasks by type and setting it in states\n    // if(uncompletedTasks){\n\n    for (let task of uncompletedTasks) {\n      console.log(\"task\", task);\n\n      if (task.type === \"DO_ON\") {\n        doOnsHelper.push(task);\n      }\n\n      if (task.type === \"DO_BY\") {\n        doBysHelper.push(task);\n      }\n\n      if (task.type === \"SOMEDAY\") {\n        somedaysHelper.push(task);\n      }\n    }\n\n    setDoOns(doOnsHelper);\n    setDoBys(doBysHelper);\n    setSomedays(somedaysHelper); // }\n  }, [uncompletedTasks]);\n  useEffect(() => {\n    const doOnsHelper = [];\n    const doBysHelper = [];\n    const somedaysHelper = []; // deviding the tasks by type and setting it in states\n    // if(uncompletedTasks){\n\n    for (let task of completedTasks) {\n      console.log(\"task\", task);\n\n      if (task.type === \"DO_ON\") {\n        doOnsHelper.push(task);\n      }\n\n      if (task.type === \"DO_BY\") {\n        doBysHelper.push(task);\n      }\n\n      if (task.type === \"SOMEDAY\") {\n        somedaysHelper.push(task);\n      }\n    }\n\n    setDoOnsCompl(doOnsHelper);\n    setDoBysCompl(doBysHelper);\n    setSomedaysCompl(somedaysHelper); // }\n  }, [completedTasks]);\n  useEffect(() => {\n    if (doOns && doBys && somedays) {\n      setLoading(false);\n    }\n  }, [doOns, doBys, somedays]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"controlers\", loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TasksBox, {\n        tasks: doOns,\n        taksCompl: doOnsCompl,\n        title: \"Weeks Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TasksBox, {\n        tasks: doBys,\n        taksCompl: doBysCompl,\n        title: \"Get it done soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TasksBox, {\n        tasks: somedays,\n        taksCompl: somedaysCompl,\n        title: \"Get it done someday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllTasksContainer, \"FamXwuPpH/g2LmfocJsut36UdE4=\");\n\n_c = AllTasksContainer;\nexport default AllTasksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTasksContainer\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllTasksContainer.js"],"names":["useEffect","useState","TasksBox","AllTasksContainer","uncompletedTasks","completedTasks","doOns","setDoOns","doBys","setDoBys","somedays","setSomedays","doOnsCompl","setDoOnsCompl","doBysCompl","setDoBysCompl","somedaysCompl","setSomedaysCompl","loading","setLoading","doOnsHelper","doBysHelper","somedaysHelper","task","console","log","type","push"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport TasksBox from \"./TasksBox\";\n\nconst AllTasksContainer = ({ uncompletedTasks, completedTasks }) => {\n    const [doOns, setDoOns] = useState([]);\n    const [doBys, setDoBys] = useState([]);\n    const [somedays, setSomedays] = useState([]);\n    const [doOnsCompl, setDoOnsCompl] = useState([]);\n    const [doBysCompl, setDoBysCompl] = useState([]);\n    const [somedaysCompl, setSomedaysCompl] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const doOnsHelper = [];\n        const doBysHelper = [];\n        const somedaysHelper = [];\n\n        // deviding the tasks by type and setting it in states\n        // if(uncompletedTasks){\n            for(let task of uncompletedTasks){\n                console.log(\"task\", task);\n                if(task.type===\"DO_ON\"){\n                    doOnsHelper.push(task)\n\n                }if(task.type===\"DO_BY\"){\n                    doBysHelper.push(task)\n\n                }if(task.type===\"SOMEDAY\"){\n                    somedaysHelper.push(task)\n\n                }\n            }\n            setDoOns(doOnsHelper);\n                setDoBys(doBysHelper);\n                setSomedays(somedaysHelper);\n        // }\n    }, [uncompletedTasks]);\n\n    useEffect(() => {\n        const doOnsHelper = [];\n        const doBysHelper = [];\n        const somedaysHelper = [];\n\n        // deviding the tasks by type and setting it in states\n        // if(uncompletedTasks){\n            for(let task of completedTasks){\n                console.log(\"task\", task);\n                if(task.type===\"DO_ON\"){\n                    doOnsHelper.push(task)\n\n                }if(task.type===\"DO_BY\"){\n                    doBysHelper.push(task)\n\n                }if(task.type===\"SOMEDAY\"){\n                    somedaysHelper.push(task)\n\n                }\n            }\n            setDoOnsCompl(doOnsHelper);\n            setDoBysCompl(doBysHelper);\n            setSomedaysCompl(somedaysHelper);\n        // }\n    }, [completedTasks]);\n\n    useEffect(() => {\n        if(doOns&& doBys&& somedays){\n            setLoading(false);\n        }\n        \n    }, [doOns, doBys, somedays]);\n\n\n    return (\n        <div>\n            \n            controlers \n            {(loading)? \n            <p>Loading</p>\n            :\n            <div>\n            <TasksBox tasks={ doOns } taksCompl={ doOnsCompl } title = \"Weeks Tasks\"/>\n            <TasksBox tasks={ doBys } taksCompl={ doBysCompl } title = \"Get it done soon\"/>\n            <TasksBox tasks={ somedays } taksCompl={ somedaysCompl } title = \"Get it done someday\"/>\n            </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default AllTasksContainer;\n"]},"metadata":{},"sourceType":"module"}