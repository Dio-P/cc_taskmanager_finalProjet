{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenu from \"../components/DropDownMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNewTaskPage = () => {\n  _s();\n\n  // const [taskToBeEdited, setTaskToBeEdited] = useState(null);\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskCategory, setTaskCategory] = useState(null);\n  const [taskPriority, setTaskPriority] = useState(null);\n  const [hasDescription, setHasDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(null);\n  const [hasDate, setHasDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(null);\n  const [hasTime, setHasTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(null);\n  const [hasDuration, setHasDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(null);\n  const [hasCollaborators, setHasCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  const location = useLocation();\n  const categories = location.state.categories;\n  const priorities = location.state.priorities; // let year = Date.prototype.getFullYear()\n  // let month = Date.prototype.getMonth()\n  // let day = Date.prototype.getDate()\n\n  useEffect(() => {\n    setHasDescription(false);\n  }, []);\n\n  const setCategoryFromDropDown = choosenOption => {\n    setTaskCategory(choosenOption);\n  };\n\n  const setPriorityFromDropDown = choosenOption => {\n    setTaskPriority(choosenOption);\n  }; // const location = useLocation();\n  // useEffect(() => {\n  //     if(location){\n  //         const task = location.state.task;\n  //         setTaskToBeEdited(task);\n  //     }\n  // }, [location]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskTitle\",\n        children: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"taskTitle\",\n        id: \"taskTitle\",\n        value: taskTitle,\n        onChange: e => setTaskTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskCategory\",\n        children: \"Task Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownMenu, {\n        options: categories,\n        setValueFromDropDown: (choosenOption, categories) => setCategoryFromDropDown(choosenOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskPriority\",\n        children: \"Task Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownMenu, {\n        options: priorities,\n        setValueFromDropDown: (choosenOption, categories) => setPriorityFromDropDown(choosenOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), hasDescription ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDescription\",\n          children: \"Task Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"taskDescription\",\n          id: \"taskDescription\",\n          value: taskDescription,\n          onChange: e => setTaskDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setHasDescription(false),\n          children: \"Remove Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasDescription(true),\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), hasDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDate\",\n          children: \"Task Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"taskDate\",\n          id: \"taskDate\",\n          value: taskDate,\n          onChange: e => setTaskDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setHasDate(false),\n          children: \"Remove Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasDate(true),\n        children: \"Add Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddNewTaskPage, \"MOWn2VVjQqTaJ+bPSP2j+zGp820=\", false, function () {\n  return [useLocation];\n});\n\n_c = AddNewTaskPage;\nexport default AddNewTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewTaskPage.js"],"names":["useState","useEffect","useNavigate","useLocation","DropDownMenu","AddNewTaskPage","taskTitle","setTaskTitle","taskCategory","setTaskCategory","taskPriority","setTaskPriority","hasDescription","setHasDescription","taskDescription","setTaskDescription","hasDate","setHasDate","taskDate","setTaskDate","hasTime","setHasTime","taskTime","setTaskTime","hasDuration","setHasDuration","taskDuration","setTaskDuration","hasCollaborators","setHasCollaborators","taskCollaborators","setTaskCollaborators","location","categories","state","priorities","setCategoryFromDropDown","choosenOption","setPriorityFromDropDown","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenu from \"../components/DropDownMenu\";\n\nconst AddNewTaskPage = () => {\n    // const [taskToBeEdited, setTaskToBeEdited] = useState(null);\n    const [taskTitle, setTaskTitle] = useState(\"\");\n    const [taskCategory, setTaskCategory] = useState(null);\n    const [taskPriority, setTaskPriority] = useState(null);\n\n    const [hasDescription, setHasDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(null);\n    const [hasDate, setHasDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(null);\n    const [hasTime, setHasTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(null);\n    const [hasDuration, setHasDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(null);\n    const [hasCollaborators, setHasCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n    const location = useLocation();\n    const categories = location.state.categories;\n    const priorities = location.state.priorities;\n\n    // let year = Date.prototype.getFullYear()\n    // let month = Date.prototype.getMonth()\n    // let day = Date.prototype.getDate()\n    \n    useEffect(() => {\n        setHasDescription(false)\n        \n    }, []);\n\n    const setCategoryFromDropDown = (choosenOption) => {\n            setTaskCategory(choosenOption);\n       \n        \n    }\n\n    const setPriorityFromDropDown = (choosenOption) => {\n            setTaskPriority(choosenOption);\n        \n    }\n    // const location = useLocation();\n    \n\n    // useEffect(() => {\n    //     if(location){\n    //         const task = location.state.task;\n    //         setTaskToBeEdited(task);\n    //     }\n        \n    // }, [location]);\n   \n\n\n    return (\n        <div>\n            \n            <form >\n                <label htmlFor=\"taskTitle\">Task Title</label>\n                <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                {/* <h3>{taskTitle}</h3> */}\n\n                <label htmlFor=\"taskCategory\">Task Category</label>\n                <DropDownMenu options={ categories } setValueFromDropDown={(choosenOption, categories)=> setCategoryFromDropDown(choosenOption)} />\n\n                <label htmlFor=\"taskPriority\">Task Priority</label>\n                <DropDownMenu options={ priorities } setValueFromDropDown={(choosenOption, categories)=> setPriorityFromDropDown(choosenOption)} />\n\n                {hasDescription?\n                <>\n                    <label htmlFor=\"taskDescription\">Task Description</label>\n                    <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" value={taskDescription} onChange={e=> setTaskDescription(e.target.value)}/>\n                    <button onClick={()=> setHasDescription(false)}>Remove Description</button>\n                </>\n                :\n                <button onClick={()=> setHasDescription(true)}>Add Description</button>\n                }\n\n                {hasDate?\n                <>\n                    <label htmlFor=\"taskDate\">Task Description</label>\n                    <input type=\"date\" name=\"taskDate\" id=\"taskDate\" value={taskDate} onChange={e=> setTaskDate(e.target.value)}/>\n                    <button onClick={()=> setHasDate(false)}>Remove Date</button>\n                </>\n                :\n                <button onClick={()=> setHasDate(true)}>Add Date</button>\n                }   \n\n                <button type=\"submit\">Create Task </button>\n            </form>\n            \n             {/* <div className=\"distinctTaskFieldBox\">\n                <p>{ taskToBeEdited.type }</p>\n\n                {taskToBeEdited.date?\n                <p>{ taskToBeEdited.date }</p>\n                :\n                null\n                }\n\n                {taskToBeEdited.time?\n                <p>{ taskToBeEdited.time }</p>\n                :\n                null\n                }\n             </div>\n\n             <div>\n                 <h4>Collaborators</h4>\n             </div>\n\n             <div>\n                 <h4>Category</h4>\n                 <p>{ taskToBeEdited.category }</p>\n             </div>\n\n             <div>\n                 <h4>Priority</h4>\n                 <p>{ taskToBeEdited.priority }</p>\n             </div>\n\n             <div>\n                 <p>{ taskToBeEdited.description }</p>\n             </div> */}\n        </div>\n    )\n    \n}\n\nexport default AddNewTaskPage;"]},"metadata":{},"sourceType":"module"}