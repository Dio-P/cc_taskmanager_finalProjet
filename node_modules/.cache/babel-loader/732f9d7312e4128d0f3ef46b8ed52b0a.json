{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { FaBars } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctTaskPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    users,\n    updateWholeMainPageTasksFromComponent\n  } = _ref;\n  const location = useLocation();\n  const task = location.state.task;\n  const navigate = useNavigate(); // const categories = location.state.categories;\n  // const priorities = location.state.priorities;\n\n  const [loading, setLoading] = useState(true);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [editTitle, setEditTitle] = useState(false);\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [taskID, setTaskID] = useState(task.id);\n  const [taskCompleted, setTaskCompleted] = useState(task.completed); ///////////\n\n  const [editCategory, setEditCategory] = useState(false);\n  const [taskCategory, setTaskCategory] = useState(task.category);\n  const [editPriority, setEditPriority] = useState(false);\n  const [taskPriority, setTaskPriority] = useState(task.priority);\n  const [editDescription, setEditDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(task.description);\n  const [editDate, setEditDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(task.date);\n  const [editTime, setEditTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(task.time);\n  const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n  const [datedTaskType, setDatedTaskType] = useState(task.type);\n  const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n  const [editDuration, setEditDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(task.duration);\n  const [editCollaborators, setEditCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  const [collaboratorsToDisplay, setCollaboratorsToDisplay] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const {\n    get,\n    post,\n    put\n  } = useContext(RequestContext);\n  useEffect(() => {\n    setLoading(false);\n  }, [taskTitle, taskCompleted, taskCategory, taskPriority]); // useEffect(() => {\n  //     setTaskID(task)\n  // }, [task]);\n\n  useEffect(() => {\n    let collaboratorsToDisplay = users.filter(user => {\n      return user.firstName.toLowerCase().match(searchInput);\n    });\n    setCollaboratorsToDisplay(collaboratorsToDisplay);\n  }, [searchInput]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  const onClickingACollaborator = (collaborator, e) => {\n    e.preventDefault();\n    setTaskCollaborators([...taskCollaborators, collaborator]);\n  };\n\n  const removeCollaborator = colaboratorID => {\n    const newCollaborators = taskCollaborators.filter(category => category.id !== colaboratorID);\n    setTaskCollaborators(newCollaborators);\n  };\n\n  const setCategoryFromDropDown = choosenOption => {\n    setTaskCategory(choosenOption);\n  };\n\n  const setPriorityFromDropDown = choosenOption => {\n    setTaskPriority(choosenOption);\n  };\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingComplete = () => {\n    // console.log(\"inside Complete\");\n    setTaskCompleted(!taskCompleted);\n\n    if (!completedTimeStamp) {\n      let timestamp = Date.parse(new Date());\n      setCompletedTimeStamp(timestamp); // onClickingDone()\n    } else {\n      setCompletedTimeStamp(null); // onClickingDone()\n    }\n  };\n\n  const onClickingDone = () => {\n    const updatedTask = {};\n    updatedTask[\"title\"] = taskTitle;\n    updatedTask[\"id\"] = taskID;\n    updatedTask[\"category\"] = taskCategory;\n    updatedTask[\"priority\"] = taskPriority;\n    updatedTask[\"completed\"] = taskCompleted;\n    updatedTask[\"completedTimeStamp\"] = completedTimeStamp;\n\n    if (taskDescription) {\n      updatedTask[\"description\"] = taskDescription;\n    }\n\n    if (taskDate) {\n      updatedTask[\"date\"] = taskDate;\n      updatedTask[\"type\"] = datedTaskType;\n    } else {\n      updatedTask[\"type\"] = \"SOMEDAY\";\n    }\n\n    if (taskTime) {\n      updatedTask[\"time\"] = taskTime;\n    }\n\n    if (taskDuration) {\n      updatedTask[\"duration\"] = taskDuration;\n    }\n\n    console.log(\"updatedTask\", updatedTask); /////////////\n\n    put(`tasks/${task.id}`, updatedTask);\n    updateWholeMainPageTasksFromComponent(updatedTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsMenuOpen(!isMenuOpen),\n          children: /*#__PURE__*/_jsxDEV(FaBars, {\n            className: \"m-4\",\n            size: \"2rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 70\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n        closeMenuFunction: () => closeMenuFunction(),\n        categories: categories,\n        priorities: priorities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cat-header\",\n        children: taskTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distinct-task\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-box justify-center m-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"basis-1/2 font-semibold text-lg\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"basis-1/1 text-md italic\",\n            children: taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setEditTitle(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskTitle\",\n              id: \"taskTitle\",\n              value: taskTitle,\n              onChange: e => setTaskTitle(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                setEditTitle(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-box justify-left m-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"font-semibold text-lg\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkbox-task\",\n            type: \"checkbox\",\n            onClick: () => {\n              onClickingComplete();\n            },\n            checked: taskCompleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-box justify-center m-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"basis-1/3 font-semibold text-lg\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"basis-1/3 text-md italic\",\n            children: taskCategory.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this), !editCategory ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setEditCategory(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DropDownMenuCategory, {\n              options: categories,\n              setValueFromDropDown: choosenOption => setCategoryFromDropDown(choosenOption)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                setEditCategory(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-box justify-center m-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"basis-1/3 font-semibold text-lg\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"basis-1/3 text-md italic\",\n            children: taskPriority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), !editPriority ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setEditPriority(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DropDownMenuPriority, {\n              options: priorities,\n              setValueFromDropDown: choosenOption => setPriorityFromDropDown(choosenOption)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                setEditPriority(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, this), taskDescription ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"basis-1/3 font-semibold text-lg\",\n            children: \" Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"basis-1/3 text-sm italic\",\n            children: taskDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), !editDescription ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setEditDescription(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskDescription\",\n              id: \"taskDescription\",\n              value: taskDescription,\n              onChange: e => setTaskDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                setEditDescription(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this) : null, taskDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-box justify-center m-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"basis-1/3 font-semibold text-lg\",\n              children: \" Date \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"basis-1/3 text-md -ml-4 italic\",\n              children: taskDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 25\n            }, this), !editDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => setEditDate(true),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"taskDate\",\n                id: \"taskDate\",\n                value: taskDate,\n                onChange: e => setTaskDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn\",\n                onClick: () => {\n                  setEditDate(false);\n                  onClickingDone();\n                },\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-box justify-center m-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"basis-1/3 font-semibold text-lg\",\n              children: \" Type \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm ml-3\",\n              htmlFor: \"taskDate\",\n              children: \"Do On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"basis-1/3 -ml-4\",\n              type: \"radio\",\n              name: \"timedTaskType\",\n              id: \"do_on\",\n              value: \"DO_ON\",\n              checked: datedTaskType === \"DO_ON\" ? true : false,\n              onChange: e => setDatedTaskType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm ml-3\",\n              htmlFor: \"taskDate\",\n              children: \"Do By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"basis-1/3 -ml-4\",\n              type: \"radio\",\n              name: \"timedTaskType\",\n              id: \"do_on\",\n              value: \"DO_BY\",\n              checked: datedTaskType === \"DO_BY\" ? true : false,\n              onChange: e => setDatedTaskType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this) : null, taskTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-box justify-center m-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"basis-1/3 font-semibold text-lg\",\n            htmlFor: \"taskDate\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"basis-1/3 text-md -ml-4 italic\",\n            children: taskTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 21\n          }, this), !editTime ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setEditTime(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              name: \"taskDate\",\n              id: \"taskDate\",\n              value: taskTime,\n              onChange: e => setTaskTime(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                setEditTime(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }, this) : null, taskDuration ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-box justify-center m-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"basis-1/3 font-semibold text-lg\",\n            htmlFor: \"taskDuration\",\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"basis-1/3 text-md -ml-4 italic\",\n            children: taskDuration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 21\n          }, this), !editDuration ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setEditDuration(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskDuration\",\n              id: \"taskDuration\",\n              placeholder: \"in minutes\",\n              value: taskDuration,\n              onChange: e => setTaskDuration(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                setEditDuration(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }, this) : null, taskCollaborators ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-box justify-center m-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"basis-1/3 font-semibold text-lg\",\n            children: [taskCollaborators.length <= 0 ? \"There are no collaborators right now \" : \"Collaborators\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 21\n          }, this), taskCollaborators.length > 0 && Object.values(taskCollaborators).map(collaborator => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [collaborator.firstName, \" \", collaborator.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeCollaborator(collaborator.id),\n              children: \"X\"\n            }, collaborator.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)), !searchInput ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setEditCollaborators(true),\n            children: \"Add Collaborator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add Collaborators\",\n              onChange: handleChange,\n              value: searchInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 21\n            }, this), searchInput.length > 0 && /*#__PURE__*/_jsxDEV(SearchBar, {\n              onClickingAnOption: (users, e) => onClickingACollaborator(users, e),\n              optionsToDisplay: collaboratorsToDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => {\n                setEditCollaborators(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSearchInput(\"Please add new collaborator\"),\n          children: \" Add Collaborator \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-task-btn\",\n        onClick: () => navigate(\"/\"),\n        children: \"Back to Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctTaskPage, \"PG/9IYgvdvl+3mYmpQH/U76ki7w=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = DistinctTaskPage;\nexport default DistinctTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","DropDownMenuCategory","DropDownMenuPriority","RequestContext","Menu","SearchBar","FaBars","DistinctTaskPage","categories","priorities","users","updateWholeMainPageTasksFromComponent","location","task","state","navigate","loading","setLoading","isMenuOpen","setIsMenuOpen","editTitle","setEditTitle","taskTitle","setTaskTitle","title","taskID","setTaskID","id","taskCompleted","setTaskCompleted","completed","editCategory","setEditCategory","taskCategory","setTaskCategory","category","editPriority","setEditPriority","taskPriority","setTaskPriority","priority","editDescription","setEditDescription","taskDescription","setTaskDescription","description","editDate","setEditDate","taskDate","setTaskDate","date","editTime","setEditTime","taskTime","setTaskTime","time","editdatedTaskType","setEditdatedTaskType","datedTaskType","setDatedTaskType","type","completedTimeStamp","setCompletedTimeStamp","editDuration","setEditDuration","taskDuration","setTaskDuration","duration","editCollaborators","setEditCollaborators","taskCollaborators","setTaskCollaborators","collaboratorsToDisplay","setCollaboratorsToDisplay","searchInput","setSearchInput","get","post","put","filter","user","firstName","toLowerCase","match","handleChange","e","preventDefault","target","value","onClickingACollaborator","collaborator","removeCollaborator","colaboratorID","newCollaborators","setCategoryFromDropDown","choosenOption","setPriorityFromDropDown","closeMenuFunction","onClickingComplete","timestamp","Date","parse","onClickingDone","updatedTask","console","log","length","Object","values","map","lastName"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { FaBars } from \"react-icons/fa\";\n\nconst DistinctTaskPage = ({ categories, priorities, users, updateWholeMainPageTasksFromComponent }) => {\n    const location = useLocation();\n    const task = location.state.task;\n    const navigate = useNavigate();\n    // const categories = location.state.categories;\n    // const priorities = location.state.priorities;\n\n    const [loading, setLoading] = useState(true);\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    const [editTitle, setEditTitle] = useState(false);\n    const [taskTitle, setTaskTitle] = useState(task.title);\n    const [taskID, setTaskID] = useState(task.id);\n    \n    const [taskCompleted, setTaskCompleted] = useState(task.completed);///////////\n\n    const [editCategory, setEditCategory] = useState(false);\n    const [taskCategory, setTaskCategory] = useState(task.category);\n    const [editPriority, setEditPriority] = useState(false);\n    const [taskPriority, setTaskPriority] = useState(task.priority);\n    \n\n    const [editDescription, setEditDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(task.description);\n    const [editDate, setEditDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(task.date);\n    const [editTime, setEditTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(task.time);\n    const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n    const [datedTaskType, setDatedTaskType] = useState(task.type);\n    const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n    \n    \n\n    const [editDuration, setEditDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(task.duration);\n    const [editCollaborators, setEditCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n    const [collaboratorsToDisplay, setCollaboratorsToDisplay] = useState([]);\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    const {get, post, put} = useContext(RequestContext);\n    \n    useEffect(() => {\n        setLoading(false)\n        \n    }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n\n    // useEffect(() => {\n    //     setTaskID(task)\n    // }, [task]);\n\n    useEffect(() => {\n        let collaboratorsToDisplay = users.filter((user) => {\n          return user.firstName.toLowerCase().match(searchInput);\n        });\n        setCollaboratorsToDisplay(collaboratorsToDisplay);\n      }, [searchInput]);\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setSearchInput(e.target.value.toLowerCase());\n      };\n\n    const onClickingACollaborator = (collaborator,e) => {\n        e.preventDefault();\n        setTaskCollaborators([...taskCollaborators, collaborator]);\n    \n      };\n    \n    const removeCollaborator = (colaboratorID) => {\n    const newCollaborators = taskCollaborators.filter(\n        (category) => category.id !== colaboratorID\n    );\n    setTaskCollaborators(newCollaborators);\n    };\n    \n    const setCategoryFromDropDown = (choosenOption) => {\n        setTaskCategory(choosenOption);\n    }\n\n    const setPriorityFromDropDown = (choosenOption) => {\n            setTaskPriority(choosenOption);\n    }\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingComplete = () => {\n        // console.log(\"inside Complete\");\n        setTaskCompleted(!taskCompleted)\n        if(!completedTimeStamp){\n            let timestamp = Date.parse(new Date());\n            setCompletedTimeStamp(timestamp);\n            // onClickingDone()\n        }else{\n            setCompletedTimeStamp(null);\n            // onClickingDone()\n        }\n    }\n\n    const onClickingDone = () => {\n        const updatedTask= { }\n        updatedTask[\"title\"] = taskTitle;\n        updatedTask[\"id\"] = taskID;\n        updatedTask[\"category\"] = taskCategory;\n        updatedTask[\"priority\"] = taskPriority;\n        updatedTask[\"completed\"]=taskCompleted;\n        updatedTask[\"completedTimeStamp\"]=completedTimeStamp;\n\n        if(taskDescription){\n            updatedTask[\"description\"]=taskDescription;\n        }\n        if(taskDate){\n            updatedTask[\"date\"]=taskDate;\n            updatedTask[\"type\"]=datedTaskType;\n        }else{\n            updatedTask[\"type\"]=\"SOMEDAY\";\n\n        }\n        if(taskTime){\n            updatedTask[\"time\"]=taskTime;\n        }\n        if(taskDuration){\n            updatedTask[\"duration\"]=taskDuration;\n        }\n        \n        console.log(\"updatedTask\", updatedTask);/////////////\n        \n        put(`tasks/${task.id}`, updatedTask)\n        updateWholeMainPageTasksFromComponent(updatedTask);       \n    }\n\n    return (\n        \n\n        <div>\n            {loading?\n            <h3>Loading</h3>\n            :\n\n            <div>\n                {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}><FaBars className='m-4' size='2rem'/></button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n            }\n                <p className='cat-header'>{taskTitle}</p>\n                <div className=\"distinct-task\">\n                <div className='flex flex-box justify-center m-1'>\n                    <label className='basis-1/2 font-semibold text-lg'>Title</label>\n                    <h3 className='basis-1/1 text-md italic'>{taskTitle}</h3>\n                    {!editTitle?\n                        <button className='btn' onClick={()=>setEditTitle(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                            <button className='btn' onClick={()=>{\n                                setEditTitle(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }  \n                </div>\n                \n                <div className='flex flex-box justify-left m-1'>\n                    <label className='font-semibold text-lg'>Completed</label>\n                    <input className='checkbox-task' type=\"checkbox\" onClick={()=>{onClickingComplete()}} checked={taskCompleted}/>\n                </div>\n            \n\n                <div className='flex flex-box justify-center m-1'>\n                    <label className='basis-1/3 font-semibold text-lg'>Category</label>\n                    <p className='basis-1/3 text-md italic'>{ taskCategory.title }</p>\n                    {!editCategory?\n                        <button className=\"btn\" onClick={()=>setEditCategory(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuCategory options={ categories } setValueFromDropDown={(choosenOption)=> setCategoryFromDropDown(choosenOption)}/>\n                            <button className=\"btn\" onClick={()=>{\n                                setEditCategory(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                <div className='flex flex-box justify-center m-1'>\n                    <label className='basis-1/3 font-semibold text-lg'>Priority</label>\n                    <p className='basis-1/3 text-md italic'>{ taskPriority }</p>\n                    {!editPriority?\n                        <button className='btn' onClick={()=>setEditPriority(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuPriority options={ priorities } setValueFromDropDown={(choosenOption)=> setPriorityFromDropDown(choosenOption)}/>\n                            <button className='btn' onClick={()=>{\n                                setEditPriority(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                {taskDescription?\n                <div>\n                    <label className='basis-1/3 font-semibold text-lg'> Description </label>\n                    <p className='basis-1/3 text-sm italic'>{ taskDescription }</p>\n                    {!editDescription?\n                        <button className=\"btn\" onClick={()=>setEditDescription(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" value={taskDescription} onChange={e=> setTaskDescription(e.target.value)}/>\n                            <button className=\"btn\" onClick={()=>{\n                                setEditDescription(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                }\n                \n\n                {taskDate?\n                <div>\n\n                    <div className='flex flex-box justify-center m-1'>\n                        <label className='basis-1/3 font-semibold text-lg'> Date </label>\n                        <p className='basis-1/3 text-md -ml-4 italic'>{ taskDate }</p>\n                        {!editDate?\n                            <button className=\"btn\" onClick={()=>setEditDate(true)}>Edit</button>\n                        :\n                            <>\n                                <input type=\"date\" name=\"taskDate\" id=\"taskDate\" value={taskDate} onChange={e=> setTaskDate(e.target.value)}/>\n                                <button className=\"btn\" onClick={()=>{\n                                setEditDate(false)\n                                onClickingDone()\n                                }}>Done</button>\n                            </>\n                        }\n                    </div>\n\n                    <div className='flex flex-box justify-center m-1'>\n                        <label className='basis-1/3 font-semibold text-lg'> Type </label>\n                        <label className=\"text-sm ml-3\" htmlFor=\"taskDate\">Do On</label>\n                        <input className='basis-1/3 -ml-4'\n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_ON\" \n                            checked={datedTaskType===\"DO_ON\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                        <label className=\"text-sm ml-3\" htmlFor=\"taskDate\">Do By</label>\n                        <input className='basis-1/3 -ml-4'\n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_BY\" \n                            checked={datedTaskType===\"DO_BY\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                    </div>\n\n                </div>\n                        :\n                            null  \n                }\n\n\n                {taskTime?\n                <div className='flex flex-box justify-center m-1'>\n                    <label className='basis-1/3 font-semibold text-lg' htmlFor=\"taskDate\">Time</label>\n                    <p className='basis-1/3 text-md -ml-4 italic'>{ taskTime }</p>\n                    {!editTime?\n                        <button className=\"btn\" onClick={()=> setEditTime(true)}>Edit</button>   \n                    :\n                        <>\n                            <input type=\"time\" name=\"taskDate\" id=\"taskDate\" value={taskTime} onChange={e=> setTaskTime(e.target.value)}/>\n                            <button className=\"btn\" onClick={()=>{\n                                setEditTime(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }    \n                </div>\n                :\n                    null\n                }\n\n\n                {taskDuration?\n                <div className='flex flex-box justify-center m-1'>\n                    <label className='basis-1/3 font-semibold text-lg' htmlFor=\"taskDuration\">Duration</label>\n                    <p className='basis-1/3 text-md -ml-4 italic'>{ taskDuration }</p>\n                    {!editDuration?\n                        <button className=\"btn\" onClick={()=> setEditDuration(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDuration\" id=\"taskDuration\" placeholder=\"in minutes\" value={taskDuration} onChange={e=> setTaskDuration(e.target.value)}/>\n                            <button className=\"btn\" onClick={()=>{\n                                setEditDuration(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                } \n                \n\n\n                {taskCollaborators? (   \n                <div className='flex flex-box justify-center m-1'>\n                    <label className='basis-1/3 font-semibold text-lg'> \n                        {taskCollaborators.length<=0? \"There are no collaborators right now \": \"Collaborators\"} </label>\n                    {taskCollaborators.length > 0 &&\n                        Object.values(taskCollaborators).map((collaborator) => (\n                        <div>\n                            <p>{ collaborator.firstName } { collaborator.lastName }</p>\n                            <button key={collaborator.id} onClick={() => removeCollaborator(collaborator.id)}>\n                            X\n                            </button>\n                        </div>\n                        ))}\n\n                    {!searchInput? ( \n                        <button className=\"btn\" onClick={()=> setEditCollaborators(true)}>Add Collaborator</button>\n                    ) : ( \n                        <>\n                    <input\n                    type=\"text\"\n                    placeholder=\"Add Collaborators\"\n                    onChange={handleChange}\n                    value={searchInput}\n                    />\n                        {searchInput.length > 0 \n                            && \n                        <SearchBar\n                            onClickingAnOption={ (users, e)=> onClickingACollaborator(users, e) }\n                            optionsToDisplay={ collaboratorsToDisplay }\n                        />\n                    }\n                    <button className=\"btn\" onClick={()=>{\n                        setEditCollaborators(false)\n                        onClickingDone()\n                        }}>Done</button>\n                    </>\n                    )}\n                </div>\n                ) : (\n                    <button onClick={()=>setSearchInput(\"Please add new collaborator\")}> Add Collaborator </button>\n                )}\n                </div>\n            </div>\n            }\n\n            <div>\n                <button className='create-task-btn' onClick={()=>navigate(\"/\")}>Back to Tasks</button>\n            </div>\n            \n\n        </div>\n        \n    )\n}\n\nexport default DistinctTaskPage;"]},"metadata":{},"sourceType":"module"}