{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewGoalPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { FaBars, FaWrench, FaPlus, FaMinus } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNewGoalPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    goals,\n    goalTypesList,\n    updateAppMainStateFromComponent\n  } = _ref;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [goalSetDate, setGoalSetDate] = useState(null);\n  const [goalType, setGoalType] = useState(null);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [goalCategories, setGoalCategories] = useState([]);\n  const [editGoalCategories, setEditGoalCategories] = useState(false);\n  const [categoriesToDisplay, setCategoriesToDisplay] = useState([]);\n  const [goalActive, setGoalActive] = useState(true);\n  const {\n    get,\n    post\n  } = useContext(RequestContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let categoriesToDisplay = categories.filter(category => {\n      return category.title.toLowerCase().match(searchInput);\n    });\n    setCategoriesToDisplay(categoriesToDisplay);\n  }, [searchInput]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  const onClickingACategory = (category, e) => {\n    e.preventDefault();\n    const existingCategoryIDs = Object.values(goalCategories).map(category => category.id);\n\n    if (existingCategoryIDs.includes(category.id)) {\n      alert(\"this category has already been added\");\n    } else {\n      setGoalCategories([...goalCategories, category]);\n    }\n\n    setSearchInput(\"\");\n  };\n\n  const removeGoalCategory = categoryID => {\n    const updatedCategories = goalCategories.filter(category => category.id !== categoryID);\n    setGoalCategories(updatedCategories);\n  };\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingDone = e => {\n    e.preventDefault();\n    let newGoal = {\n      title: goalTitle,\n      type: goalType,\n      target: goalTarget,\n      startDate: goalStartDate,\n      categories: goalCategories\n    }; // console.log(\"updatedGoal\", newGoal);/////////////\n\n    post(\"goals\", newGoal); /////\n\n    updateAppMainStateFromComponent(newGoal);\n    navigate(\"/goals\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onClickingDone,\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: /*#__PURE__*/_jsxDEV(FaBars, {\n          className: \"m-4\",\n          size: \"2rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities,\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cat-header\",\n        children: \"Create Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FaWrench, {\n        className: \"wrench-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-a-goal\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-xl\",\n        children: \"Goal Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-l\",\n        children: goalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-field\",\n        type: \"text\",\n        name: \"goalTitle\",\n        id: \"goalTitle\",\n        placeholder: \"enter title\",\n        value: goalTitle,\n        onChange: e => setGoalTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-semibold text-xl\",\n          children: \" Goal Type \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: goalType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"goalType\",\n          id: \"goalType\",\n          onChange: e => setGoalType(e.target.value),\n          children: goalTypesList.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-semibold text-xl\",\n          children: \" Goal Target \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: goalTarget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-field\",\n          type: \"text\",\n          name: \"goalTarget\",\n          id: \"goalTarget\",\n          placeholder: \"in minutes\",\n          value: goalTarget,\n          onChange: e => setGoalTarget(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-semibold text-xl\",\n          children: \" Goal Start Date \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: goalStartDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"goalStartDate\",\n          id: \"goalStartDate\",\n          value: goalStartDate,\n          onChange: e => setGoalStartDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-semibold text-xl\",\n          children: \" Categories \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: goalCategories.length > 0 && Object.values(goalCategories).map(goalCategory => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [goalCategory.title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeGoalCategory(goalCategory.id),\n              children: \"X\"\n            }, goalCategory.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-field\",\n          type: \"text\",\n          placeholder: \"search here\",\n          onChange: handleChange,\n          value: searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), searchInput.length > 0 && /*#__PURE__*/_jsxDEV(SearchBar, {\n          onClickingAnOption: (category, e) => onClickingACategory(category, e),\n          optionsToDisplay: categoriesToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-goal-btn\",\n      type: \"submit\",\n      children: \" Create Goal \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddNewGoalPage, \"In6WOlWdPGvg9/SdgtRqde3BcFA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AddNewGoalPage;\nexport default AddNewGoalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewGoalPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewGoalPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","RequestContext","DropDownMenuCategory","DropDownMenuPriority","Menu","SearchBar","FaBars","FaWrench","FaPlus","FaMinus","AddNewGoalPage","categories","priorities","goals","goalTypesList","updateAppMainStateFromComponent","isMenuOpen","setIsMenuOpen","searchInput","setSearchInput","goalTitle","setGoalTitle","goalSetDate","setGoalSetDate","goalType","setGoalType","goalTarget","setGoalTarget","goalStartDate","setGoalStartDate","goalEndDate","setGoalEndDate","goalCategories","setGoalCategories","editGoalCategories","setEditGoalCategories","categoriesToDisplay","setCategoriesToDisplay","goalActive","setGoalActive","get","post","navigate","filter","category","title","toLowerCase","match","handleChange","e","preventDefault","target","value","onClickingACategory","existingCategoryIDs","Object","values","map","id","includes","alert","removeGoalCategory","categoryID","updatedCategories","closeMenuFunction","onClickingDone","newGoal","type","startDate","length","goalCategory"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,OAAnC,QAAkD,gBAAlD;;;;AAGA,MAAMC,cAAc,GAAG,QAAuF;AAAA;;AAAA,MAAtF;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,aAAjC;AAAgDC,IAAAA;AAAhD,GAAsF;AAC1G,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACgC,aAAD,EAAgBC,gBAAhB,IAAoCjC,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACkC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACoC,cAAD,EAAiBC,iBAAjB,IAAsCrC,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACsC,kBAAD,EAAqBC,qBAArB,IAA8CvC,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACwC,mBAAD,EAAsBC,sBAAtB,IAAgDzC,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAAC0C,UAAD,EAAaC,aAAb,IAA8B3C,QAAQ,CAAC,IAAD,CAA5C;AAEA,QAAM;AAAC4C,IAAAA,GAAD;AAAMC,IAAAA;AAAN,MAAc3C,UAAU,CAACG,cAAD,CAA9B;AACA,QAAMyC,QAAQ,GAAG3C,WAAW,EAA5B;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuC,mBAAmB,GAAGzB,UAAU,CAACgC,MAAX,CAAmBC,QAAD,IAAc;AACxD,aAAOA,QAAQ,CAACC,KAAT,CAAeC,WAAf,GAA6BC,KAA7B,CAAmC7B,WAAnC,CAAP;AACD,KAFyB,CAA1B;AAGAmB,IAAAA,sBAAsB,CAACD,mBAAD,CAAtB;AACD,GALM,EAKJ,CAAClB,WAAD,CALI,CAAT;;AAOA,QAAM8B,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA/B,IAAAA,cAAc,CAAC8B,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeN,WAAf,EAAD,CAAd;AACD,GAHH;;AAKA,QAAMO,mBAAmB,GAAG,CAACT,QAAD,EAAUK,CAAV,KAAgB;AACxCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMI,mBAAmB,GACzBC,MAAM,CAACC,MAAP,CAAcxB,cAAd,EAA8ByB,GAA9B,CAAkCb,QAAQ,IAC1CA,QAAQ,CAACc,EADT,CADA;;AAIA,QAAGJ,mBAAmB,CAACK,QAApB,CAA6Bf,QAAQ,CAACc,EAAtC,CAAH,EAA6C;AACzCE,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH,KAFD,MAEK;AACD3B,MAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBY,QAApB,CAAD,CAAjB;AACH;;AACDzB,IAAAA,cAAc,CAAC,EAAD,CAAd;AAED,GAbH;;AAeA,QAAM0C,kBAAkB,GAAIC,UAAD,IAAgB;AAC3C,UAAMC,iBAAiB,GAAG/B,cAAc,CAACW,MAAf,CACrBC,QAAD,IAAcA,QAAQ,CAACc,EAAT,KAAgBI,UADR,CAA1B;AAGA7B,IAAAA,iBAAiB,CAAC8B,iBAAD,CAAjB;AACC,GALD;;AAQA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B/C,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAMgD,cAAc,GAAIhB,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIgB,OAAO,GAAG;AACVrB,MAAAA,KAAK,EAAEzB,SADG;AAEV+C,MAAAA,IAAI,EAAE3C,QAFI;AAGV2B,MAAAA,MAAM,EAAEzB,UAHE;AAIV0C,MAAAA,SAAS,EAAExC,aAJD;AAKVjB,MAAAA,UAAU,EAAEqB;AALF,KAAd,CAF0B,CAS1B;;AACAS,IAAAA,IAAI,CAAC,OAAD,EAAUyB,OAAV,CAAJ,CAV0B,CAUH;;AACvBnD,IAAAA,+BAA+B,CAACmD,OAAD,CAA/B;AACAxB,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,GAbD;;AAeA,sBACI;AAAM,IAAA,QAAQ,EAAEuB,cAAhB;AAAA,eACK,CAACjD,UAAD,gBACG;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,MAAIC,aAAa,CAAC,CAACD,UAAF,CAAlC;AAAA,+BAAiD,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ,qBADH,gBAKG,QAAC,IAAD;AACI,MAAA,iBAAiB,EAAG,MAAIgD,iBAAiB,EAD7C;AAEI,MAAA,UAAU,EAAGrD,UAFjB;AAGI,MAAA,UAAU,EAAGC,UAHjB;AAII,MAAA,KAAK,EAAGC;AAJZ;AAAA;AAAA;AAAA;AAAA,YANR,eAaI;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAiBI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA,kBAAsCO;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,SAAS,EAAC,aAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,WAAhD;AAA4D,QAAA,EAAE,EAAC,WAA/D;AAA2E,QAAA,WAAW,EAAC,aAAvF;AAAqG,QAAA,KAAK,EAAEA,SAA5G;AAAuH,QAAA,QAAQ,EAAE6B,CAAC,IAAG5B,YAAY,CAAC4B,CAAC,CAACE,MAAF,CAASC,KAAV,CAAjJ;AAAmK,QAAA,QAAQ;AAA3K;AAAA;AAAA;AAAA;AAAA,cAHJ,eAIA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAO,UAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAK5B;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,IAAI,EAAC,UAAb;AAAwB,UAAA,EAAE,EAAC,UAA3B;AAAsC,UAAA,QAAQ,EAAEyB,CAAC,IAAGxB,WAAW,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV,CAA/D;AAAA,oBACKtC,aAAa,CAAC2C,GAAd,CAAkBU,IAAI,iBACnB;AAAQ,YAAA,KAAK,EAAGA,IAAhB;AAAA,sBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAcA;AAAA;AAAA;AAAA;AAAA,cAdA,eAeA;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKzC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,SAAS,EAAC,aAAjB;AAA+B,UAAA,IAAI,EAAC,MAApC;AAA2C,UAAA,IAAI,EAAC,YAAhD;AAA6D,UAAA,EAAE,EAAC,YAAhE;AAA6E,UAAA,WAAW,EAAC,YAAzF;AAAsG,UAAA,KAAK,EAAEA,UAA7G;AAAyH,UAAA,QAAQ,EAAEuB,CAAC,IAAGtB,aAAa,CAACsB,CAAC,CAACE,MAAF,CAASC,KAAV,CAApJ;AAAsK,UAAA,QAAQ;AAA9K;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfA,eAoBA;AAAA;AAAA;AAAA;AAAA,cApBA,eAqBA;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKxB;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,eAAxB;AAAwC,UAAA,EAAE,EAAC,eAA3C;AAA2D,UAAA,KAAK,EAAEA,aAAlE;AAAiF,UAAA,QAAQ,EAAEqB,CAAC,IAAGpB,gBAAgB,CAACoB,CAAC,CAACE,MAAF,CAASC,KAAV,CAA/G;AAAiI,UAAA,QAAQ;AAAzI;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArBA,eA0BA;AAAA;AAAA;AAAA;AAAA,cA1BA,eA2BA;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBACCpB,cAAc,CAACqC,MAAf,GAAwB,CAAxB,IACGd,MAAM,CAACC,MAAP,CAAcxB,cAAd,EAA8ByB,GAA9B,CAAmCa,YAAD,iBAClC;AAAA,oCACI;AAAA,yBAAIA,YAAY,CAACzB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAA8B,cAAA,OAAO,EAAE,MAAMgB,kBAAkB,CAACS,YAAY,CAACZ,EAAd,CAA/D;AAAA;AAAA,eAAaY,YAAY,CAACZ,EAA1B;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAaI;AAAO,UAAA,SAAS,EAAC,aAAjB;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,WAAW,EAAC,aAFZ;AAGA,UAAA,QAAQ,EAAEV,YAHV;AAIA,UAAA,KAAK,EAAE9B;AAJP;AAAA;AAAA;AAAA;AAAA,gBAbJ,EAmBKA,WAAW,CAACmD,MAAZ,GAAqB,CAArB,iBAED,QAAC,SAAD;AACI,UAAA,kBAAkB,EAAG,CAACzB,QAAD,EAAWK,CAAX,KAAgBI,mBAAmB,CAACT,QAAD,EAAWK,CAAX,CAD5D;AAEI,UAAA,gBAAgB,EAAGb;AAFvB;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAuEI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2EH,CApJD;;GAAM1B,c;UAgBeX,W;;;KAhBfW,c;AAsJN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { FaBars, FaWrench, FaPlus, FaMinus } from \"react-icons/fa\";\n\n\nconst AddNewGoalPage = ({ categories, priorities, goals, goalTypesList, updateAppMainStateFromComponent }) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    const [goalTitle, setGoalTitle] = useState(null);\n    const [goalSetDate, setGoalSetDate] = useState(null);\n    const [goalType, setGoalType] = useState(null);\n    const [goalTarget, setGoalTarget] = useState(null);\n    const [goalStartDate, setGoalStartDate] = useState(null);\n    const [goalEndDate, setGoalEndDate] = useState(null);\n    const [goalCategories, setGoalCategories] = useState([]);\n    const [editGoalCategories, setEditGoalCategories] = useState(false);\n    const [categoriesToDisplay, setCategoriesToDisplay] = useState([]);\n    const [goalActive, setGoalActive] = useState(true);\n\n    const {get, post} = useContext(RequestContext);\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        let categoriesToDisplay = categories.filter((category) => {\n          return category.title.toLowerCase().match(searchInput);\n        });\n        setCategoriesToDisplay(categoriesToDisplay);\n      }, [searchInput]);\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setSearchInput(e.target.value.toLowerCase());\n      };\n\n    const onClickingACategory = (category,e) => {\n        e.preventDefault();\n        const existingCategoryIDs = \n        Object.values(goalCategories).map(category => (\n        category.id\n        ));\n        if(existingCategoryIDs.includes(category.id)){\n            alert(\"this category has already been added\")\n        }else{\n            setGoalCategories([...goalCategories, category]);\n        }\n        setSearchInput(\"\");\n    \n      };\n    \n    const removeGoalCategory = (categoryID) => {\n    const updatedCategories = goalCategories.filter(\n        (category) => category.id !== categoryID\n    );\n    setGoalCategories(updatedCategories);\n    };\n\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingDone = (e) => {\n        e.preventDefault();\n        let newGoal = {\n            title: goalTitle, \n            type: goalType, \n            target: goalTarget, \n            startDate: goalStartDate,\n            categories: goalCategories\n        };\n        // console.log(\"updatedGoal\", newGoal);/////////////\n        post(\"goals\", newGoal);/////\n        updateAppMainStateFromComponent(newGoal);\n        navigate(\"/goals\");\n    }\n        \n    return(\n        <form onSubmit={onClickingDone}>\n            {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}><FaBars className='m-4' size='2rem'/></button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                    goals={ goals }\n                />\n            }\n            <div>\n                <p className='cat-header'>Create Goal</p>\n                <FaWrench className='wrench-icon'/>\n            </div>\n            <div className=\"create-a-goal\">\n                <p className='font-semibold text-xl'>Goal Title</p>\n                <h3 className='font-semibold text-l'>{goalTitle}</h3>\n                <input className=\"title-field\" type=\"text\" name=\"goalTitle\" id=\"goalTitle\" placeholder=\"enter title\" value={goalTitle} onChange={e=> setGoalTitle(e.target.value)} required/>\n            <div>\n            <br/>\n                <label className='font-semibold text-xl'> Goal Type </label>\n                <h3>{goalType}</h3>\n                <select name=\"goalType\" id=\"goalType\" onChange={e=> setGoalType(e.target.value)}>\n                    {goalTypesList.map(type => (\n                        <option value={ type }>{ type }</option>\n                    ))}\n                </select>\n            </div>\n            <br/>\n            <div>\n                <label className='font-semibold text-xl'> Goal Target </label>\n                <h3>{goalTarget}</h3>\n                <input className=\"title-field\" type=\"text\" name=\"goalTarget\" id=\"goalTarget\" placeholder=\"in minutes\" value={goalTarget} onChange={e=> setGoalTarget(e.target.value)} required/>\n            </div>\n            <br/>\n            <div>\n                <label className='font-semibold text-xl'> Goal Start Date </label>\n                <h3>{goalStartDate}</h3>\n                <input type=\"date\" name=\"goalStartDate\" id=\"goalStartDate\" value={goalStartDate} onChange={e=> setGoalStartDate(e.target.value)} required/>\n            </div>\n            <br/>\n            <div>\n                <label className='font-semibold text-xl'> Categories </label>\n                <div>\n                {goalCategories.length > 0 &&\n                    Object.values(goalCategories).map((goalCategory) => (\n                    <div>\n                        <p>{goalCategory.title} </p>\n                        <button key={goalCategory.id} onClick={() => removeGoalCategory(goalCategory.id)}>\n                        X\n                        </button>\n                    </div>\n                    ))}\n                </div>\n                <input className=\"title-field\"\n                type=\"text\"\n                placeholder=\"search here\"\n                onChange={handleChange}\n                value={searchInput}\n                />\n                {searchInput.length > 0 \n                && \n                <SearchBar\n                    onClickingAnOption={ (category, e)=> onClickingACategory(category, e) }\n                    optionsToDisplay={ categoriesToDisplay }\n                />}\n            </div>\n            </div>\n            <button className='create-goal-btn' type=\"submit\"> Create Goal </button>\n        </form>\n    )\n}\n\nexport default AddNewGoalPage;\n"]},"metadata":{},"sourceType":"module"}