{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport WholeMainPageContainer from './containers/WholeMainPageContainer';\nimport DistinctTaskPage from './containers/DistinctTaskPage';\nimport AddNewTaskPage from './containers/AddNewTaskPage';\nimport { Route, Routes } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport configData from \"./config.json\";\nimport { createRequestHelper } from './helpers/requestHelper';\nimport ProfilePage from './containers/ProfilePage';\nimport GoalsPage from './containers/GoalsPage';\nimport DistinctGoalPage from './containers/DistinctGoalPage';\nimport AddNewGoalPage from './containers/AddNewGoalPage';\nimport CategoriesPage from './containers/CategoriesPage';\nimport DistinctCategoryPage from './containers/DistinctCategoryPage';\nimport AddNewCategoryPage from './containers/AddNewCategoryPage';\nimport './styles/App.css';\nimport RequestContext from './context/RequestContext';\nimport dummyGoals from \"./helpers/dummyGoalApi.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    isAuthenticated,\n    user,\n    getAccessTokenSilently,\n    loginWithRedirect,\n    logout\n  } = useAuth0();\n  const [accessToken, setAccessToken] = useState(null);\n  const [allTasks, setAllTasks] = useState(null);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [uncompletedTasks, setUncompletedTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [priorities, setPriorities] = useState([]);\n  const [goals, setGoals] = useState([]);\n  const [goalTypesList, setGoalTypesList] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [get, setGet] = useState();\n  const [post, setPost] = useState(); // const [fetchedTasks, setFetchedTasks] = useState([]);\n\n  useEffect(() => {\n    if (!isLoaded) {\n      return;\n    }\n\n    const requestHelper = createRequestHelper(accessToken);\n    console.log(accessToken);\n    setGet(() => requestHelper.get);\n    setPost(() => requestHelper.post);\n  }, [accessToken]);\n  useEffect(() => {\n    const getAccessToken = async () => {\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: configData.audience,\n          scope: configData.scope\n        });\n        setAccessToken(accessToken);\n        setIsLoaded(true);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n\n    getAccessToken();\n  }, [getAccessTokenSilently]);\n  useEffect(() => {\n    if (!isLoaded) {\n      return;\n    }\n\n    const getTasks = async authId => {\n      get(\"tasks\").then(function (resJson) {\n        setAllTasks(resJson);\n      }).catch(e => console.log(e));\n    };\n\n    getTasks();\n    postUser();\n    getCategories();\n    getGoals();\n  }, [get, post]);\n\n  const postUser = payload => {\n    fetch('http://localhost:8080/auth0/users', {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + accessToken,\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(res => res.json()).catch(e => console.log(e));\n  };\n\n  const getCategories = () => {\n    console.log(\"categories called\"); ////////////\n\n    get(\"categories\") // .then(res=> (console.log(\"categoriesGotten\", res)))\n    .then(data => setCategories(data));\n  };\n\n  const getGoals = () => {\n    // console.log(\"goals called\", dummyGoals);////////////\n    // setGoals(dummyGoals)///////////Delete after getting it from api\"\n    get(\"goals\").then(data => setGoals(data));\n  };\n\n  useEffect(() => {\n    // setting the comleted and unclompleted tasks \n    // in different states.\n    if (allTasks) {\n      // console.log(\"allTasks\", allTasks);////////////\n      let completedHelper = [];\n      let uncompletedHelper = [];\n\n      for (let task of allTasks) {\n        if (task.completed) {\n          completedHelper.push(task);\n        } else {\n          uncompletedHelper.push(task);\n        }\n      }\n\n      setCompletedTasks(completedHelper);\n      setUncompletedTasks(uncompletedHelper);\n    }\n  }, [allTasks]);\n  useEffect(() => {\n    const dummyCategoriesList = [\"studieng\", \"playing\", \"making something beautiful\", \"get bored\", \"play tetris\"];\n    console.log(\"categories\", categories); //////////\n  }, [allTasks, categories]);\n  useEffect(() => {\n    // get the categories from api\n    const prioritiesList = [\"LOW\", \"MEDIUM\", \"HIGH\"];\n    setPriorities(prioritiesList);\n  }, [allTasks]);\n  useEffect(() => {\n    const goalTypesList = [\"DAILY\", \"WEEKLY\", \"MONTHLY\"];\n    setGoalTypesList(goalTypesList);\n  }, [goals]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Oops... \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (!isAuthenticated) {\n    return loginWithRedirect();\n  }\n\n  return /*#__PURE__*/_jsxDEV(RequestContext.Provider, {\n    value: {\n      get,\n      post\n    },\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(WholeMainPageContainer, {\n          uncompletedTasks: uncompletedTasks,\n          completedTasks: completedTasks,\n          categories: categories,\n          priorities: priorities,\n          user: user,\n          goals: goals,\n          goalTypesList: goalTypesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/task/:task_title\",\n        element: /*#__PURE__*/_jsxDEV(DistinctTaskPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/task/createNewTask\",\n        element: /*#__PURE__*/_jsxDEV(AddNewTaskPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/goals\",\n        element: /*#__PURE__*/_jsxDEV(GoalsPage, {\n          categories: categories,\n          priorities: priorities,\n          goals: goals,\n          goalTypesList: goalTypesList,\n          completedTasks: completedTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/goal/:goal_title\",\n        element: /*#__PURE__*/_jsxDEV(DistinctGoalPage, {\n          categories: categories,\n          priorities: priorities,\n          goals: goals,\n          goalTypesList: goalTypesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/goal/createNewGoal\",\n        element: /*#__PURE__*/_jsxDEV(AddNewGoalPage, {\n          categories: categories,\n          priorities: priorities,\n          goals: goals,\n          goalTypesList: goalTypesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/categories\",\n        element: /*#__PURE__*/_jsxDEV(CategoriesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/category/:category_title\",\n        element: /*#__PURE__*/_jsxDEV(DistinctCategoryPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/category/createNewCategory\",\n        element: /*#__PURE__*/_jsxDEV(AddNewCategoryPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IwAyZ5FNfSLHDfVcWEG5Y3nL/bc=\", false, function () {\n  return [useAuth0];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/App.js"],"names":["React","useState","useEffect","WholeMainPageContainer","DistinctTaskPage","AddNewTaskPage","Route","Routes","useAuth0","configData","createRequestHelper","ProfilePage","GoalsPage","DistinctGoalPage","AddNewGoalPage","CategoriesPage","DistinctCategoryPage","AddNewCategoryPage","RequestContext","dummyGoals","App","isLoading","error","isAuthenticated","user","getAccessTokenSilently","loginWithRedirect","logout","accessToken","setAccessToken","allTasks","setAllTasks","completedTasks","setCompletedTasks","uncompletedTasks","setUncompletedTasks","categories","setCategories","priorities","setPriorities","goals","setGoals","goalTypesList","setGoalTypesList","isLoaded","setIsLoaded","get","setGet","post","setPost","requestHelper","console","log","getAccessToken","audience","scope","e","message","getTasks","authId","then","resJson","catch","postUser","getCategories","getGoals","payload","fetch","method","headers","Headers","Authorization","res","json","data","completedHelper","uncompletedHelper","task","completed","push","dummyCategoriesList","prioritiesList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WholeMainPageContainer from './containers/WholeMainPageContainer';\nimport DistinctTaskPage from './containers/DistinctTaskPage';\nimport AddNewTaskPage from './containers/AddNewTaskPage';\nimport {\n  Route,\n  Routes\n} from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport configData from \"./config.json\";\nimport { createRequestHelper } from './helpers/requestHelper';\nimport ProfilePage from './containers/ProfilePage';\nimport GoalsPage from './containers/GoalsPage';\nimport DistinctGoalPage from './containers/DistinctGoalPage';\nimport AddNewGoalPage from './containers/AddNewGoalPage';\nimport CategoriesPage from './containers/CategoriesPage';\nimport DistinctCategoryPage from './containers/DistinctCategoryPage';\nimport AddNewCategoryPage from './containers/AddNewCategoryPage';\n\n\nimport './styles/App.css';\nimport RequestContext from './context/RequestContext';\nimport dummyGoals from \"./helpers/dummyGoalApi.json\"\n\nfunction App() {\n\n  const {\n    isLoading,\n    error,\n    isAuthenticated,\n    user,\n    getAccessTokenSilently,\n    loginWithRedirect,\n    logout,\n  } = useAuth0();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [allTasks, setAllTasks] = useState(null);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [uncompletedTasks, setUncompletedTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [priorities, setPriorities] = useState([]);\n  const [goals, setGoals] = useState([]);\n  const [goalTypesList, setGoalTypesList] = useState([]);\n  \n  const [isLoaded, setIsLoaded] = useState(false);\n  const [get, setGet] = useState();\n  const [post, setPost] = useState();\n\n  // const [fetchedTasks, setFetchedTasks] = useState([]);\n\n    useEffect(() => {\n      if(!isLoaded){\n        return\n      }\n      const requestHelper = createRequestHelper(accessToken);\n      console.log(accessToken)\n      setGet(()=> requestHelper.get);\n      setPost(()=> requestHelper.post);\n\n    }, [accessToken]);\n\n    useEffect(() => {\n      const getAccessToken = async () => {\n        try {\n          const accessToken = await getAccessTokenSilently({\n            audience: configData.audience,\n            scope: configData.scope,\n          });\n          setAccessToken(accessToken);\n          setIsLoaded(true);\n        } catch (e) {\n          console.log(e.message);\n        }\n      };\n      getAccessToken();\n    }, [getAccessTokenSilently]);\n\n    useEffect(() => {\n      if (!isLoaded) {\n        return;\n      }\n\n      const getTasks =  async (authId) => {\n        get(\"tasks\")\n          .then(function (resJson) {\n            setAllTasks(resJson);\n          })\n          .catch((e) => console.log(e));\n    }\n        getTasks();\n        postUser();\n        getCategories();\n        getGoals()\n    }, [get, post]);\n\n    const postUser = (payload) => {\n      fetch('http://localhost:8080/auth0/users', {\n        method: \"POST\",\n        headers: new Headers({\n          Authorization: \"Bearer \" + accessToken,\n          \"Content-Type\": \"application/json\",\n        })\n      })\n      .then(res => res.json())\n      .catch((e) => console.log(e));\n  }\n\n  const getCategories = () => {\n    console.log(\"categories called\");////////////\n    get(\"categories\")\n      // .then(res=> (console.log(\"categoriesGotten\", res)))\n    .then(data=> (setCategories(data)))\n  }\n\n  const getGoals = () => {\n    // console.log(\"goals called\", dummyGoals);////////////\n    // setGoals(dummyGoals)///////////Delete after getting it from api\"\n    get(\"goals\")\n    .then(data=> (setGoals(data)))\n  }\n\n    useEffect(() => {\n      // setting the comleted and unclompleted tasks \n      // in different states.\n      if(allTasks){\n      // console.log(\"allTasks\", allTasks);////////////\n      let completedHelper = [];\n      let uncompletedHelper = [];\n      \n        for(let task of allTasks){\n          if(task.completed){\n            completedHelper.push(task);\n\n          }else{\n            uncompletedHelper.push(task);\n\n          }\n        }\n        setCompletedTasks(completedHelper);\n        setUncompletedTasks(uncompletedHelper);\n      }\n      \n    }, [allTasks]);\n\n    useEffect(() => {\n      const dummyCategoriesList = [\"studieng\", \"playing\", \"making something beautiful\", \"get bored\", \"play tetris\"]\n      console.log(\"categories\", categories);//////////\n      \n    }, [allTasks, categories]);\n\n    useEffect(() => {\n      // get the categories from api\n      const prioritiesList = [ \"LOW\", \"MEDIUM\", \"HIGH\" ];\n      setPriorities(prioritiesList);\n      \n    }, [allTasks]);\n\n    useEffect(() => {\n      const goalTypesList = [ \"DAILY\", \"WEEKLY\", \"MONTHLY\" ];\n      setGoalTypesList(goalTypesList);\n      \n    }, [goals]);\n\n    if (error) {\n      return <div>Oops... {error.message}</div>;\n    }\n    \n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    \n    if (!isAuthenticated) {\n      return loginWithRedirect();\n    }\n\n    \n\n  return (\n    <RequestContext.Provider value={{get, post}}>\n      <Routes>\n        <Route path=\"/\" element={<WholeMainPageContainer \n          uncompletedTasks={ uncompletedTasks } \n          completedTasks={ completedTasks } \n          categories={ categories }\n          priorities={ priorities }\n          user = { user }\n          goals = { goals }\n          goalTypesList ={ goalTypesList }\n        />}/>\n        <Route path=\"/task/:task_title\" element={ <DistinctTaskPage/> }/>\n        <Route path=\"/task/createNewTask\" element={ <AddNewTaskPage/> }/>\n        <Route path=\"/goals\" element={ <GoalsPage\n          categories={ categories }\n          priorities={ priorities }\n          goals = { goals }\n          goalTypesList ={ goalTypesList }\n          completedTasks={ completedTasks } \n        /> }/>\n        <Route path=\"/goal/:goal_title\" element={ <DistinctGoalPage\n          categories={ categories }\n          priorities={ priorities }\n          goals = { goals }\n          goalTypesList ={ goalTypesList }\n        /> }/>\n        <Route path=\"/goal/createNewGoal\" element={ <AddNewGoalPage\n          categories={ categories }\n          priorities={ priorities }\n          goals = { goals }\n          goalTypesList ={ goalTypesList }\n        /> }/>\n        <Route path=\"/categories\" element={ <CategoriesPage/> }/>\n        <Route path=\"/category/:category_title\" element={ <DistinctCategoryPage/> }/>\n        <Route path=\"/category/createNewCategory\" element={ <AddNewCategoryPage/> }/>\n        <Route path=\"/profile\" element={ <ProfilePage/> }/>\n      </Routes>\n    </RequestContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}