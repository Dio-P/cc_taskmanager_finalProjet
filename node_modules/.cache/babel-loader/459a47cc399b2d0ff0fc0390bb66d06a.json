{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllGoalsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Goal from \"../components/Goal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllGoalsContainer = () => {\n  _s();\n\n  const [goalEndDate, setGoalEndDate] = useState(null);\n\n  const findGoalEndDate = (goalStartDate, daysAfter) => {\n    let endDate = new Date(goalStartDate);\n    endDate.setDate(endDate.getDate() + daysAfter);\n    console.log(\"endDate\", endDate);\n    setEditGoalEndDate(endDate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllGoalsContainer, \"j6xvshJ7OU1Gr6tX36iS+S4tScc=\");\n\n_c = AllGoalsContainer;\nexport default AllGoalsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllGoalsContainer\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllGoalsContainer.js"],"names":["useState","Goal","AllGoalsContainer","goalEndDate","setGoalEndDate","findGoalEndDate","goalStartDate","daysAfter","endDate","Date","setDate","getDate","console","log","setEditGoalEndDate"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMK,eAAe,GAAG,CAACC,aAAD,EAAgBC,SAAhB,KAA8B;AAClD,QAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASH,aAAT,CAAd;AACAE,IAAAA,OAAO,CAACE,OAAR,CAAgBF,OAAO,CAACG,OAAR,KAAoBJ,SAApC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,OAAvB;AACAM,IAAAA,kBAAkB,CAACN,OAAD,CAAlB;AACH,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlBD;;GAAMN,iB;;KAAAA,iB;AAoBN,eAAeA,iBAAf","sourcesContent":["import { useState } from \"react\";\nimport Goal from \"../components/Goal\"\n\nconst AllGoalsContainer = () => {\n    const [goalEndDate, setGoalEndDate] = useState(null);\n\n    const findGoalEndDate = (goalStartDate, daysAfter) => {\n        let endDate = new Date(goalStartDate);\n        endDate.setDate(endDate.getDate() + daysAfter);\n        console.log(\"endDate\", endDate);\n        setEditGoalEndDate(endDate);\n    }\n\n    return(\n        <div>\n            {/* { goals.map(goal => (\n                <Goal goal={goal}/>\n            )) } */}\n        </div>\n\n    )\n}\n\nexport default AllGoalsContainer"]},"metadata":{},"sourceType":"module"}