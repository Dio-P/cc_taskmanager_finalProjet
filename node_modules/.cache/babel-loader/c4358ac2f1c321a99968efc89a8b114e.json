{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewGoalPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport Menu from \"../components/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNewGoalPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    goals,\n    goalTypesList\n  } = _ref;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [goalSetDate, setGoalSetDate] = useState(null);\n  const [goalType, setGoalType] = useState(null);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [goalCategories, setGoalCategories] = useState(null);\n  const [goalActive, setGoalActive] = useState(true);\n  const {\n    get,\n    post\n  } = useContext(RequestContext); // const location = useLocation();\n  // const task = location.state.task;\n  // const categories = location.state.categories;\n  // const priorities = location.state.priorities;\n  // const goals = location.state.goals;\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingDone = e => {\n    e.preventDefault();\n    let updatedGoal = {\n      goalTitle,\n      goalType,\n      goalTarget,\n      goalStartDate\n    };\n    console.log(\"updatedGoal\", updatedGoal); /////////////\n    // post(, updatedGoal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities,\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"goalTitle\",\n        id: \"goalTitle\",\n        value: goalTitle,\n        onChange: e => setGoalTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"goalType\",\n        id: \"goalType\",\n        onChange: e => setGoalType(e.target.value),\n        children: goalTypesList.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Target \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTarget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"goalTarget\",\n        id: \"goalTarget\",\n        value: goalTarget,\n        onChange: e => setGoalTarget(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Start Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"goalStartDate\",\n        id: \"goalStartDate\",\n        value: goalStartDate,\n        onChange: e => setGoalStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => onClickingDone(e),\n      children: \" Create New Goal \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddNewGoalPage, \"z4V7RNAcMAs8ldUY9AobYNR5nwQ=\");\n\n_c = AddNewGoalPage;\nexport default AddNewGoalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewGoalPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewGoalPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","RequestContext","DropDownMenuCategory","DropDownMenuPriority","Menu","AddNewGoalPage","categories","priorities","goals","goalTypesList","isMenuOpen","setIsMenuOpen","goalTitle","setGoalTitle","goalSetDate","setGoalSetDate","goalType","setGoalType","goalTarget","setGoalTarget","goalStartDate","setGoalStartDate","goalEndDate","setGoalEndDate","goalCategories","setGoalCategories","goalActive","setGoalActive","get","post","closeMenuFunction","onClickingDone","e","preventDefault","updatedGoal","console","log","target","value","map","type"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport Menu from \"../components/Menu\";\n\nconst AddNewGoalPage = ({ categories, priorities, goals, goalTypesList }) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [goalTitle, setGoalTitle] = useState(null);\n    const [goalSetDate, setGoalSetDate] = useState(null);\n    const [goalType, setGoalType] = useState(null);\n    const [goalTarget, setGoalTarget] = useState(null);\n    const [goalStartDate, setGoalStartDate] = useState(null);\n    const [goalEndDate, setGoalEndDate] = useState(null);\n    const [goalCategories, setGoalCategories] = useState(null);\n    const [goalActive, setGoalActive] = useState(true);\n\n    const {get, post} = useContext(RequestContext);\n\n    // const location = useLocation();\n    // const task = location.state.task;\n    // const categories = location.state.categories;\n    // const priorities = location.state.priorities;\n    // const goals = location.state.goals;\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingDone = (e) => {\n        e.preventDefault();\n        let updatedGoal = {\n            goalTitle, \n            goalType, \n            goalTarget, \n            goalStartDate};\n        console.log(\"updatedGoal\", updatedGoal);/////////////\n        // post(, updatedGoal);\n    }\n        \n    return(\n        <form>\n            {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}>Menu</button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                    goals={ goals }\n                />\n            }\n            <div>\n                <label> Goal Title </label>\n                <h3>{goalTitle}</h3>\n                <input type=\"text\" name=\"goalTitle\" id=\"goalTitle\" value={goalTitle} onChange={e=> setGoalTitle(e.target.value)} required/>\n\n            </div>\n            <div>\n                <label> Goal Type </label>\n                <h3>{goalType}</h3>\n                <select name=\"goalType\" id=\"goalType\" onChange={e=> setGoalType(e.target.value)}>\n                    {goalTypesList.map(type => (\n                        <option value={ type }>{ type }</option>\n                    ))}\n                </select>\n                {/* <select type=\"text\" name=\"goalType\" id=\"goalType\" value={goalType} onChange={e=> setGoalType(e.target.value)} required/> */}\n            </div>\n            <div>\n                <label> Goal Target </label>\n                <h3>{goalTarget}</h3>\n                <input type=\"text\" name=\"goalTarget\" id=\"goalTarget\" value={goalTarget} onChange={e=> setGoalTarget(e.target.value)} required/>\n            </div>\n            <div>\n                <label> Goal Start Date </label>\n                <h3>{goalStartDate}</h3>\n                <input type=\"date\" name=\"goalStartDate\" id=\"goalStartDate\" value={goalStartDate} onChange={e=> setGoalStartDate(e.target.value)} required/>\n            </div>\n{/*             how will the categories be looked for?\n            <div>\n                <label> Goal Categories </label>\n                <h3>{goalCategories}</h3>\n                <input type=\"text\" name=\"goalCategories\" id=\"goalCategories\" value={goalSetDate} onChange={e=> setGoalCategories(e.target.value)} required/>\n            </div> */}\n            <button onClick={(e)=> onClickingDone(e)}> Create New Goal </button>\n        </form>\n    )\n}\n\nexport default AddNewGoalPage;"]},"metadata":{},"sourceType":"module"}