{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport taskList from \"./helpers/dummyTasksApi.json\";\nimport WholeMainPageContainer from './containers/WholeMainPageContainer';\nimport DistinctTaskPage from './containers/DistinctTaskPage';\nimport AddNewTaskPage from './containers/AddNewTaskPage';\nimport { Route, Routes } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport configData from \"./config.json\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    isAuthenticated,\n    user,\n    getAccessTokenSilently,\n    loginWithRedirect,\n    logout\n  } = useAuth0();\n  const [accessToken, setAccessToken] = useState(null);\n  const [allTasks, setAllTasks] = useState(null);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [uncompletedTasks, setUncompletedTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [priorities, setPriorities] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false); // const [fetchedTasks, setFetchedTasks] = useState([]);\n\n  useEffect(() => {\n    const getAccessToken = async () => {\n      try {\n        const accessToken = await getAccessTokenSilently({\n          audience: configData.audience,\n          scope: configData.scope\n        });\n        setAccessToken(accessToken);\n        setIsLoaded(true);\n      } catch (e) {\n        console.log(e.message);\n      }\n    };\n\n    getAccessToken();\n  }, [getAccessTokenSilently]); // useEffect(() => {\n  //   // the api call that will get the initial data\n  //   setAllTasks(taskList)\n  // }, []);\n\n  useEffect(() => {\n    if (!isLoaded) {\n      return;\n    }\n\n    const getTasks = async authId => {\n      fetch(\"http://localhost:8080/auth0/tasks\", {\n        method: \"GET\",\n        headers: new Headers({\n          Authorization: \"Bearer \" + accessToken,\n          \"Content-Type\": \"application/json\"\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        setAllTasks(resJson);\n      }).catch(e => console.log(e));\n    };\n\n    getTasks();\n    postUser();\n    getCategories();\n  }, [isLoaded]);\n\n  const postUser = payload => {\n    fetch('http://localhost:8080/auth0/users', {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + accessToken,\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(res => res.json()).catch(e => console.log(e));\n  };\n\n  const getCategories = () => {\n    fetch(\"http://localhost:8080/auth0/categories\").then(res => res.json()).then(data => {\n      console.log(\"data\", data);\n      setCategories(data);\n    });\n  };\n\n  useEffect(() => {\n    // setting the comleted and unclompleted tasks \n    // in different states.\n    if (allTasks) {\n      console.log(\"allTasks\", allTasks); ////////////\n\n      let completedHelper = [];\n      let uncompletedHelper = [];\n\n      for (let task of allTasks) {\n        if (task.completed) {\n          completedHelper.push(task);\n        } else {\n          uncompletedHelper.push(task);\n        }\n      }\n\n      setCompletedTasks(completedHelper);\n      setUncompletedTasks(uncompletedHelper);\n    }\n  }, [allTasks]);\n  useEffect(() => {\n    // get the categories from api\n    const dummyCategoriesList = [\"studieng\", \"playing\", \"making something beautiful\", \"get bored\", \"play tetris\"]; // console.log(\"categories\", categories);\n\n    setCategories(dummyCategoriesList);\n  }, [allTasks, categories]);\n  useEffect(() => {\n    // get the categories from api\n    const dummyPrioritiesList = [\"low\", \"medium\", \"high\"];\n    console.log(\"Priorities must have been gotten\");\n    setPriorities(dummyPrioritiesList);\n  }, [allTasks]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Oops... \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (!isAuthenticated) {\n    return loginWithRedirect();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(WholeMainPageContainer, {\n        uncompletedTasks: uncompletedTasks,\n        completedTasks: completedTasks,\n        categories: categories,\n        priorities: priorities,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/task/:task_title\",\n      element: /*#__PURE__*/_jsxDEV(DistinctTaskPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/task/createNewTask\",\n      element: /*#__PURE__*/_jsxDEV(AddNewTaskPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 51\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FWLAe7FvS02sdL2UGI9MO396h/A=\", false, function () {\n  return [useAuth0];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/App.js"],"names":["React","useState","useEffect","taskList","WholeMainPageContainer","DistinctTaskPage","AddNewTaskPage","Route","Routes","useAuth0","configData","App","isLoading","error","isAuthenticated","user","getAccessTokenSilently","loginWithRedirect","logout","accessToken","setAccessToken","allTasks","setAllTasks","completedTasks","setCompletedTasks","uncompletedTasks","setUncompletedTasks","categories","setCategories","priorities","setPriorities","isLoaded","setIsLoaded","getAccessToken","audience","scope","e","console","log","message","getTasks","authId","fetch","method","headers","Headers","Authorization","then","res","json","resJson","catch","postUser","getCategories","payload","data","completedHelper","uncompletedHelper","task","completed","push","dummyCategoriesList","dummyPrioritiesList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport taskList from \"./helpers/dummyTasksApi.json\";\nimport WholeMainPageContainer from './containers/WholeMainPageContainer';\nimport DistinctTaskPage from './containers/DistinctTaskPage';\nimport AddNewTaskPage from './containers/AddNewTaskPage';\nimport {\n  Route,\n  Routes\n} from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport configData from \"./config.json\";\n\n\nimport './App.css';\n\nfunction App() {\n\n  const {\n    isLoading,\n    error,\n    isAuthenticated,\n    user,\n    getAccessTokenSilently,\n    loginWithRedirect,\n    logout,\n  } = useAuth0();\n\n  const [accessToken, setAccessToken] = useState(null);\n  const [allTasks, setAllTasks] = useState(null);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [uncompletedTasks, setUncompletedTasks] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [priorities, setPriorities] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false); \n  // const [fetchedTasks, setFetchedTasks] = useState([]);\n\n    useEffect(() => {\n      const getAccessToken = async () => {\n        try {\n          const accessToken = await getAccessTokenSilently({\n            audience: configData.audience,\n            scope: configData.scope,\n          });\n          setAccessToken(accessToken);\n          setIsLoaded(true);\n        } catch (e) {\n          console.log(e.message);\n        }\n      };\n      getAccessToken();\n    }, [getAccessTokenSilently]);\n\n    // useEffect(() => {\n    //   // the api call that will get the initial data\n    //   setAllTasks(taskList)\n    // }, []);\n\n    useEffect(() => {\n      if (!isLoaded) {\n        return;\n      }\n\n      const getTasks =  async (authId) => {\n          fetch(\"http://localhost:8080/auth0/tasks\", \n          {\n            method: \"GET\",\n            headers: new Headers({\n            Authorization: \"Bearer \" + accessToken,\n            \"Content-Type\": \"application/json\",\n            }),\n          })\n          .then(function (res) {\n            return res.json();\n          })\n          .then(function (resJson) {\n            setAllTasks(resJson);\n          })\n          .catch((e) => console.log(e));\n    }\n        getTasks();\n        postUser();\n        getCategories();\n    }, [isLoaded]);\n\n    const postUser = (payload) => {\n      fetch('http://localhost:8080/auth0/users', {\n        method: \"POST\",\n        headers: new Headers({\n          Authorization: \"Bearer \" + accessToken,\n          \"Content-Type\": \"application/json\",\n        })\n      })\n      .then(res => res.json())\n      .catch((e) => console.log(e));\n  }\n\n  const getCategories = () => {\n    fetch(\"http://localhost:8080/auth0/categories\")\n    .then(res => res.json())\n    .then(data=> {\n      console.log(\"data\", data);\n      setCategories(data)\n    })\n  }\n\n    useEffect(() => {\n      // setting the comleted and unclompleted tasks \n      // in different states.\n      if(allTasks){\n      console.log(\"allTasks\", allTasks);////////////\n      let completedHelper = [];\n      let uncompletedHelper = [];\n      \n        for(let task of allTasks){\n          if(task.completed){\n            completedHelper.push(task);\n\n          }else{\n            uncompletedHelper.push(task);\n\n          }\n        }\n        setCompletedTasks(completedHelper);\n        setUncompletedTasks(uncompletedHelper);\n      }\n      \n    }, [allTasks]);\n\n    useEffect(() => {\n      // get the categories from api\n      const dummyCategoriesList = [\"studieng\", \"playing\", \"making something beautiful\", \"get bored\", \"play tetris\"]\n      // console.log(\"categories\", categories);\n      setCategories(dummyCategoriesList)\n      \n    }, [allTasks, categories]);\n\n    useEffect(() => {\n      // get the categories from api\n      const dummyPrioritiesList = [\"low\", \"medium\", \"high\"]\n      console.log(\"Priorities must have been gotten\");\n      setPriorities(dummyPrioritiesList)\n      \n    }, [allTasks]);\n\n    if (error) {\n      return <div>Oops... {error.message}</div>;\n    }\n    \n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    \n    if (!isAuthenticated) {\n      return loginWithRedirect();\n    }\n\n    \n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<WholeMainPageContainer \n      uncompletedTasks={ uncompletedTasks } \n      completedTasks={ completedTasks } \n      categories={ categories }\n      priorities={ priorities }\n      user = { user }\n      />}/>\n      \n      <Route path=\"/task/:task_title\" element={ <DistinctTaskPage/> }/>\n      <Route path=\"/task/createNewTask\" element={ <AddNewTaskPage/> }/>\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}