{"ast":null,"code":"export const createRequestHelper = accessToken => {\n  return {\n    get: async function (url) {\n      const response = await fetch(`http://localhost:8080/auth0/${url}`, {\n        method: \"GET\",\n        headers: new Headers({\n          Authorization: \"Bearer \" + accessToken,\n          \"Content-Type\": \"application/json\"\n        })\n      });\n      return await response.json();\n    },\n    post: async function (url, body) {\n      const response = await fetch(`http://localhost:8080/auth0/${url}`, {\n        method: \"POST\",\n        headers: new Headers({\n          Authorization: \"Bearer \" + accessToken,\n          \"Content-Type\": \"application/json\",\n          body: JSON.stringify(body)\n        })\n      });\n      return await response.json();\n    }\n  };\n}; // class RequestHelper {\n//     constructor(){\n//         this.instance = null;\n//     }\n//     getInstance() {\n//         if(this.instance === null){\n//             this.instance = new RequestHelper();\n//             delete this.instance.constructor;\n//         }\n//         return this.instance;\n//     }\n// }\n// export default RequestHelper;","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/helpers/requestHelper.js"],"names":["createRequestHelper","accessToken","get","url","response","fetch","method","headers","Headers","Authorization","json","post","body","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAIC,WAAD,IAAiB;AAChD,SAAO;AACHC,IAAAA,GAAG,EAAE,gBAAeC,GAAf,EAAmB;AACpB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BF,GAAI,EAApC,EAAuC;AAC/DG,QAAAA,MAAM,EAAE,KADuD;AAE/DC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjBC,UAAAA,aAAa,EAAE,YAAYR,WADV;AAEjB,0BAAgB;AAFC,SAAZ;AAFsD,OAAvC,CAA5B;AAOA,aAAO,MAAMG,QAAQ,CAACM,IAAT,EAAb;AACH,KAVE;AAWHC,IAAAA,IAAI,EAAE,gBAAeR,GAAf,EAAoBS,IAApB,EAAyB;AAC3B,YAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BF,GAAI,EAApC,EAAuC;AAC/DG,QAAAA,MAAM,EAAE,MADuD;AAE/DC,QAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjBC,UAAAA,aAAa,EAAE,YAAYR,WADV;AAEjB,0BAAgB,kBAFC;AAGjBW,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHW,SAAZ;AAFsD,OAAvC,CAA5B;AAQA,aAAO,MAAMR,QAAQ,CAACM,IAAT,EAAb;AACH;AArBE,GAAP;AAwBH,CAzBM,C,CAoCP;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["export const createRequestHelper = (accessToken) => {\n    return {\n        get: async function(url){\n            const response = await fetch(`http://localhost:8080/auth0/${url}`, { \n                method: \"GET\",\n                headers: new Headers({\n                    Authorization: \"Bearer \" + accessToken,\n                    \"Content-Type\": \"application/json\",\n                }),\n            })\n            return await response.json();\n        },\n        post: async function(url, body){\n            const response = await fetch(`http://localhost:8080/auth0/${url}`, { \n                method: \"POST\",\n                headers: new Headers({\n                    Authorization: \"Bearer \" + accessToken,\n                    \"Content-Type\": \"application/json\",\n                    body: JSON.stringify(body)\n                }),\n            })\n            return await response.json();\n        }\n    }\n    \n}\n\n\n\n\n\n\n\n\n\n\n// class RequestHelper {\n//     constructor(){\n//         this.instance = null;\n\n//     }\n\n//     getInstance() {\n//         if(this.instance === null){\n//             this.instance = new RequestHelper();\n//             delete this.instance.constructor;\n//         }\n//         return this.instance;\n//     }\n// }\n\n// export default RequestHelper;"]},"metadata":{},"sourceType":"module"}