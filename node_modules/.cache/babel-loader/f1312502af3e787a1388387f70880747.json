{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Goal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaBars, FaWrench, FaPlus, FaMinus } from \"react-icons/fa\";\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Goal = _ref => {\n  _s();\n\n  let {\n    goal,\n    categories,\n    priorities,\n    completedTasks\n  } = _ref;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [goalTitle, setGoalTitle] = useState(goal.title);\n  const [goalTarget, setGoalTarget] = useState(goal.target);\n  const [goalStartDate, setGoalStartDate] = useState(goal.startDate);\n  const [goalEndDate, setGoalEndDate] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [allCompletedTasksGivenPeriod, setAllCompletedTasksGivenPeriod] = useState([]);\n  const [tasksOnTarget, setTasksOnTarget] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    calculatingTargetOutcome();\n  }, []);\n  useEffect(() => {\n    calculateAllCompletedTasksGivenPeriod();\n    calculateAllCompletedTaskOfCategoryGivenPeriod();\n  }, [goalEndDate]);\n  useEffect(() => {\n    setLoading(false);\n  }, [goalTitle, goalTarget, goalStartDate, goalEndDate]);\n  useEffect(() => {\n    // setGoalTitle(goal.title);\n    // setGoalTarget(goal.target);\n    // setGoalStartDate(goal.startDate);\n    findGoalEndDate(goal);\n  }, [goal]);\n  useEffect(() => {\n    calculatingTargetOutcome();\n  }, [goalEndDate]);\n\n  const calculateAllCompletedTasksGivenPeriod = () => {\n    if (goalStartDate && goalEndDate) {\n      let periodStart = Date.parse(new Date(goalStartDate.split(\"-\")));\n      let periodEnd = Date.parse(new Date(goalEndDate.split(\"-\")));\n      let periodTaskHelper = [];\n\n      for (let task of completedTasks) {\n        if (task.completedTimeStamp >= periodStart && task.completedTimeStamp <= periodEnd) {\n          periodTaskHelper.push(task);\n        }\n\n        setAllCompletedTasksGivenPeriod(periodTaskHelper);\n      }\n    }\n  };\n\n  const calculateAllCompletedTaskOfCategoryGivenPeriod = () => {\n    console.log(\"hello from line 73\");\n\n    if (goalStartDate && goalEndDate) {\n      let periodStart = Date.parse(new Date(goalStartDate.split(\"-\")));\n      let periodEnd = Date.parse(new Date(goalEndDate.split(\"-\")));\n      let periodTaskHelper = [];\n      let idsArray = goal.categories.map(category => category.id);\n      console.log(\"periodStart\", periodStart);\n      console.log(\"periodEnd\", periodEnd);\n      console.log(\"completedTasks\", completedTasks);\n\n      for (let task of completedTasks) {\n        console.log(\"task.completedTimeStamp\", task.completedTimeStamp);\n        console.log(\"task.completedTimeStamp\", task.completedTimeStamp);\n\n        if (idsArray.includes(task.category.id)) {\n          console.log(\"task.completedTimeStamp\", task.completedTimeStamp);\n\n          if (task.completedTimeStamp >= periodStart && task.completedTimeStamp <= periodEnd) {\n            periodTaskHelper.push(task);\n            console.log(\"periodTaskHelper\", periodTaskHelper);\n          }\n        }\n      }\n\n      setTasksOnTarget(periodTaskHelper);\n    }\n  };\n\n  const translatingTheGoalTargetIntoTasksNumber = () => {\n    const numberAllTasksPeriod = allCompletedTasksGivenPeriod.length || 1; // console.log(\"numberAllTasksPeriod\", numberAllTasksPeriod);\n    // console.log(\"goalTarget\", goalTarget);\n\n    const numberOfTaksNeededToMeetTarget = goalTarget * numberAllTasksPeriod / 100; // console.log(\"numberOfTaksNeededToMeetTarget\", numberOfTaksNeededToMeetTarget);\n\n    return numberOfTaksNeededToMeetTarget;\n  };\n\n  const findDaysAfter = goal => {\n    if (goal.type === \"DAILY\") {\n      return 1;\n    }\n\n    if (goal.type === \"WEEKLY\") {\n      return 7;\n    }\n\n    if (goal.type === \"MONTHLY\") {\n      console.log(\"monthly\");\n      return \"MONTHLY\";\n    }\n  }; // change the set to return and have the set with the function as argument to when edit is pressed.\n  // move that logic to the distinct page where this might actually change\n  // should I copy this or move it all in an outside function where it could happily leave for ever?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  // because the problem is that it needs to be calculated in two places here to be desplayed and in the distinc to be changed.\n\n\n  const findGoalEndDate = goal => {\n    if (!goal) {\n      return;\n    }\n\n    let daysAfter = findDaysAfter(goal);\n    let goalStartDate = goal.startDate;\n    let endDate = new Date(goalStartDate.split(\"-\").toString());\n\n    if (goalStartDate && daysAfter) {\n      if (daysAfter === \"MONTHLY\") {\n        endDate.setMonth(endDate.getMonth() + 1);\n        setGoalEndDate(endDate.toLocaleDateString().split(\"/\").reverse().join(\"-\"));\n      } else {\n        endDate.setDate(endDate.getDate() + daysAfter);\n        setGoalEndDate(endDate.toLocaleDateString().split(\"/\").reverse().join(\"-\"));\n      }\n    }\n  };\n\n  const calculatingTargetOutcome = () => {\n    if (goalEndDate) {\n      let dateNow = Date.parse(new Date());\n      let dateEnd = Date.parse(new Date(goalEndDate.split(\"-\")));\n\n      if (dateNow <= dateEnd) {\n        return \"pending\";\n      } else {\n        console.log(\"tasksOnTarget\", tasksOnTarget);\n        console.log(\"tasksOnTarget.length\", tasksOnTarget.length);\n        console.log(\"translatingTheGoalTargetIntoTasksNumber()\", translatingTheGoalTargetIntoTasksNumber());\n\n        if (tasksOnTarget.length >= translatingTheGoalTargetIntoTasksNumber()) {\n          return \"succeeded\";\n        } else {\n          return \"failed\";\n        }\n      }\n    }\n  };\n\n  const onGoalClick = e => {\n    navigate(`/goal/:${goal.title}`, {\n      state: {\n        goal: goal,\n        // categories:categories,\n        // priorities: priorities,\n        endDate: goalEndDate\n      }\n    });\n  };\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsMenuOpen(!isMenuOpen),\n          children: /*#__PURE__*/_jsxDEV(FaBars, {\n            className: \"m-4\",\n            size: \"2rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n        closeMenuFunction: () => closeMenuFunction(),\n        categories: categories,\n        priorities: priorities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: calculatingTargetOutcome(),\n        onClick: onGoalClick,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Goal Title \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", goalTitle, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Goal Start Date \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", goalStartDate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Goal End Date \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", goalEndDate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Goal Target \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", goalTarget, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Goal, \"4oIICKi+sHxyRZ+jJVqIZiLxqjg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Goal;\nexport default Goal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goal\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Goal.js"],"names":["useState","useEffect","useNavigate","FaBars","FaWrench","FaPlus","FaMinus","Menu","Goal","goal","categories","priorities","completedTasks","isMenuOpen","setIsMenuOpen","goalTitle","setGoalTitle","title","goalTarget","setGoalTarget","target","goalStartDate","setGoalStartDate","startDate","goalEndDate","setGoalEndDate","loading","setLoading","allCompletedTasksGivenPeriod","setAllCompletedTasksGivenPeriod","tasksOnTarget","setTasksOnTarget","navigate","calculatingTargetOutcome","calculateAllCompletedTasksGivenPeriod","calculateAllCompletedTaskOfCategoryGivenPeriod","findGoalEndDate","periodStart","Date","parse","split","periodEnd","periodTaskHelper","task","completedTimeStamp","push","console","log","idsArray","map","category","id","includes","translatingTheGoalTargetIntoTasksNumber","numberAllTasksPeriod","length","numberOfTaksNeededToMeetTarget","findDaysAfter","type","daysAfter","endDate","toString","setMonth","getMonth","toLocaleDateString","reverse","join","setDate","getDate","dateNow","dateEnd","onGoalClick","e","state","closeMenuFunction"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaBars, FaWrench, FaPlus, FaMinus } from \"react-icons/fa\";\n\nimport Menu from \"./Menu\";\n\n\nconst Goal = ({ goal, categories, priorities, completedTasks }) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    const [goalTitle, setGoalTitle] = useState(goal.title);\n    const [goalTarget, setGoalTarget] = useState(goal.target);\n    const [goalStartDate, setGoalStartDate] = useState(goal.startDate);\n    const [goalEndDate, setGoalEndDate] = useState(\"\");\n    \n    const [loading, setLoading] = useState(true);\n\n    const [allCompletedTasksGivenPeriod, setAllCompletedTasksGivenPeriod] = useState([]);\n    const [tasksOnTarget, setTasksOnTarget] = useState([]);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        calculatingTargetOutcome();\n        \n    }, []);\n\n\n    useEffect(() => {\n        calculateAllCompletedTasksGivenPeriod();\n        calculateAllCompletedTaskOfCategoryGivenPeriod();\n        \n\n    }, [goalEndDate]);\n\n\n    useEffect(() => {\n        setLoading(false)\n        \n    }, [goalTitle, goalTarget, goalStartDate, goalEndDate]);\n\n\n    useEffect(() => {\n        // setGoalTitle(goal.title);\n        // setGoalTarget(goal.target);\n        // setGoalStartDate(goal.startDate);\n        findGoalEndDate(goal)\n        \n    }, [goal]);\n\n\n    useEffect(() => {\n        calculatingTargetOutcome();\n        \n    }, [goalEndDate]);\n\n    const calculateAllCompletedTasksGivenPeriod = () => {\n        if(goalStartDate&&goalEndDate){\n            let periodStart= Date.parse(new Date(goalStartDate.split(\"-\")));\n            let periodEnd= Date.parse(new Date(goalEndDate.split(\"-\")));\n            let periodTaskHelper = []\n            for(let task of completedTasks){\n                if(\n                task.completedTimeStamp>=periodStart\n                &&\n                task.completedTimeStamp<=periodEnd\n                ){\n                    periodTaskHelper.push(task);\n                }\n                setAllCompletedTasksGivenPeriod(periodTaskHelper);\n            }\n        }\n    }\n\n    const calculateAllCompletedTaskOfCategoryGivenPeriod= () => {\n        console.log(\"hello from line 73\");\n        if(goalStartDate&&goalEndDate){\n            \n            let periodStart= Date.parse(new Date(goalStartDate.split(\"-\")));\n            let periodEnd= Date.parse(new Date(goalEndDate.split(\"-\")));\n            \n            let periodTaskHelper = [];\n            let idsArray = goal.categories.map(category => category.id);\n            console.log(\"periodStart\", periodStart);\n            console.log(\"periodEnd\", periodEnd);\n            console.log(\"completedTasks\", completedTasks);\n            for(let task of completedTasks){\n                console.log(\"task.completedTimeStamp\", task.completedTimeStamp);\n                console.log(\"task.completedTimeStamp\", task.completedTimeStamp);\n                \n                if(idsArray.includes(task.category.id)){\n                    console.log(\"task.completedTimeStamp\", task.completedTimeStamp);\n                    \n                    if(\n                        task.completedTimeStamp>=periodStart\n                    &&\n                        task.completedTimeStamp<=periodEnd\n                    ){\n                        periodTaskHelper.push(task);\n                        console.log(\"periodTaskHelper\", periodTaskHelper);\n                        \n                    }\n                    \n                }\n                \n            }\n            setTasksOnTarget(periodTaskHelper);\n            \n        }  \n    }\n\n    const translatingTheGoalTargetIntoTasksNumber = () => {\n        const numberAllTasksPeriod = allCompletedTasksGivenPeriod.length||1;\n        // console.log(\"numberAllTasksPeriod\", numberAllTasksPeriod);\n        // console.log(\"goalTarget\", goalTarget);\n        const numberOfTaksNeededToMeetTarget = (goalTarget * numberAllTasksPeriod) / 100;\n        // console.log(\"numberOfTaksNeededToMeetTarget\", numberOfTaksNeededToMeetTarget);\n        return numberOfTaksNeededToMeetTarget\n        \n    }\n\n    const findDaysAfter = (goal) => {\n        if(goal.type===\"DAILY\"){\n            return 1;\n\n        }if(goal.type===\"WEEKLY\"){\n            return 7;\n            \n        }if(goal.type===\"MONTHLY\"){\n            console.log(\"monthly\");\n            return \"MONTHLY\";\n            \n        } \n    }\n    // change the set to return and have the set with the function as argument to when edit is pressed.\n    // move that logic to the distinct page where this might actually change\n    // should I copy this or move it all in an outside function where it could happily leave for ever?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    // because the problem is that it needs to be calculated in two places here to be desplayed and in the distinc to be changed.\n\n    const findGoalEndDate = (goal) => {\n        if(!goal){return}\n        let daysAfter = findDaysAfter(goal);\n        let goalStartDate = goal.startDate;\n    \n        let endDate = new Date(goalStartDate.split(\"-\").toString());\n        if(goalStartDate && daysAfter){\n            if(daysAfter===\"MONTHLY\"){\n                endDate.setMonth(endDate.getMonth() + 1);\n                setGoalEndDate(endDate.toLocaleDateString().split(\"/\").reverse().join(\"-\"));\n\n            }else{\n                endDate.setDate(endDate.getDate() + daysAfter);\n                setGoalEndDate(endDate.toLocaleDateString().split(\"/\").reverse().join(\"-\"));\n\n            }\n        }\n    }\n\n    const calculatingTargetOutcome = () => {\n        if(goalEndDate){\n            let dateNow = Date.parse(new Date());\n            let dateEnd = Date.parse(new Date(goalEndDate.split(\"-\")));\n            if(dateNow <= dateEnd){\n                return \"pending\"\n\n            }else{\n                console.log(\"tasksOnTarget\", tasksOnTarget);\n                console.log(\"tasksOnTarget.length\", tasksOnTarget.length);\n                console.log(\"translatingTheGoalTargetIntoTasksNumber()\", translatingTheGoalTargetIntoTasksNumber());\n                if(tasksOnTarget.length >= translatingTheGoalTargetIntoTasksNumber()){\n                    return \"succeeded\"\n\n                }else{\n                    return \"failed\"\n\n                }\n            }\n        }\n    }\n\n    const onGoalClick = (e) => {\n        navigate(`/goal/:${goal.title}`, {\n            state: {\n                goal:goal,\n                // categories:categories,\n                // priorities: priorities,\n                endDate: goalEndDate\n\n            }\n        })\n    }\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n\n    return(\n        <div>\n            {loading?\n            <p>Loading...</p>\n            :\n            <div>\n                {!isMenuOpen?\n                    <>\n                        <button onClick={()=>setIsMenuOpen(!isMenuOpen)}><FaBars className='m-4' size='2rem'/></button>\n                    </>\n                : \n                    <Menu\n                        closeMenuFunction={ ()=>closeMenuFunction() }\n                        categories={ categories }\n                        priorities={ priorities }\n                    />\n                }\n                <div className={calculatingTargetOutcome()} onClick={ onGoalClick }>\n                    <>\n                        <div>\n                            <label> Goal Title </label>\n                            <p> {goalTitle} </p>\n                        </div>\n                        <div>\n                            <label> Goal Start Date </label>\n                            <p> {goalStartDate} </p>\n                        </div>\n                        <div>\n                            <label> Goal End Date </label>\n                            <p> {goalEndDate} </p>\n                        </div>\n                        <div>\n                            <label> Goal Target </label>\n                            <p> {goalTarget} </p>\n                        </div>\n                    </>\n                </div>\n            </div>\n            }\n            \n        </div>\n\n    )\n}\n\nexport default Goal;\n"]},"metadata":{},"sourceType":"module"}