{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctTaskPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    users,\n    updateAppMainStateFromComponent\n  } = _ref;\n  const location = useLocation();\n  const task = location.state.task; // const categories = location.state.categories;\n  // const priorities = location.state.priorities;\n\n  const [loading, setLoading] = useState(true);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [editTitle, setEditTitle] = useState(false);\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [taskCompleted, setTaskCompleted] = useState(task.completed); ///////////\n\n  const [editCategory, setEditCategory] = useState(false);\n  const [taskCategory, setTaskCategory] = useState(task.category);\n  const [editPriority, setEditPriority] = useState(false);\n  const [taskPriority, setTaskPriority] = useState(task.priority);\n  const [editDescription, setEditDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(task.description);\n  const [editDate, setEditDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(task.date);\n  const [editTime, setEditTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(task.time);\n  const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n  const [datedTaskType, setDatedTaskType] = useState(task.type);\n  const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n  const [editDuration, setEditDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(task.duration);\n  const [editCollaborators, setEditCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  const [collaboratorsToDisplay, setCollaboratorsToDisplay] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const {\n    get,\n    post,\n    put\n  } = useContext(RequestContext);\n  useEffect(() => {\n    setLoading(false);\n  }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n  useEffect(() => {\n    let collaboratorsToDisplay = users.filter(user => {\n      return user.firstName.toLowerCase().match(searchInput);\n    });\n    setCollaboratorsToDisplay(collaboratorsToDisplay);\n  }, [searchInput]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  const onClickingACollaborator = (collaborator, e) => {\n    e.preventDefault();\n    setTaskCollaborators([...taskCollaborators, collaborator]);\n  };\n\n  const removeCollaborator = colaboratorID => {\n    const newCollaborators = taskCollaborators.filter(category => category.id !== colaboratorID);\n    setTaskCollaborators(newCollaborators);\n  };\n\n  const setCategoryFromDropDown = choosenOption => {\n    setTaskCategory(choosenOption);\n  };\n\n  const setPriorityFromDropDown = choosenOption => {\n    setTaskPriority(choosenOption);\n  };\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingComplete = () => {\n    console.log(\"inside Complete\");\n    setTaskCompleted(!taskCompleted);\n\n    if (!completedTimeStamp) {\n      let timestamp = Date.parse(new Date());\n      setCompletedTimeStamp(timestamp);\n    } else {\n      setCompletedTimeStamp(null);\n    }\n  };\n\n  const onClickingDone = () => {\n    const updatedTask = {};\n    updatedTask[\"title\"] = taskTitle;\n    updatedTask[\"category\"] = taskCategory;\n    updatedTask[\"priority\"] = taskPriority;\n    updatedTask[\"completed\"] = taskCompleted;\n    updatedTask[\"completedTimeStamp\"] = completedTimeStamp;\n\n    if (taskDescription) {\n      updatedTask[\"description\"] = taskDescription;\n    }\n\n    if (taskDate) {\n      updatedTask[\"date\"] = taskDate;\n      updatedTask[\"type\"] = datedTaskType;\n    } else {\n      updatedTask[\"type\"] = \"SOMEDAY\";\n    }\n\n    if (taskTime) {\n      updatedTask[\"time\"] = taskTime;\n    }\n\n    if (taskDuration) {\n      updatedTask[\"duration\"] = taskDuration;\n    }\n\n    console.log(\"updatedTask\", updatedTask); /////////////\n\n    put(`tasks/${task.id}`, updatedTask); // updateAppMainStateFromComponent(updatedTask)\n    // redirect to home page            \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsMenuOpen(!isMenuOpen),\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n        closeMenuFunction: () => closeMenuFunction(),\n        categories: categories,\n        priorities: priorities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTitle(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskTitle\",\n            id: \"taskTitle\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditTitle(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => {\n            onClickingComplete();\n          },\n          checked: taskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskCategory.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), !editCategory ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditCategory(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenuCategory, {\n            options: categories,\n            setValueFromDropDown: choosenOption => setCategoryFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditCategory(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), !editPriority ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditPriority(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenuPriority, {\n            options: priorities,\n            setValueFromDropDown: choosenOption => setPriorityFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditPriority(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), taskDescription ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), !editDescription ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDescription(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDescription\",\n            id: \"taskDescription\",\n            value: taskDescription,\n            onChange: e => setTaskDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditDescription(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this) : null, taskDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: taskDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), !editDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditDate(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"taskDate\",\n              id: \"taskDate\",\n              value: taskDate,\n              onChange: e => setTaskDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditDate(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_ON\",\n            checked: datedTaskType === \"DO_ON\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_BY\",\n            checked: datedTaskType === \"DO_BY\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this) : null, taskTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDate\",\n          children: \"Task Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this), !editTime ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTime(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"taskDate\",\n            id: \"taskDate\",\n            value: taskTime,\n            onChange: e => setTaskTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditTime(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this) : null, taskDuration ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDuration\",\n          children: \"Task Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this), !editDuration ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDuration(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDuration\",\n            id: \"taskDuration\",\n            placeholder: \"in minutes\",\n            value: taskDuration,\n            onChange: e => setTaskDuration(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditDuration(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this) : null, taskCollaborators ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Collaborators \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), taskCollaborators.length > 0 && Object.values(taskCollaborators).map(collaborator => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [collaborator.firstName, \" \", collaborator.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCollaborator(collaborator.id),\n            children: \"X\"\n          }, collaborator.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)), !editCollaborators ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditCollaborators(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add Collaborators\",\n            onChange: handleChange,\n            value: searchInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 21\n          }, this), searchInput.length > 0 && /*#__PURE__*/_jsxDEV(SearchBar, {\n            onClickingAnOption: (users, e) => onClickingACollaborator(users, e),\n            optionsToDisplay: collaboratorsToDisplay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditCollaborators(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctTaskPage, \"SB7CdMQvT/ZQEPy8+Y9wfVrIPXY=\", false, function () {\n  return [useLocation];\n});\n\n_c = DistinctTaskPage;\nexport default DistinctTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","DropDownMenuCategory","DropDownMenuPriority","RequestContext","Menu","SearchBar","DistinctTaskPage","categories","priorities","users","updateAppMainStateFromComponent","location","task","state","loading","setLoading","isMenuOpen","setIsMenuOpen","editTitle","setEditTitle","taskTitle","setTaskTitle","title","taskCompleted","setTaskCompleted","completed","editCategory","setEditCategory","taskCategory","setTaskCategory","category","editPriority","setEditPriority","taskPriority","setTaskPriority","priority","editDescription","setEditDescription","taskDescription","setTaskDescription","description","editDate","setEditDate","taskDate","setTaskDate","date","editTime","setEditTime","taskTime","setTaskTime","time","editdatedTaskType","setEditdatedTaskType","datedTaskType","setDatedTaskType","type","completedTimeStamp","setCompletedTimeStamp","editDuration","setEditDuration","taskDuration","setTaskDuration","duration","editCollaborators","setEditCollaborators","taskCollaborators","setTaskCollaborators","collaboratorsToDisplay","setCollaboratorsToDisplay","searchInput","setSearchInput","get","post","put","filter","user","firstName","toLowerCase","match","handleChange","e","preventDefault","target","value","onClickingACollaborator","collaborator","removeCollaborator","colaboratorID","newCollaborators","id","setCategoryFromDropDown","choosenOption","setPriorityFromDropDown","closeMenuFunction","onClickingComplete","console","log","timestamp","Date","parse","onClickingDone","updatedTask","length","Object","values","map","lastName"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\n\nconst DistinctTaskPage = ({ categories, priorities, users, updateAppMainStateFromComponent }) => {\n    const location = useLocation();\n    const task = location.state.task;\n    // const categories = location.state.categories;\n    // const priorities = location.state.priorities;\n\n    const [loading, setLoading] = useState(true);\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    const [editTitle, setEditTitle] = useState(false);\n    const [taskTitle, setTaskTitle] = useState(task.title);\n    \n    const [taskCompleted, setTaskCompleted] = useState(task.completed);///////////\n\n    const [editCategory, setEditCategory] = useState(false);\n    const [taskCategory, setTaskCategory] = useState(task.category);\n    const [editPriority, setEditPriority] = useState(false);\n    const [taskPriority, setTaskPriority] = useState(task.priority);\n    \n\n    const [editDescription, setEditDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(task.description);\n    const [editDate, setEditDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(task.date);\n    const [editTime, setEditTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(task.time);\n    const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n    const [datedTaskType, setDatedTaskType] = useState(task.type);\n    const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n    \n    \n\n    const [editDuration, setEditDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(task.duration);\n    const [editCollaborators, setEditCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n    const [collaboratorsToDisplay, setCollaboratorsToDisplay] = useState([]);\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    const {get, post, put} = useContext(RequestContext);\n    \n    useEffect(() => {\n        setLoading(false)\n        \n    }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n\n    useEffect(() => {\n        let collaboratorsToDisplay = users.filter((user) => {\n          return user.firstName.toLowerCase().match(searchInput);\n        });\n        setCollaboratorsToDisplay(collaboratorsToDisplay);\n      }, [searchInput]);\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setSearchInput(e.target.value.toLowerCase());\n      };\n\n    const onClickingACollaborator = (collaborator,e) => {\n        e.preventDefault();\n        setTaskCollaborators([...taskCollaborators, collaborator]);\n    \n      };\n    \n    const removeCollaborator = (colaboratorID) => {\n    const newCollaborators = taskCollaborators.filter(\n        (category) => category.id !== colaboratorID\n    );\n    setTaskCollaborators(newCollaborators);\n    };\n    \n    const setCategoryFromDropDown = (choosenOption) => {\n        setTaskCategory(choosenOption);\n    }\n\n    const setPriorityFromDropDown = (choosenOption) => {\n            setTaskPriority(choosenOption);\n    }\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingComplete = () => {\n        console.log(\"inside Complete\");\n        setTaskCompleted(!taskCompleted)\n        if(!completedTimeStamp){\n            let timestamp = Date.parse(new Date());\n            setCompletedTimeStamp(timestamp);\n        }else{\n            setCompletedTimeStamp(null);\n        }\n    }\n\n    const onClickingDone = () => {\n        const updatedTask= { }\n        updatedTask[\"title\"] = taskTitle;\n        updatedTask[\"category\"] = taskCategory;\n        updatedTask[\"priority\"] = taskPriority;\n        updatedTask[\"completed\"]=taskCompleted;\n        updatedTask[\"completedTimeStamp\"]=completedTimeStamp;\n\n        if(taskDescription){\n            updatedTask[\"description\"]=taskDescription;\n        }\n        if(taskDate){\n            updatedTask[\"date\"]=taskDate;\n            updatedTask[\"type\"]=datedTaskType;\n        }else{\n            updatedTask[\"type\"]=\"SOMEDAY\";\n\n        }\n        if(taskTime){\n            updatedTask[\"time\"]=taskTime;\n        }\n        if(taskDuration){\n            updatedTask[\"duration\"]=taskDuration;\n        }\n        \n        console.log(\"updatedTask\", updatedTask);/////////////\n        \n        put(`tasks/${task.id}`, updatedTask)\n        // updateAppMainStateFromComponent(updatedTask)\n        \n        // redirect to home page            \n    }\n\n    return (\n        \n\n        <div>\n            {loading?\n            <h3>Loading</h3>\n            :\n\n            <div>\n                {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}>Menu</button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n            }\n                \n                <div>\n                    <label>Task Title</label>\n                    <h3>{taskTitle}</h3>\n                    {!editTitle?\n                        <button onClick={()=>setEditTitle(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                            <button onClick={()=>{\n                                setEditTitle(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }  \n                </div>\n                \n                <div>\n                    <label>Completed</label>\n                    <input type=\"checkbox\" onClick={()=>{onClickingComplete()}} checked={taskCompleted}/>\n                </div>\n            \n\n                <div>\n                    <label>Category</label>\n                    <p>{ taskCategory.title }</p>\n                    {!editCategory?\n                        <button onClick={()=>setEditCategory(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuCategory options={ categories } setValueFromDropDown={(choosenOption)=> setCategoryFromDropDown(choosenOption)}/>\n                            <button onClick={()=>{\n                                setEditCategory(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                <div>\n                    <label>Priority</label>\n                    <p>{ taskPriority }</p>\n                    {!editPriority?\n                        <button onClick={()=>setEditPriority(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuPriority options={ priorities } setValueFromDropDown={(choosenOption)=> setPriorityFromDropDown(choosenOption)}/>\n                            <button onClick={()=>{\n                                setEditPriority(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                {taskDescription?\n                <div>\n                    <label> Description </label>\n                    <p>{ taskDescription }</p>\n                    {!editDescription?\n                        <button onClick={()=>setEditDescription(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" value={taskDescription} onChange={e=> setTaskDescription(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditDescription(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                }\n                \n\n                {taskDate?\n                <div>\n\n                    <div>\n                        <label> Date </label>\n                        <p>{ taskDate }</p>\n                        {!editDate?\n                            <button onClick={()=>setEditDate(true)}>Edit</button>\n                        :\n                            <>\n                                <input type=\"date\" name=\"taskDate\" id=\"taskDate\" value={taskDate} onChange={e=> setTaskDate(e.target.value)}/>\n                                <button onClick={()=>{\n                                setEditDate(false)\n                                onClickingDone()\n                                }}>Done</button>\n                            </>\n                        }\n                    </div>\n\n                    <div>\n                        <label> Type </label>\n                        <label htmlFor=\"taskDate\">Do On</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_ON\" \n                            checked={datedTaskType===\"DO_ON\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                        <label htmlFor=\"taskDate\">Do By</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_BY\" \n                            checked={datedTaskType===\"DO_BY\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                    </div>\n\n                </div>\n                        :\n                            null  \n                }\n\n\n                {taskTime?\n                <div>\n                    <label htmlFor=\"taskDate\">Task Time</label>\n                    <p>{ taskTime }</p>\n                    {!editTime?\n                        <button onClick={()=> setEditTime(true)}>Edit</button>   \n                    :\n                        <>\n                            <input type=\"time\" name=\"taskDate\" id=\"taskDate\" value={taskTime} onChange={e=> setTaskTime(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditTime(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }    \n                </div>\n                :\n                    null\n                }\n\n\n                {taskDuration?\n                <div>\n                    <label htmlFor=\"taskDuration\">Task Duration</label>\n                    <p>{ taskDuration }</p>\n                    {!editDuration?\n                        <button onClick={()=> setEditDuration(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDuration\" id=\"taskDuration\" placeholder=\"in minutes\" value={taskDuration} onChange={e=> setTaskDuration(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditDuration(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                } \n                \n\n\n                {taskCollaborators? (   \n                <div>\n                    <label> Collaborators </label>\n                    {taskCollaborators.length > 0 &&\n                        Object.values(taskCollaborators).map((collaborator) => (\n                        <div>\n                            <p>{ collaborator.firstName } { collaborator.lastName }</p>\n                            <button key={collaborator.id} onClick={() => removeCollaborator(collaborator.id)}>\n                            X\n                            </button>\n                        </div>\n                        ))}\n\n                    {!editCollaborators? ( \n                        <button onClick={()=> setEditCollaborators(true)}>Edit</button>\n                    ) : ( \n                        <>\n                    <input\n                    type=\"text\"\n                    placeholder=\"Add Collaborators\"\n                    onChange={handleChange}\n                    value={searchInput}\n                    />\n                        {searchInput.length > 0 \n                            && \n                        <SearchBar\n                            onClickingAnOption={ (users, e)=> onClickingACollaborator(users, e) }\n                            optionsToDisplay={ collaboratorsToDisplay }\n                        />\n                    }\n                    <button onClick={()=>{\n                        setEditCollaborators(false)\n                        onClickingDone()\n                        }}>Done</button>\n                    </>\n                    )}\n                </div>\n                ) : (\n                    null\n                )}\n                \n            </div>\n            }\n\n        </div>\n    )\n}\n\nexport default DistinctTaskPage;"]},"metadata":{},"sourceType":"module"}