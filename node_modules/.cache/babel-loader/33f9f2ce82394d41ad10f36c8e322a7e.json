{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Goal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Goal = _ref => {\n  _s();\n\n  let {\n    goal,\n    categories,\n    priorities,\n    completedTasks\n  } = _ref;\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [allTaskGivenPeriod, setAllTaskGivenPeriod] = useState(null);\n  const [allCategoryTaskGivenPeriod, setAllCategoryTaskGivenPeriod] = useState(null);\n  const [tasksOnTarget, setTasksOnTarget] = useState(null);\n  const [goalTask, setGoalTask] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    calculatingTargetOutcome();\n  }, []); // useEffect(() => {\n  //     calculatingTargetOutcome();\n  // }, [goalStartDate]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [goalTitle, goalTarget, goalStartDate, goalEndDate]);\n  useEffect(() => {\n    setGoalTitle(goal.title);\n    setGoalTarget(goal.target);\n    setGoalStartDate(goal.startDate);\n    findGoalEndDate(goal);\n  }, [goal]); // useEffect(() => {\n  //     calculatingTargetOutcome();\n  // }, [goalStartDate]);\n\n  useEffect(() => {\n    calculatingTargetOutcome();\n  }, [goalEndDate]);\n\n  const findDaysAfter = goal => {\n    console.log(\"within find days after\");\n\n    if (goal.type === \"DAILY\") {\n      console.log(\"of daily type\"); ///////\n\n      console.log(\"1 to be returned\"); ///////\n\n      return 1;\n    }\n\n    if (goal.type === \"WEEKLY\") {\n      console.log(\"of weekly type\"); ///////\n\n      console.log(\"7 to be returned\"); ///////\n\n      return 7;\n    }\n\n    if (goal.type === \"MONTHLY\") {\n      // return 30;\n      console.log(\"of monthly type\"); ///////\n\n      console.log(\"monthly to be returned\"); ///////\n\n      return \"MONTHLY\";\n    }\n  }; // change the set to return and have the set with the function as argument to when edit is pressed.\n  // move that logic to the distinct page where this might actually change\n  // should I copy this or move it all in an outside function where it could happily leave for ever?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n  // because the problem is that it needs to be calculated in two places here to be desplayed and in the distinc to be changed.\n\n\n  const findGoalEndDate = goal => {\n    console.log(\"within find goals end date\"); //////////\n\n    let daysAfter = findDaysAfter(goal);\n    let goalStartDate = goal.startDate;\n    let endDate = new Date(goalStartDate.split(\"/\").reverse().toString());\n    console.log(\"endDate\", endDate); //////////\n\n    if (goalStartDate && daysAfter) {\n      if (daysAfter === \"MONTHLY\") {\n        endDate.setMonth(endDate.getMonth() + 1);\n        setGoalEndDate(endDate.toLocaleDateString());\n      } else {\n        endDate.setDate(endDate.getDate() + daysAfter);\n        setGoalEndDate(endDate.toLocaleDateString());\n      }\n    }\n  };\n\n  const calculateAllCompletedTasksGivenPeriod = () => {\n    let periodStart = Date.parse(new Date(goalStartDate.split(\"/\").reverse()));\n    let periodEnd = Date.parse(new Date(goalEndDate.split(\"/\").reverse()));\n    Date.parse(new Date());\n\n    for (let task of completedTasks) {\n      if (completedTasks.completedTimeStamp) {///is withing goal period ??????\n      }\n    }\n  };\n\n  const calculateAllCompletedTaskOfGoalGivenPeriod = () => {};\n\n  const calculatingTargetOutcome = () => {\n    if (goalEndDate) {\n      let dateNow = Date.parse(new Date()); // console.log(\"endDate\", goalEndDate);//////////\n\n      let dateEnd = Date.parse(new Date(goalEndDate.split(\"/\").reverse()));\n      console.log(\"dateEnd\", dateEnd); //////////////\n\n      if (dateNow <= dateEnd) {\n        console.log(\"penidng\"); ////////////\n\n        return \"penidng\";\n      } else {\n        if (tasksOnTarget.length() >= goalTask) {\n          console.log(\"succeeded\"); //////////\n\n          return \"succeeded\";\n        } else {\n          console.log(\"failed\"); ///////\n\n          return \"failed\";\n        }\n      }\n    }\n  };\n\n  const onGoalClick = e => {\n    console.log(\"a goal has been clicked\", goal); /////////\n\n    navigate(`/goal/:${goal.title}`, {\n      state: {\n        goal: goal,\n        categories: categories,\n        priorities: priorities,\n        endDate: goalEndDate\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onGoalClick,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalTitle, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal Start Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalStartDate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal End Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalEndDate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal Target \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalTarget, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), \"See Goal Details \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Goal, \"E/DtHYMjvj7D4way12JGJf46ERg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Goal;\nexport default Goal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goal\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Goal.js"],"names":["useState","useEffect","useNavigate","Goal","goal","categories","priorities","completedTasks","goalTitle","setGoalTitle","goalTarget","setGoalTarget","goalStartDate","setGoalStartDate","goalEndDate","setGoalEndDate","loading","setLoading","allTaskGivenPeriod","setAllTaskGivenPeriod","allCategoryTaskGivenPeriod","setAllCategoryTaskGivenPeriod","tasksOnTarget","setTasksOnTarget","goalTask","setGoalTask","navigate","calculatingTargetOutcome","title","target","startDate","findGoalEndDate","findDaysAfter","console","log","type","daysAfter","endDate","Date","split","reverse","toString","setMonth","getMonth","toLocaleDateString","setDate","getDate","calculateAllCompletedTasksGivenPeriod","periodStart","parse","periodEnd","task","completedTimeStamp","calculateAllCompletedTaskOfGoalGivenPeriod","dateNow","dateEnd","length","onGoalClick","e","state"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst Goal = ({ goal, categories, priorities, completedTasks }) => {\n    const [goalTitle, setGoalTitle] = useState(null);\n    const [goalTarget, setGoalTarget] = useState(null);\n    const [goalStartDate, setGoalStartDate] = useState(null);\n    const [goalEndDate, setGoalEndDate] = useState(null);\n    \n    const [loading, setLoading] = useState(true);\n\n    const [allTaskGivenPeriod, setAllTaskGivenPeriod] = useState(null);\n    const [allCategoryTaskGivenPeriod, setAllCategoryTaskGivenPeriod] = useState(null);\n    const [tasksOnTarget, setTasksOnTarget] = useState(null);\n    const [goalTask, setGoalTask] = useState(null);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        calculatingTargetOutcome();\n        \n\n    }, []);\n\n    // useEffect(() => {\n    //     calculatingTargetOutcome();\n\n    // }, [goalStartDate]);\n\n\n    useEffect(() => {\n        setLoading(false)\n        \n    }, [goalTitle, goalTarget, goalStartDate, goalEndDate]);\n\n    useEffect(() => {\n        setGoalTitle(goal.title);\n        setGoalTarget(goal.target);\n        setGoalStartDate(goal.startDate);\n        findGoalEndDate(goal)\n        \n    }, [goal]);\n\n    // useEffect(() => {\n    //     calculatingTargetOutcome();\n        \n    // }, [goalStartDate]);\n\n    useEffect(() => {\n        calculatingTargetOutcome();\n        \n    }, [goalEndDate]);\n\n    const findDaysAfter = (goal) => {\n        console.log(\"within find days after\");\n        if(goal.type===\"DAILY\"){\n            console.log(\"of daily type\");///////\n            console.log(\"1 to be returned\");///////\n            return 1;\n\n        }if(goal.type===\"WEEKLY\"){\n            console.log(\"of weekly type\");///////\n            console.log(\"7 to be returned\");///////\n            return 7;\n            \n        }if(goal.type===\"MONTHLY\"){\n            // return 30;\n            console.log(\"of monthly type\");///////\n            console.log(\"monthly to be returned\");///////\n            return \"MONTHLY\";\n            \n        } \n    }\n    // change the set to return and have the set with the function as argument to when edit is pressed.\n    // move that logic to the distinct page where this might actually change\n    // should I copy this or move it all in an outside function where it could happily leave for ever?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    // because the problem is that it needs to be calculated in two places here to be desplayed and in the distinc to be changed.\n\n    const findGoalEndDate = (goal) => {\n        console.log(\"within find goals end date\");//////////\n        let daysAfter = findDaysAfter(goal);\n        let goalStartDate = goal.startDate;\n        let endDate = new Date(goalStartDate.split(\"/\").reverse().toString());\n        console.log(\"endDate\", endDate);//////////\n        if(goalStartDate && daysAfter){\n            if(daysAfter===\"MONTHLY\"){\n                endDate.setMonth(endDate.getMonth() + 1);\n                setGoalEndDate(endDate.toLocaleDateString());\n\n            }else{\n                endDate.setDate(endDate.getDate() + daysAfter);\n                setGoalEndDate(endDate.toLocaleDateString());\n\n            }\n        }\n    }\n\n    const calculateAllCompletedTasksGivenPeriod = () => {\n        let periodStart= Date.parse(new Date(goalStartDate.split(\"/\").reverse()));\n        let periodEnd= Date.parse(new Date(goalEndDate.split(\"/\").reverse()));\n        Date.parse(new Date());\n        for(let task of completedTasks){\n            if(completedTasks.completedTimeStamp){///is withing goal period ??????\n\n            }\n\n        }\n    }\n\n    const calculateAllCompletedTaskOfGoalGivenPeriod= () => {\n        \n    }\n\n    const calculatingTargetOutcome = () => {\n        if(goalEndDate){\n            let dateNow = Date.parse(new Date());\n            // console.log(\"endDate\", goalEndDate);//////////\n            let dateEnd = Date.parse(new Date(goalEndDate.split(\"/\").reverse()));\n            console.log(\"dateEnd\", dateEnd);//////////////\n            if(dateNow <= dateEnd){\n                console.log(\"penidng\");////////////\n                return \"penidng\"\n\n            }else{\n                if(tasksOnTarget.length() >= goalTask){\n                    console.log(\"succeeded\");//////////\n                    return \"succeeded\"\n\n                }else{\n                    console.log(\"failed\");///////\n                    return \"failed\"\n\n                }\n            }\n        }\n    }\n\n    const onGoalClick = (e) => {\n        console.log(\"a goal has been clicked\", goal);/////////\n        navigate(`/goal/:${goal.title}`, {\n            state: {\n                goal:goal,\n                categories:categories,\n                priorities: priorities,\n                endDate: goalEndDate\n            }\n        })\n    }\n\n\n    return(\n        <div>\n            {loading?\n            <p>Loading...</p>\n            :\n            <button onClick={ onGoalClick }><>\n                <div>\n                    <label> Goal Title </label>\n                    <p> {goalTitle} </p>\n                </div>\n                <div>\n                    <label> Goal Start Date </label>\n                    <p> {goalStartDate} </p>\n                </div>\n                <div>\n                    <label> Goal End Date </label>\n                    <p> {goalEndDate} </p>\n                </div>\n                <div>\n                    <label> Goal Target </label>\n                    <p> {goalTarget} </p>\n                </div>\n            </>See Goal Details </button>\n            }\n            \n        </div>\n\n    )\n}\n\nexport default Goal;\n"]},"metadata":{},"sourceType":"module"}