{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/MultipleOptionsDropdown.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MultipleOptionsDropdown = _ref => {\n  _s();\n\n  let {\n    options,\n    setOptionsFromDropDown\n  } = _ref;\n  const [option, setOption] = useState();\n  const [toDisplay, setToDisplay] = useState();\n  const optionshandler = {};\n  useEffect(() => {\n    if (options) {\n      for (let option of options) {\n        optionshandler[option] = {\n          value: option,\n          toDisplay: true,\n          checked: true\n        };\n      }\n\n      console.log(\"optionshandler\", optionshandler);\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"optionObject\", {\n      option: option,\n      toDisplay: toDisplay\n    });\n    setOptionsFromDropDown({\n      option: option,\n      toDisplay: toDisplay\n    });\n  }, [option, toDisplay]);\n\n  const onClick = e => {\n    setOption(e.target.value); // setToDisplay(()=>!toDisplay)\n\n    optionshandler.option.checked = !optionshandler.option.checked;\n    e.checked = !e.checked;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: e => onClick(e),\n        value: option,\n        checked: optionshandler[option].checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), option]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MultipleOptionsDropdown, \"7KP7drfnI3ysvoB/y1h2M1R/rpg=\");\n\n_c = MultipleOptionsDropdown;\nexport default MultipleOptionsDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleOptionsDropdown\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/MultipleOptionsDropdown.js"],"names":["useState","useEffect","MultipleOptionsDropdown","options","setOptionsFromDropDown","option","setOption","toDisplay","setToDisplay","optionshandler","value","checked","console","log","onClick","e","target","map"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,uBAAuB,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAwC;AACrE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEA,QAAMS,cAAc,GAAG,EAAvB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGE,OAAH,EAAW;AACP,WAAI,IAAIE,MAAR,IAAkBF,OAAlB,EAA0B;AACtBM,QAAAA,cAAc,CAACJ,MAAD,CAAd,GAAwB;AACRK,UAAAA,KAAK,EAAEL,MADC;AAERE,UAAAA,SAAS,EAAE,IAFH;AAGRI,UAAAA,OAAO,EAAE;AAHD,SAAxB;AAKH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,cAA9B;AACH;AACJ,GAXQ,EAWN,EAXM,CAAT;AAaAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B;AAACR,MAAAA,MAAM,EAAEA,MAAT;AAAiBE,MAAAA,SAAS,EAAEA;AAA5B,KAA5B;AACAH,IAAAA,sBAAsB,CAAC;AAACC,MAAAA,MAAM,EAAEA,MAAT;AAAiBE,MAAAA,SAAS,EAAEA;AAA5B,KAAD,CAAtB;AAEH,GAJQ,EAIN,CAACF,MAAD,EAASE,SAAT,CAJM,CAAT;;AAMA,QAAMO,OAAO,GAAIC,CAAD,IAAO;AACnBT,IAAAA,SAAS,CAACS,CAAC,CAACC,MAAF,CAASN,KAAV,CAAT,CADmB,CAEnB;;AACAD,IAAAA,cAAc,CAACJ,MAAf,CAAsBM,OAAtB,GAAgC,CAACF,cAAc,CAACJ,MAAf,CAAsBM,OAAvD;AACAI,IAAAA,CAAC,CAACJ,OAAF,GAAU,CAACI,CAAC,CAACJ,OAAb;AACH,GALD;;AAQA,sBACI;AAAA,cACKR,OAAO,CAACc,GAAR,CAAYZ,MAAM,iBACf;AAAA,8BAAI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAGU,CAAD,IAAMD,OAAO,CAACC,CAAD,CAA7C;AAAkD,QAAA,KAAK,EAAEV,MAAzD;AAAiE,QAAA,OAAO,EAAEI,cAAc,CAACJ,MAAD,CAAd,CAAuBM;AAAjG;AAAA;AAAA;AAAA;AAAA,cAAJ,EAAgHN,MAAhH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3CD;;GAAMH,uB;;KAAAA,uB;AA6CN,eAAeA,uBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst MultipleOptionsDropdown = ({ options, setOptionsFromDropDown }) => {\n    const [option, setOption] = useState();\n    const [toDisplay, setToDisplay] = useState();\n\n    const optionshandler = {};\n\n    useEffect(() => {\n        if(options){\n            for(let option of options){\n                optionshandler[option]= {\n                                value: option,\n                                toDisplay: true,\n                                checked: true\n                            }\n            }\n            console.log(\"optionshandler\", optionshandler);\n        }   \n    }, []);\n\n    useEffect(() => {\n        console.log(\"optionObject\", {option: option, toDisplay: toDisplay});\n        setOptionsFromDropDown({option: option, toDisplay: toDisplay})\n\n    }, [option, toDisplay]);\n\n    const onClick = (e) => {\n        setOption(e.target.value)\n        // setToDisplay(()=>!toDisplay)\n        optionshandler.option.checked = !optionshandler.option.checked;\n        e.checked=!e.checked\n    }\n\n    \n    return(\n        <ul>\n            {options.map(option => (\n                <li><input type=\"checkbox\" onClick={(e)=> onClick(e)} value={option} checked={optionshandler[option].checked}/>{option}</li>\n                \n            ))}\n            \n\n        </ul>\n    )\n}\n\nexport default MultipleOptionsDropdown;"]},"metadata":{},"sourceType":"module"}