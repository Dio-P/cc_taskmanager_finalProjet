{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenu from \"../components/DropDownMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctTaskPage = () => {\n  _s();\n\n  const location = useLocation();\n  const task = location.state.task;\n  const categories = location.state.categories;\n  const priorities = location.state.priorities;\n  console.log(\"location\", location);\n  console.log(\"task\", task);\n  const [loading, setLoading] = useState(true);\n  const [editTitle, setEditTitle] = useState(false);\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [taskCompleted, setTaskCompleted] = useState(task.completed); ///////////\n\n  const [editCategory, setEditCategory] = useState(false);\n  const [taskCategory, setTaskCategory] = useState(task.category.title);\n  const [editPriority, setEditPriority] = useState(false);\n  const [taskPriority, setTaskPriority] = useState(task.priority);\n  const [editDescription, setEditDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(task.description);\n  const [editDate, setEditDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(task.date);\n  const [editTime, setEditTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(task.time);\n  const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n  const [datedTaskType, setDatedTaskType] = useState(task.type);\n  const [editDuration, setEditDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(task.duration);\n  const [editCollaborators, setEditCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  useEffect(() => {\n    setLoading(false);\n  }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n\n  const setCategoryFromDropDown = choosenOption => {\n    setTaskCategory(choosenOption);\n  };\n\n  const setPriorityFromDropDown = choosenOption => {\n    setTaskPriority(choosenOption);\n  };\n\n  const onClickingDone = () => {\n    const updatedTask = {};\n    updatedTask[\"title\"] = taskTitle;\n    updatedTask[\"category\"] = taskCategory;\n    updatedTask[\"priority\"] = taskPriority;\n    updatedTask[\"completed\"] = false;\n    updatedTask[\"completedTimeStamp\"] = Date.now();\n\n    if (taskDescription) {\n      updatedTask[\"description\"] = taskDescription;\n    }\n\n    if (taskDate) {\n      updatedTask[\"date\"] = taskDate;\n      updatedTask[\"type\"] = datedTaskType;\n    } else {\n      updatedTask[\"type\"] = \"SOMEDAY\";\n    }\n\n    if (taskTime) {\n      updatedTask[\"time\"] = taskTime;\n    }\n\n    if (taskDuration) {\n      updatedTask[\"duration\"] = taskDuration;\n    }\n\n    console.log(\"updatedTask\", updatedTask); // send the object\n    // redirect to home page            \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTitle(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskTitle\",\n            id: \"taskTitle\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditTitle(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => setTaskCompleted(!taskCompleted),\n          checked: taskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), !editCategory ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditCategory(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenu, {\n            options: categories,\n            setValueFromDropDown: choosenOption => setCategoryFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditCategory(false),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), !editPriority ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditPriority(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenu, {\n            options: priorities,\n            setValueFromDropDown: choosenOption => setPriorityFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditPriority(false),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), taskDescription ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), !editDescription ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDescription(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDescription\",\n            id: \"taskDescription\",\n            value: taskDescription,\n            onChange: e => setTaskDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditDescription(false),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this) : null, taskDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: taskDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), !editDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditDate(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"taskDate\",\n              id: \"taskDate\",\n              value: taskDate,\n              onChange: e => setTaskDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditDate(false),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_ON\",\n            checked: datedTaskType === \"DO_ON\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_BY\",\n            checked: datedTaskType === \"DO_BY\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this) : null, taskTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDate\",\n          children: \"Task Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), !editTime ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTime(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"taskDate\",\n            id: \"taskDate\",\n            value: taskTime,\n            onChange: e => setTaskTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditTime(false),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this) : null, taskDuration ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDuration\",\n          children: \"Task Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), !editDuration ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDuration(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDuration\",\n            id: \"taskDuration\",\n            placeholder: \"in minutes\",\n            value: taskDuration,\n            onChange: e => setTaskDuration(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditDuration(false),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Collaborators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctTaskPage, \"vynsfCQ3fBPL+Day6lqHiYIapVQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = DistinctTaskPage;\nexport default DistinctTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js"],"names":["useState","useEffect","useNavigate","useLocation","DropDownMenu","DistinctTaskPage","location","task","state","categories","priorities","console","log","loading","setLoading","editTitle","setEditTitle","taskTitle","setTaskTitle","title","taskCompleted","setTaskCompleted","completed","editCategory","setEditCategory","taskCategory","setTaskCategory","category","editPriority","setEditPriority","taskPriority","setTaskPriority","priority","editDescription","setEditDescription","taskDescription","setTaskDescription","description","editDate","setEditDate","taskDate","setTaskDate","date","editTime","setEditTime","taskTime","setTaskTime","time","editdatedTaskType","setEditdatedTaskType","datedTaskType","setDatedTaskType","type","editDuration","setEditDuration","taskDuration","setTaskDuration","duration","editCollaborators","setEditCollaborators","taskCollaborators","setTaskCollaborators","setCategoryFromDropDown","choosenOption","setPriorityFromDropDown","onClickingDone","updatedTask","Date","now","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenu from \"../components/DropDownMenu\";\n\n\nconst DistinctTaskPage = () => {\n    const location = useLocation();\n    const task = location.state.task;\n    const categories = location.state.categories;\n    const priorities = location.state.priorities;\n    console.log(\"location\", location);\n    console.log(\"task\", task);\n\n    const [loading, setLoading] = useState(true);\n\n    const [editTitle, setEditTitle] = useState(false);\n    const [taskTitle, setTaskTitle] = useState(task.title);\n    \n    const [taskCompleted, setTaskCompleted] = useState(task.completed);///////////\n\n    const [editCategory, setEditCategory] = useState(false);\n    const [taskCategory, setTaskCategory] = useState(task.category.title);\n    const [editPriority, setEditPriority] = useState(false);\n    const [taskPriority, setTaskPriority] = useState(task.priority);\n    \n\n    const [editDescription, setEditDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(task.description);\n    const [editDate, setEditDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(task.date);\n    const [editTime, setEditTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(task.time);\n    const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n    const [datedTaskType, setDatedTaskType] = useState(task.type);\n    \n    \n\n    const [editDuration, setEditDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(task.duration);\n    const [editCollaborators, setEditCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n    \n    useEffect(() => {\n        setLoading(false)\n        \n    }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n    \n\n    const setCategoryFromDropDown = (choosenOption) => {\n        setTaskCategory(choosenOption);\n   \n    \n    }\n\n    const setPriorityFromDropDown = (choosenOption) => {\n            setTaskPriority(choosenOption);\n        \n    }\n\n    const onClickingDone = () => {\n        const updatedTask= { }\n        updatedTask[\"title\"]=taskTitle;\n        updatedTask[\"category\"]=taskCategory;\n        updatedTask[\"priority\"]=taskPriority;\n        updatedTask[\"completed\"]=false;\n        updatedTask[\"completedTimeStamp\"]=Date.now();\n\n        if(taskDescription){updatedTask[\"description\"]=taskDescription;}\n        if(taskDate){\n            updatedTask[\"date\"]=taskDate;\n            updatedTask[\"type\"]=datedTaskType;\n        }else{\n            updatedTask[\"type\"]=\"SOMEDAY\";\n\n        }\n        if(taskTime){updatedTask[\"time\"]=taskTime;}\n        if(taskDuration){updatedTask[\"duration\"]=taskDuration;}\n        \n        console.log(\"updatedTask\", updatedTask);\n        // send the object\n        // redirect to home page            \n    }\n\n    return (\n        \n\n        <div>\n            {loading?\n            <h3>Loading</h3>\n            :\n\n            <div>\n                \n                <div>\n                    <label>Task Title</label>\n                    <h3>{taskTitle}</h3>\n                    {!editTitle?\n                        <button onClick={()=>setEditTitle(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                            <button onClick={()=>{\n                                setEditTitle(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }  \n                </div>\n                \n                <div>\n                    <label>Completed</label>\n                    <input type=\"checkbox\" onClick={()=>setTaskCompleted(!taskCompleted)} checked={taskCompleted}/>\n                </div>\n            \n\n                <div>\n                    <label>Category</label>\n                    <p>{ taskCategory }</p>\n                    {!editCategory?\n                        <button onClick={()=>setEditCategory(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenu options={ categories } setValueFromDropDown={(choosenOption)=> setCategoryFromDropDown(choosenOption)}/>\n                            <button onClick={()=>setEditCategory(false)}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                <div>\n                    <label>Priority</label>\n                    <p>{ taskPriority }</p>\n                    {!editPriority?\n                        <button onClick={()=>setEditPriority(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenu options={ priorities } setValueFromDropDown={(choosenOption)=> setPriorityFromDropDown(choosenOption)}/>\n                            <button onClick={()=>setEditPriority(false)}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                {taskDescription?\n                <div>\n                    <label> Description </label>\n                    <p>{ taskDescription }</p>\n                    {!editDescription?\n                        <button onClick={()=>setEditDescription(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" value={taskDescription} onChange={e=> setTaskDescription(e.target.value)}/>\n                            <button onClick={()=>setEditDescription(false)}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                }\n                \n\n                {taskDate?\n                <div>\n\n                    <div>\n                        <label> Date </label>\n                        <p>{ taskDate }</p>\n                        {!editDate?\n                            <button onClick={()=>setEditDate(true)}>Edit</button>\n                        :\n                            <>\n                                <input type=\"date\" name=\"taskDate\" id=\"taskDate\" value={taskDate} onChange={e=> setTaskDate(e.target.value)}/>\n                                <button onClick={()=>setEditDate(false)}>Done</button>\n                            </>\n                        }\n                    </div>\n\n                    <div>\n                        <label> Type </label>\n                        <label htmlFor=\"taskDate\">Do On</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_ON\" \n                            checked={datedTaskType===\"DO_ON\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                        <label htmlFor=\"taskDate\">Do By</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_BY\" \n                            checked={datedTaskType===\"DO_BY\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                    </div>\n\n                </div>\n                            :\n                            null  \n                }\n\n\n                {taskTime?\n                <div>\n                    <label htmlFor=\"taskDate\">Task Time</label>\n                    <p>{ taskTime }</p>\n                    {!editTime?\n                        <button onClick={()=> setEditTime(true)}>Edit</button>   \n                    :\n                        <>\n                            <input type=\"time\" name=\"taskDate\" id=\"taskDate\" value={taskTime} onChange={e=> setTaskTime(e.target.value)}/>\n                            <button onClick={()=> setEditTime(false)}>Edit</button>\n                        </>\n                    }    \n                </div>\n                :\n                    null\n                }\n\n\n                {taskDuration?\n                <div>\n                    <label htmlFor=\"taskDuration\">Task Duration</label>\n                    <p>{ taskDuration }</p>\n                    {!editDuration?\n                        <button onClick={()=> setEditDuration(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDuration\" id=\"taskDuration\" placeholder=\"in minutes\" value={taskDuration} onChange={e=> setTaskDuration(e.target.value)}/>\n                            <button onClick={()=> setEditDuration(false)}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                }  \n\n\n                <div>\n                    <h4>Collaborators</h4>\n                </div>\n            </div>\n            }\n\n        </div>\n    )\n}\n\nexport default DistinctTaskPage;"]},"metadata":{},"sourceType":"module"}