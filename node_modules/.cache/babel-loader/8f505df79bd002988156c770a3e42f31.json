{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Goal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Goal = _ref => {\n  _s();\n\n  let {\n    goal,\n    endDate,\n    categories,\n    priorities\n  } = _ref;\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [allTaskGivenPeriod, setAllTaskGivenPeriod] = useState(null);\n  const [allCategoryTaskGivenPeriod, setAllCategoryTaskGivenPeriod] = useState(null);\n  const [tasksOnTarget, setTasksOnTarget] = useState(null);\n  const [goalTask, setGoalTask] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    calculatingTargetOutcome();\n  }, []);\n  useEffect(() => {\n    calculatingTargetOutcome();\n  }, [goalStartDate]);\n  useEffect(() => {\n    setLoading(false);\n  }, [goalTitle, goalTarget, goalStartDate, goalEndDate]);\n  useEffect(() => {\n    setGoalTitle(goal.title);\n    setGoalTarget(goal.target);\n    setGoalStartDate(goal.startDate);\n  }, [goal]);\n  useEffect(() => {\n    setGoalEndDate(endDate);\n  }, [endDate]);\n\n  const onGoalClick = e => {\n    console.log(\"a goal has been clicked\", goal); /////////\n\n    navigate(`/goal/:${goal.title}`, {\n      state: {\n        goal: goal,\n        categories: categories,\n        priorities: priorities,\n        endDate: endDate\n      }\n    });\n  };\n\n  const calculatingTargetOutcome = () => {\n    let dateNow = Date.parse(new Date());\n    console.log(\"endDate\", endDate); //////////\n\n    let dateEnd = Date.parse(new Date(endDate.split(\"/\").reverse()));\n    console.log(\"dateEnd\", dateEnd); //////////////\n\n    if (dateNow <= dateEnd) {\n      console.log(\"penidng\"); ////////////\n\n      return \"penidng\";\n    } else {\n      if (tasksOnTarget >= goalTask) {\n        console.log(\"succeeded\"); //////////\n\n        return \"succeeded\";\n      } else {\n        console.log(\"failed\"); ///////\n\n        return \"failed\";\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onGoalClick,\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal Title \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalTitle, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal Start Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalStartDate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal End Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalEndDate, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Goal Target \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", goalTarget, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), \"See Goal Details \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Goal, \"m+c6fVfnG21ucPuGKWRUfCphsoc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Goal;\nexport default Goal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Goal\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/Goal.js"],"names":["useState","useEffect","useNavigate","Goal","goal","endDate","categories","priorities","goalTitle","setGoalTitle","goalTarget","setGoalTarget","goalStartDate","setGoalStartDate","goalEndDate","setGoalEndDate","loading","setLoading","allTaskGivenPeriod","setAllTaskGivenPeriod","allCategoryTaskGivenPeriod","setAllCategoryTaskGivenPeriod","tasksOnTarget","setTasksOnTarget","goalTask","setGoalTask","navigate","calculatingTargetOutcome","title","target","startDate","onGoalClick","e","console","log","state","dateNow","Date","parse","dateEnd","split","reverse"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst Goal = ({ goal, endDate, categories, priorities }) => {\n    const [goalTitle, setGoalTitle] = useState(null);\n    const [goalTarget, setGoalTarget] = useState(null);\n    const [goalStartDate, setGoalStartDate] = useState(null);\n    const [goalEndDate, setGoalEndDate] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    const [allTaskGivenPeriod, setAllTaskGivenPeriod] = useState(null);\n    const [allCategoryTaskGivenPeriod, setAllCategoryTaskGivenPeriod] = useState(null);\n    const [tasksOnTarget, setTasksOnTarget] = useState(null);\n    const [goalTask, setGoalTask] = useState(null);\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        calculatingTargetOutcome();\n\n    }, []);\n\n    useEffect(() => {\n        calculatingTargetOutcome();\n\n    }, [goalStartDate]);\n\n\n    useEffect(() => {\n        setLoading(false)\n        \n    }, [goalTitle, goalTarget, goalStartDate, goalEndDate]);\n\n    useEffect(() => {\n        setGoalTitle(goal.title);\n        setGoalTarget(goal.target);\n        setGoalStartDate(goal.startDate);\n        \n    }, [goal]);\n\n    useEffect(() => {\n        setGoalEndDate(endDate);\n        \n    }, [endDate]);\n\n    const onGoalClick = (e) => {\n        console.log(\"a goal has been clicked\", goal);/////////\n        navigate(`/goal/:${goal.title}`, {\n            state: {\n                goal:goal,\n                categories:categories,\n                priorities: priorities,\n                endDate: endDate\n            }\n        })\n    }\n\n    const calculatingTargetOutcome = () => {\n        let dateNow = Date.parse(new Date());\n        console.log(\"endDate\", endDate);//////////\n        let dateEnd = Date.parse(new Date(endDate.split(\"/\").reverse()));\n        console.log(\"dateEnd\", dateEnd);//////////////\n        if(dateNow <= dateEnd){\n            console.log(\"penidng\");////////////\n            return \"penidng\"\n\n        }else{\n            if(tasksOnTarget >= goalTask){\n                console.log(\"succeeded\");//////////\n                return \"succeeded\"\n\n            }else{\n                console.log(\"failed\");///////\n                return \"failed\"\n\n            }\n        }\n    }\n\n\n    return(\n        <div>\n            {loading?\n            <p>Loading...</p>\n            :\n            <button onClick={ onGoalClick }><>\n                <div>\n                    <label> Goal Title </label>\n                    <p> {goalTitle} </p>\n                </div>\n                <div>\n                    <label> Goal Start Date </label>\n                    <p> {goalStartDate} </p>\n                </div>\n                <div>\n                    <label> Goal End Date </label>\n                    <p> {goalEndDate} </p>\n                </div>\n                <div>\n                    <label> Goal Target </label>\n                    <p> {goalTarget} </p>\n                </div>\n            </>See Goal Details </button>\n            }\n            \n        </div>\n\n    )\n}\n\nexport default Goal;\n"]},"metadata":{},"sourceType":"module"}