{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctCategoryPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DistinctCategoryPage = () => {\n  _s();\n\n  const [editTitle, setEditTitle] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [editColour, setEditColour] = useState(false);\n  const [colour, setColour] = useState(null);\n  const location = useLocation();\n  const category = location.state.category;\n  const {\n    get,\n    post\n  } = useContext(RequestContext);\n  useEffect(() => {\n    setTitle(category.title);\n    setColour(category.colour);\n  }, [category]);\n\n  const onClickingDone = () => {// post(, {colour: colour, title:title})\n    // category object example\n    // colour: \"#FF0000\"\n    // goal: \"WEEKLY\"\n    // goalDuration: 2\n    // id: 2\n    // title: \"Project\"\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditTitle(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"newTitle\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditTitle(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Colour \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 100 60\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"20\",\n          cy: \"20\",\n          r: \"20\",\n          fill: colour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), !editColour ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditColour(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a new colour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          name: \"newColour\",\n          value: colour,\n          onChange: e => setColour(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditColour(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctCategoryPage, \"taJ5wv3ebEcg3qgSerd7WqLJuW4=\", false, function () {\n  return [useLocation];\n});\n\n_c = DistinctCategoryPage;\nexport default DistinctCategoryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctCategoryPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctCategoryPage.js"],"names":["useState","useEffect","useContext","useLocation","RequestContext","DistinctCategoryPage","editTitle","setEditTitle","title","setTitle","editColour","setEditColour","colour","setColour","location","category","state","get","post","onClickingDone","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\n\nconst DistinctCategoryPage = () => {\n    const [editTitle, setEditTitle] = useState(false);\n    const [title, setTitle] = useState(null);\n    const [editColour, setEditColour] = useState(false);\n    const [colour, setColour] = useState(null);\n\n    const location = useLocation();\n    const category = location.state.category;\n    const {get, post} = useContext(RequestContext);\n\n    useEffect(() => {\n        setTitle(category.title);\n        setColour(category.colour);\n        \n    }, [category]);\n\n    const onClickingDone = () => {\n        // post(, {colour: colour, title:title})\n\n        // category object example\n        // colour: \"#FF0000\"\n        // goal: \"WEEKLY\"\n        // goalDuration: 2\n        // id: 2\n        // title: \"Project\"\n    }\n\n    return (\n        <div>\n            <div>\n                <label> Title </label>\n                <h1>{ title }</h1>\n                    {!editTitle?\n                        <button onClick={()=> setEditTitle(true)}>Edit</button>\n                    :\n                        <div>\n                            <input \n                                type=\"text\" \n                                name=\"newTitle\" \n                                value={title} \n                                onChange={(e)=> setTitle(e.target.value)}\n                                />\n                            <button onClick={()=> {\n                                setEditTitle(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </div>\n                        \n                    }\n            </div>\n            <div>\n                <label> Colour </label>\n                <svg viewBox=\"0 0 100 60\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"20\" cy=\"20\" r=\"20\" fill={colour}/>\n                </svg>\n                {!editColour?\n                        <button onClick={()=> setEditColour(true)}>Edit</button>\n                    :\n                        <div>\n                            <p>Choose a new colour</p>\n                            <input \n                                type=\"color\" \n                                name=\"newColour\" \n                                value={colour} \n                                onChange={(e)=> setColour(e.target.value)}\n                                />\n                            <button onClick={()=> {\n                                setEditColour(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </div>\n                        \n                    }\n            </div>\n        </div>\n    )\n}\n\nexport default DistinctCategoryPage;"]},"metadata":{},"sourceType":"module"}