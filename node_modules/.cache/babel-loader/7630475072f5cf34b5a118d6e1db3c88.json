{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewGoalPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNewGoalPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    goals,\n    goalTypesList\n  } = _ref;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [goalSetDate, setGoalSetDate] = useState(null);\n  const [goalType, setGoalType] = useState(null);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [goalCategories, setGoalCategories] = useState([]);\n  const [editGoalCategories, setEditGoalCategories] = useState(false);\n  const [categoriesToDisplay, setCategoriesToDisplay] = useState([]);\n  const [goalActive, setGoalActive] = useState(true);\n  const {\n    get,\n    post\n  } = useContext(RequestContext);\n  useEffect(() => {\n    let categoriesToDisplay = categories.filter(category => {\n      return category.title.toLowerCase().match(searchInput);\n    });\n    setCategoriesToDisplay(categoriesToDisplay);\n  }, [searchInput]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  const onClickingACategory = (category, e) => {\n    e.preventDefault();\n    setGoalCategories([...goalCategories, category]);\n  };\n\n  const removeGoalCategory = categoryID => {\n    const updatedCategories = goalCategories.filter(category => category.id !== categoryID);\n    setGoalCategories(updatedCategories);\n  };\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingDone = e => {\n    e.preventDefault();\n    let newGoal = {\n      goalTitle,\n      goalType,\n      goalTarget,\n      goalStartDate,\n      goalCategories\n    };\n    console.log(\"updatedGoal\", newGoal); /////////////\n\n    post(\"goals\", newGoal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities,\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"goalTitle\",\n        id: \"goalTitle\",\n        value: goalTitle,\n        onChange: e => setGoalTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"goalType\",\n        id: \"goalType\",\n        onChange: e => setGoalType(e.target.value),\n        children: goalTypesList.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Target \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTarget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"goalTarget\",\n        id: \"goalTarget\",\n        value: goalTarget,\n        onChange: e => setGoalTarget(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Start Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"goalStartDate\",\n        id: \"goalStartDate\",\n        value: goalStartDate,\n        onChange: e => setGoalStartDate(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Categories \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: goalCategories.length > 0 && Object.values(goalCategories).map(goalCategory => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [goalCategory.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeGoalCategory(goalCategory.id),\n            children: \"X\"\n          }, goalCategory.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search For Category Here\",\n        onChange: handleChange,\n        value: searchInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), searchInput.length > 0 && /*#__PURE__*/_jsxDEV(SearchBar, {\n        onClickingAnOption: (category, e) => onClickingACategory(category, e),\n        categoriesToDisplay: categoriesToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => onClickingDone(e),\n      children: \" Create New Goal \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddNewGoalPage, \"nXaZHTFJQWDvprSU3Dz6+u3rLEs=\");\n\n_c = AddNewGoalPage;\nexport default AddNewGoalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewGoalPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewGoalPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","RequestContext","DropDownMenuCategory","DropDownMenuPriority","Menu","SearchBar","AddNewGoalPage","categories","priorities","goals","goalTypesList","isMenuOpen","setIsMenuOpen","searchInput","setSearchInput","goalTitle","setGoalTitle","goalSetDate","setGoalSetDate","goalType","setGoalType","goalTarget","setGoalTarget","goalStartDate","setGoalStartDate","goalEndDate","setGoalEndDate","goalCategories","setGoalCategories","editGoalCategories","setEditGoalCategories","categoriesToDisplay","setCategoriesToDisplay","goalActive","setGoalActive","get","post","filter","category","title","toLowerCase","match","handleChange","e","preventDefault","target","value","onClickingACategory","removeGoalCategory","categoryID","updatedCategories","id","closeMenuFunction","onClickingDone","newGoal","console","log","map","type","length","Object","values","goalCategory"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\n\nconst AddNewGoalPage = ({ categories, priorities, goals, goalTypesList }) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    const [goalTitle, setGoalTitle] = useState(null);\n    const [goalSetDate, setGoalSetDate] = useState(null);\n    const [goalType, setGoalType] = useState(null);\n    const [goalTarget, setGoalTarget] = useState(null);\n    const [goalStartDate, setGoalStartDate] = useState(null);\n    const [goalEndDate, setGoalEndDate] = useState(null);\n    const [goalCategories, setGoalCategories] = useState([]);\n    const [editGoalCategories, setEditGoalCategories] = useState(false);\n    const [categoriesToDisplay, setCategoriesToDisplay] = useState([]);\n    const [goalActive, setGoalActive] = useState(true);\n\n    const {get, post} = useContext(RequestContext);\n\n\n    useEffect(() => {\n        let categoriesToDisplay = categories.filter((category) => {\n          return category.title.toLowerCase().match(searchInput);\n        });\n        setCategoriesToDisplay(categoriesToDisplay);\n      }, [searchInput]);\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setSearchInput(e.target.value.toLowerCase());\n      };\n\n    const onClickingACategory = (category,e) => {\n        e.preventDefault();\n        setGoalCategories([...goalCategories, category]);\n    \n      };\n    \n    const removeGoalCategory = (categoryID) => {\n    const updatedCategories = goalCategories.filter(\n        (category) => category.id !== categoryID\n    );\n    setGoalCategories(updatedCategories);\n    };\n\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingDone = (e) => {\n        e.preventDefault();\n        let newGoal = {\n            goalTitle, \n            goalType, \n            goalTarget, \n            goalStartDate,\n            goalCategories\n        };\n        console.log(\"updatedGoal\", newGoal);/////////////\n        post(\"goals\", newGoal);\n    }\n        \n    return(\n        <form>\n            {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}>Menu</button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                    goals={ goals }\n                />\n            }\n            <div>\n                <label> Goal Title </label>\n                <h3>{goalTitle}</h3>\n                <input type=\"text\" name=\"goalTitle\" id=\"goalTitle\" value={goalTitle} onChange={e=> setGoalTitle(e.target.value)} required/>\n\n            </div>\n            <div>\n                <label> Goal Type </label>\n                <h3>{goalType}</h3>\n                <select name=\"goalType\" id=\"goalType\" onChange={e=> setGoalType(e.target.value)}>\n                    {goalTypesList.map(type => (\n                        <option value={ type }>{ type }</option>\n                    ))}\n                </select>\n            </div>\n            <div>\n                <label> Goal Target </label>\n                <h3>{goalTarget}</h3>\n                <input type=\"text\" name=\"goalTarget\" id=\"goalTarget\" value={goalTarget} onChange={e=> setGoalTarget(e.target.value)} required/>\n            </div>\n            <div>\n                <label> Goal Start Date </label>\n                <h3>{goalStartDate}</h3>\n                <input type=\"date\" name=\"goalStartDate\" id=\"goalStartDate\" value={goalStartDate} onChange={e=> setGoalStartDate(e.target.value)} required/>\n            </div>\n            <div>\n                <label> Categories </label>\n                <div>\n                {goalCategories.length > 0 &&\n                    Object.values(goalCategories).map((goalCategory) => (\n                    <div>\n                        <p>{goalCategory.title} </p>\n                        <button key={goalCategory.id} onClick={() => removeGoalCategory(goalCategory.id)}>\n                        X\n                        </button>\n                    </div>\n                    ))}\n                </div>\n                <input\n                type=\"text\"\n                placeholder=\"Search For Category Here\"\n                onChange={handleChange}\n                value={searchInput}\n                />\n                {searchInput.length > 0 \n                && \n                <SearchBar\n                    onClickingAnOption={ (category, e)=> onClickingACategory(category, e) }\n                    categoriesToDisplay={ categoriesToDisplay }\n                />}\n            </div>\n            <button onClick={(e)=> onClickingDone(e)}> Create New Goal </button>\n        </form>\n    )\n}\n\nexport default AddNewGoalPage;"]},"metadata":{},"sourceType":"module"}