{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctGoalPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctGoalPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    goals,\n    goalTypesList,\n    users\n  } = _ref;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [categoriesToDisplay, setCategoriesToDisplay] = useState([]);\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [editGoalTitle, setEditGoalTitle] = useState(false);\n  const [goalType, setGoalType] = useState(null);\n  const [editGoalType, setEditGoalType] = useState(false);\n  const [goalTypes, setGoalTypes] = useState(null);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [editGoalTarget, setEditGoalTarget] = useState(false);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [editGoalStartDate, setEditGoalStartDate] = useState(false);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [editGoalEndDate, setEditGoalEndDate] = useState(false);\n  const [goalCategories, setGoalCategories] = useState([]);\n  const [editGoalCategories, setEditGoalCategories] = useState(false);\n  const [goalActive, setGoalActive] = useState(true);\n  const {\n    get,\n    post,\n    put\n  } = useContext(RequestContext);\n  const location = useLocation();\n  const goal = location.state.goal;\n  const endDate = location.state.endDate;\n  useEffect(() => {\n    ///////\n    console.log(\"goalTypesList Start\", goalTypesList); //////\n  }, []); ////////\n\n  useEffect(() => {\n    setGoalTitle(goal.title);\n    setGoalType(goal.type);\n    setGoalTarget(goal.target);\n    setGoalStartDate(goal.startDate);\n    setGoalEndDate(endDate);\n    console.log(\"!!!!!!!goal.categories\", goal.categories);\n    setGoalCategories(goal.categories); ////////\n\n    setGoalActive(goal.active);\n  }, [goal]);\n  useEffect(() => {\n    console.log(\"goalTypesList\", goalTypesList); //////\n\n    setGoalTypes(goalTypesList);\n  }, [goalTypesList]);\n  useEffect(() => {\n    let categoriesToDisplay = categories.filter(category => {\n      return category.title.toLowerCase().match(searchInput);\n    });\n    setCategoriesToDisplay(categoriesToDisplay);\n  }, [searchInput]); //   useEffect(() => {\n  //       console.log(\"!!!!!!!!users\", users);///////////\n  //   }, [users]);\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  const onClickingACategory = (category, e) => {\n    e.preventDefault();\n    const existingCategoryIDs = Object.values(goalCategories).map(category => category.id);\n\n    if (existingCategoryIDs.includes(category.id)) {\n      alert(\"this category has already been added\");\n    } else {\n      setGoalCategories([...goalCategories, category]);\n    }\n  };\n\n  const removeGoalCategory = categoryID => {\n    const updatedCategories = goalCategories.filter(category => category.id !== categoryID);\n    setGoalCategories(updatedCategories);\n  };\n\n  const onClickingDone = () => {\n    let updatedGoal = {\n      goalTitle,\n      goalType,\n      goalTarget,\n      goalStartDate,\n      goalCategories\n    };\n    console.log(\"updatedGoal\", updatedGoal); /////////\n\n    put(`goals/${goal.id}`, updatedGoal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), !editGoalTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalTitle(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"goalTitle\",\n          id: \"goalTitle\",\n          value: goalTitle,\n          onChange: e => setGoalTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalTitle(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), !editGoalType ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalType(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"goalType\",\n          id: \"goalType\",\n          onChange: e => setGoalType(e.target.value),\n          children: goalTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalType(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Target \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTarget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), !editGoalTarget ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalTarget(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"goalTarget\",\n          id: \"goalTarget\",\n          value: goalTarget,\n          onChange: e => setGoalTarget(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalTarget(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Start Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), !editGoalStartDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalStartDate(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"goalStartDate\",\n          id: \"goalStartDate\",\n          value: goalStartDate,\n          onChange: e => setSearchInput(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalStartDate(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal End Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Categories \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: goalCategories.length > 0 && Object.values(goalCategories).map(goalCategory => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [goalCategory.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeGoalCategory(goalCategory.id),\n            children: \"X\"\n          }, goalCategory.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), !editGoalCategories ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalCategories(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search For Category Here\",\n          onChange: handleChange,\n          value: searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), searchInput.length > 0 && /*#__PURE__*/_jsxDEV(SearchBar, {\n          onClickingAnOption: (category, e) => onClickingACategory(category, e),\n          optionsToDisplay: categoriesToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalCategories(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DistinctGoalPage, \"K47C5LOVEx5S1YbtokLi1CRawRw=\", false, function () {\n  return [useLocation];\n});\n\n_c = DistinctGoalPage;\nexport default DistinctGoalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctGoalPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctGoalPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","RequestContext","Menu","SearchBar","DistinctGoalPage","categories","priorities","goals","goalTypesList","users","isMenuOpen","setIsMenuOpen","searchInput","setSearchInput","categoriesToDisplay","setCategoriesToDisplay","goalTitle","setGoalTitle","editGoalTitle","setEditGoalTitle","goalType","setGoalType","editGoalType","setEditGoalType","goalTypes","setGoalTypes","goalTarget","setGoalTarget","editGoalTarget","setEditGoalTarget","goalStartDate","setGoalStartDate","editGoalStartDate","setEditGoalStartDate","goalEndDate","setGoalEndDate","editGoalEndDate","setEditGoalEndDate","goalCategories","setGoalCategories","editGoalCategories","setEditGoalCategories","goalActive","setGoalActive","get","post","put","location","goal","state","endDate","console","log","title","type","target","startDate","active","filter","category","toLowerCase","match","closeMenuFunction","handleChange","e","preventDefault","value","onClickingACategory","existingCategoryIDs","Object","values","map","id","includes","alert","removeGoalCategory","categoryID","updatedCategories","onClickingDone","updatedGoal","length","goalCategory"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\n\nconst DistinctGoalPage = ({ categories, priorities, goals, goalTypesList, users }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const [categoriesToDisplay, setCategoriesToDisplay] = useState([]);\n\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [editGoalTitle, setEditGoalTitle] = useState(false);\n  const [goalType, setGoalType] = useState(null);\n  const [editGoalType, setEditGoalType] = useState(false);\n  const [goalTypes, setGoalTypes] = useState(null);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [editGoalTarget, setEditGoalTarget] = useState(false);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [editGoalStartDate, setEditGoalStartDate] = useState(false);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [editGoalEndDate, setEditGoalEndDate] = useState(false);\n  const [goalCategories, setGoalCategories] = useState([]);\n  const [editGoalCategories, setEditGoalCategories] = useState(false);\n  const [goalActive, setGoalActive] = useState(true);\n\n  const { get, post, put } = useContext(RequestContext);\n\n  const location = useLocation();\n  const goal = location.state.goal;\n  const endDate = location.state.endDate;\n\n  useEffect(() => {\n    ///////\n    console.log(\"goalTypesList Start\", goalTypesList); //////\n  }, []); ////////\n\n  useEffect(() => {\n    setGoalTitle(goal.title);\n    setGoalType(goal.type);\n    setGoalTarget(goal.target);\n    setGoalStartDate(goal.startDate);\n    setGoalEndDate(endDate);\n    console.log(\"!!!!!!!goal.categories\", goal.categories);\n    setGoalCategories(goal.categories); ////////\n    setGoalActive(goal.active);\n  }, [goal]);\n\n  useEffect(() => {\n    console.log(\"goalTypesList\", goalTypesList); //////\n    setGoalTypes(goalTypesList);\n  }, [goalTypesList]);\n\n  useEffect(() => {\n    let categoriesToDisplay = categories.filter((category) => {\n      return category.title.toLowerCase().match(searchInput);\n    });\n    setCategoriesToDisplay(categoriesToDisplay);\n  }, [searchInput]);\n\n//   useEffect(() => {\n//       console.log(\"!!!!!!!!users\", users);///////////\n//   }, [users]);\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  const onClickingACategory = (category, e) => {\n    e.preventDefault();\n    const existingCategoryIDs = \n    Object.values(goalCategories).map(category => (\n      category.id\n    ));\n    if(existingCategoryIDs.includes(category.id)){\n      alert(\"this category has already been added\")\n    }else{\n      setGoalCategories([...goalCategories, category]);\n    }\n  };\n\n  const removeGoalCategory = (categoryID) => {\n    const updatedCategories = goalCategories.filter(\n      (category) => category.id !== categoryID\n    );\n    setGoalCategories(updatedCategories);\n  };\n\n  const onClickingDone = () => {\n    let updatedGoal = { \n      goalTitle, \n      goalType, \n      goalTarget, \n      goalStartDate,\n      goalCategories\n    };\n    console.log(\"updatedGoal\", updatedGoal);/////////\n    put(`goals/${goal.id}`, updatedGoal)\n  };\n\n  return (\n    <div>\n      {!isMenuOpen ? (\n        <>\n          <button onClick={() => setIsMenuOpen(!isMenuOpen)}>Menu</button>\n        </>\n      ) : (\n        <Menu\n          closeMenuFunction={() => closeMenuFunction()}\n          categories={categories}\n          priorities={priorities}\n        />\n      )}\n      <div>\n        <label> Goal Title </label>\n        <h3>{goalTitle}</h3>\n        {!editGoalTitle ? (\n          <button onClick={() => setEditGoalTitle(true)}>Edit</button>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              name=\"goalTitle\"\n              id=\"goalTitle\"\n              value={goalTitle}\n              onChange={(e) => setGoalTitle(e.target.value)}\n              required\n            />\n            <button\n              onClick={() => {\n                setEditGoalTitle(false);\n                onClickingDone();\n              }}\n            >\n              Done\n            </button>\n          </>\n        )}\n      </div>\n      <div>\n        <label> Goal Type </label>\n        <h3>{goalType}</h3>\n        {!editGoalType ? (\n          <button onClick={() => setEditGoalType(true)}>Edit</button>\n        ) : (\n          <>\n            <select\n              name=\"goalType\"\n              id=\"goalType\"\n              onChange={(e) => setGoalType(e.target.value)}\n            >\n              {goalTypes.map((type) => (\n                <option value={type}>{type}</option>\n              ))}\n            </select>\n            <button\n              onClick={() => {\n                setEditGoalType(false);\n                onClickingDone();\n              }}\n            >\n              Done\n            </button>\n          </>\n        )}\n      </div>\n      <div>\n        <label> Goal Target </label>\n        <h3>{goalTarget}</h3>\n        {!editGoalTarget ? (\n          <button onClick={() => setEditGoalTarget(true)}>Edit</button>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              name=\"goalTarget\"\n              id=\"goalTarget\"\n              value={goalTarget}\n              onChange={(e) => setGoalTarget(e.target.value)}\n              required\n            />\n            <button\n              onClick={() => {\n                setEditGoalTarget(false);\n                onClickingDone();\n              }}\n            >\n              Done\n            </button>\n          </>\n        )}\n      </div>\n      <div>\n        <label> Goal Start Date </label>\n        <h3>{goalStartDate}</h3>\n        {!editGoalStartDate ? (\n          <button onClick={() => setEditGoalStartDate(true)}>Edit</button>\n        ) : (\n          <>\n            <input\n              type=\"date\"\n              name=\"goalStartDate\"\n              id=\"goalStartDate\"\n              value={goalStartDate}\n              onChange={(e) => setSearchInput(e.target.value)}\n              required\n            />\n            <button\n              onClick={() => {\n                setEditGoalStartDate(false);\n                onClickingDone();\n              }}\n            >\n              Done\n            </button>\n          </>\n        )}\n      </div>\n      <div>\n        <label> Goal End Date </label>\n        <h3>{goalEndDate}</h3>\n      </div>\n      <div>\n        <label> Goal Categories </label>\n        <div>\n          {goalCategories.length > 0 &&\n            Object.values(goalCategories).map((goalCategory) => (\n              <div>\n                <p>{goalCategory.title} </p>\n                <button key={goalCategory.id} onClick={() => removeGoalCategory(goalCategory.id)}>\n                  X\n                </button>\n              </div>\n            ))}\n        </div>\n        {!editGoalCategories ? (\n          <button onClick={() => setEditGoalCategories(true)}>Edit</button>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Search For Category Here\"\n              onChange={handleChange}\n              value={searchInput}\n            />\n            {searchInput.length > 0 \n            && \n            <SearchBar\n              onClickingAnOption={ (category, e)=> onClickingACategory(category, e) }\n              optionsToDisplay={ categoriesToDisplay }\n            />}\n            <button\n              onClick={() => {\n                setEditGoalCategories(false);\n                onClickingDone();\n              }}\n            >\n              Done\n            </button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DistinctGoalPage;\n"]},"metadata":{},"sourceType":"module"}