{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctTaskPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    users\n  } = _ref;\n  const location = useLocation();\n  const task = location.state.task; // const categories = location.state.categories;\n  // const priorities = location.state.priorities;\n\n  const [loading, setLoading] = useState(true);\n  const [editTitle, setEditTitle] = useState(false);\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [taskCompleted, setTaskCompleted] = useState(task.completed); ///////////\n\n  const [editCategory, setEditCategory] = useState(false);\n  const [taskCategory, setTaskCategory] = useState(task.category);\n  const [editPriority, setEditPriority] = useState(false);\n  const [taskPriority, setTaskPriority] = useState(task.priority);\n  const [editDescription, setEditDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(task.description);\n  const [editDate, setEditDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(task.date);\n  const [editTime, setEditTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(task.time);\n  const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n  const [datedTaskType, setDatedTaskType] = useState(task.type);\n  const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n  const [editDuration, setEditDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(task.duration);\n  const [editCollaborators, setEditCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  const {\n    get,\n    post,\n    put\n  } = useContext(RequestContext);\n  useEffect(() => {\n    setLoading(false);\n  }, [taskTitle, taskCompleted, taskCategory, taskPriority]); // useEffect(() => {\n  //     onClickingDone()\n  // }, [completedTimeStamp]);\n\n  const setCategoryFromDropDown = choosenOption => {\n    setTaskCategory(choosenOption);\n  };\n\n  const setPriorityFromDropDown = choosenOption => {\n    setTaskPriority(choosenOption);\n  };\n\n  const onClickingComplete = () => {\n    console.log(\"inside Complete\");\n    setTaskCompleted(!taskCompleted);\n\n    if (!completedTimeStamp) {\n      let timestamp = Date.parse(new Date());\n      setCompletedTimeStamp(timestamp);\n    } else {\n      setCompletedTimeStamp(null);\n    }\n  };\n\n  const onClickingDone = () => {\n    const updatedTask = {};\n    updatedTask[\"title\"] = taskTitle;\n    updatedTask[\"category\"] = taskCategory;\n    updatedTask[\"priority\"] = taskPriority;\n    updatedTask[\"completed\"] = taskCompleted;\n    updatedTask[\"completedTimeStamp\"] = completedTimeStamp;\n\n    if (taskDescription) {\n      updatedTask[\"description\"] = taskDescription;\n    }\n\n    if (taskDate) {\n      updatedTask[\"date\"] = taskDate;\n      updatedTask[\"type\"] = datedTaskType;\n    } else {\n      updatedTask[\"type\"] = \"SOMEDAY\";\n    }\n\n    if (taskTime) {\n      updatedTask[\"time\"] = taskTime;\n    }\n\n    if (taskDuration) {\n      updatedTask[\"duration\"] = taskDuration;\n    }\n\n    console.log(\"updatedTask\", updatedTask); /////////////\n\n    put(`tasks/${task.id}`, updatedTask); // redirect to home page            \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTitle(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskTitle\",\n            id: \"taskTitle\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditTitle(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => {\n            onClickingComplete();\n          },\n          checked: taskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskCategory.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), !editCategory ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditCategory(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenuCategory, {\n            options: categories,\n            setValueFromDropDown: choosenOption => setCategoryFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditCategory(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), !editPriority ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditPriority(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenuPriority, {\n            options: priorities,\n            setValueFromDropDown: choosenOption => setPriorityFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditPriority(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), taskDescription ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), !editDescription ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDescription(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDescription\",\n            id: \"taskDescription\",\n            value: taskDescription,\n            onChange: e => setTaskDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditDescription(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this) : null, taskDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: taskDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), !editDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditDate(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"taskDate\",\n              id: \"taskDate\",\n              value: taskDate,\n              onChange: e => setTaskDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditDate(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_ON\",\n            checked: datedTaskType === \"DO_ON\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_BY\",\n            checked: datedTaskType === \"DO_BY\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this) : null, taskTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDate\",\n          children: \"Task Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), !editTime ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTime(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"taskDate\",\n            id: \"taskDate\",\n            value: taskTime,\n            onChange: e => setTaskTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditTime(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this) : null, taskDuration ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDuration\",\n          children: \"Task Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), !editDuration ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDuration(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDuration\",\n            id: \"taskDuration\",\n            placeholder: \"in minutes\",\n            value: taskDuration,\n            onChange: e => setTaskDuration(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditDuration(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Collaborators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctTaskPage, \"MZj8AKAyHRPdwxSvrABoVGEcWA0=\", false, function () {\n  return [useLocation];\n});\n\n_c = DistinctTaskPage;\nexport default DistinctTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","DropDownMenuCategory","DropDownMenuPriority","RequestContext","DistinctTaskPage","categories","priorities","users","location","task","state","loading","setLoading","editTitle","setEditTitle","taskTitle","setTaskTitle","title","taskCompleted","setTaskCompleted","completed","editCategory","setEditCategory","taskCategory","setTaskCategory","category","editPriority","setEditPriority","taskPriority","setTaskPriority","priority","editDescription","setEditDescription","taskDescription","setTaskDescription","description","editDate","setEditDate","taskDate","setTaskDate","date","editTime","setEditTime","taskTime","setTaskTime","time","editdatedTaskType","setEditdatedTaskType","datedTaskType","setDatedTaskType","type","completedTimeStamp","setCompletedTimeStamp","editDuration","setEditDuration","taskDuration","setTaskDuration","duration","editCollaborators","setEditCollaborators","taskCollaborators","setTaskCollaborators","get","post","put","setCategoryFromDropDown","choosenOption","setPriorityFromDropDown","onClickingComplete","console","log","timestamp","Date","parse","onClickingDone","updatedTask","id","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\n\nconst DistinctTaskPage = ({ categories, priorities, users }) => {\n    const location = useLocation();\n    const task = location.state.task;\n    // const categories = location.state.categories;\n    // const priorities = location.state.priorities;\n\n    const [loading, setLoading] = useState(true);\n\n    const [editTitle, setEditTitle] = useState(false);\n    const [taskTitle, setTaskTitle] = useState(task.title);\n    \n    const [taskCompleted, setTaskCompleted] = useState(task.completed);///////////\n\n    const [editCategory, setEditCategory] = useState(false);\n    const [taskCategory, setTaskCategory] = useState(task.category);\n    const [editPriority, setEditPriority] = useState(false);\n    const [taskPriority, setTaskPriority] = useState(task.priority);\n    \n\n    const [editDescription, setEditDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(task.description);\n    const [editDate, setEditDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(task.date);\n    const [editTime, setEditTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(task.time);\n    const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n    const [datedTaskType, setDatedTaskType] = useState(task.type);\n    const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n    \n    \n\n    const [editDuration, setEditDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(task.duration);\n    const [editCollaborators, setEditCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n    const {get, post, put} = useContext(RequestContext);\n    \n    useEffect(() => {\n        setLoading(false)\n        \n    }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n\n    // useEffect(() => {\n    //     onClickingDone()\n        \n    // }, [completedTimeStamp]);\n    \n    const setCategoryFromDropDown = (choosenOption) => {\n        setTaskCategory(choosenOption);\n    }\n\n    const setPriorityFromDropDown = (choosenOption) => {\n            setTaskPriority(choosenOption);\n    }\n\n    const onClickingComplete = () => {\n        console.log(\"inside Complete\");\n        setTaskCompleted(!taskCompleted)\n        if(!completedTimeStamp){\n            let timestamp = Date.parse(new Date());\n            setCompletedTimeStamp(timestamp);\n        }else{\n            setCompletedTimeStamp(null);\n        }\n    }\n\n    const onClickingDone = () => {\n        const updatedTask= { }\n        updatedTask[\"title\"] = taskTitle;\n        updatedTask[\"category\"] = taskCategory;\n        updatedTask[\"priority\"] = taskPriority;\n        updatedTask[\"completed\"]=taskCompleted;\n        updatedTask[\"completedTimeStamp\"]=completedTimeStamp;\n\n        if(taskDescription){updatedTask[\"description\"]=taskDescription;}\n        if(taskDate){\n            updatedTask[\"date\"]=taskDate;\n            updatedTask[\"type\"]=datedTaskType;\n        }else{\n            updatedTask[\"type\"]=\"SOMEDAY\";\n\n        }\n        if(taskTime){updatedTask[\"time\"]=taskTime;}\n        if(taskDuration){updatedTask[\"duration\"]=taskDuration;}\n        \n        console.log(\"updatedTask\", updatedTask);/////////////\n        \n        put(`tasks/${task.id}`, updatedTask)\n    \n        \n        // redirect to home page            \n    }\n\n    return (\n        \n\n        <div>\n            {loading?\n            <h3>Loading</h3>\n            :\n\n            <div>\n                \n                <div>\n                    <label>Task Title</label>\n                    <h3>{taskTitle}</h3>\n                    {!editTitle?\n                        <button onClick={()=>setEditTitle(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                            <button onClick={()=>{\n                                setEditTitle(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }  \n                </div>\n                \n                <div>\n                    <label>Completed</label>\n                    <input type=\"checkbox\" onClick={()=>{onClickingComplete()}} checked={taskCompleted}/>\n                </div>\n            \n\n                <div>\n                    <label>Category</label>\n                    <p>{ taskCategory.title }</p>\n                    {!editCategory?\n                        <button onClick={()=>setEditCategory(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuCategory options={ categories } setValueFromDropDown={(choosenOption)=> setCategoryFromDropDown(choosenOption)}/>\n                            <button onClick={()=>{\n                                setEditCategory(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                <div>\n                    <label>Priority</label>\n                    <p>{ taskPriority }</p>\n                    {!editPriority?\n                        <button onClick={()=>setEditPriority(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuPriority options={ priorities } setValueFromDropDown={(choosenOption)=> setPriorityFromDropDown(choosenOption)}/>\n                            <button onClick={()=>{\n                                setEditPriority(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                {taskDescription?\n                <div>\n                    <label> Description </label>\n                    <p>{ taskDescription }</p>\n                    {!editDescription?\n                        <button onClick={()=>setEditDescription(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" value={taskDescription} onChange={e=> setTaskDescription(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditDescription(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                }\n                \n\n                {taskDate?\n                <div>\n\n                    <div>\n                        <label> Date </label>\n                        <p>{ taskDate }</p>\n                        {!editDate?\n                            <button onClick={()=>setEditDate(true)}>Edit</button>\n                        :\n                            <>\n                                <input type=\"date\" name=\"taskDate\" id=\"taskDate\" value={taskDate} onChange={e=> setTaskDate(e.target.value)}/>\n                                <button onClick={()=>{\n                                setEditDate(false)\n                                onClickingDone()\n                                }}>Done</button>\n                            </>\n                        }\n                    </div>\n\n                    <div>\n                        <label> Type </label>\n                        <label htmlFor=\"taskDate\">Do On</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_ON\" \n                            checked={datedTaskType===\"DO_ON\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                        <label htmlFor=\"taskDate\">Do By</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_BY\" \n                            checked={datedTaskType===\"DO_BY\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                    </div>\n\n                </div>\n                        :\n                            null  \n                }\n\n\n                {taskTime?\n                <div>\n                    <label htmlFor=\"taskDate\">Task Time</label>\n                    <p>{ taskTime }</p>\n                    {!editTime?\n                        <button onClick={()=> setEditTime(true)}>Edit</button>   \n                    :\n                        <>\n                            <input type=\"time\" name=\"taskDate\" id=\"taskDate\" value={taskTime} onChange={e=> setTaskTime(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditTime(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }    \n                </div>\n                :\n                    null\n                }\n\n\n                {taskDuration?\n                <div>\n                    <label htmlFor=\"taskDuration\">Task Duration</label>\n                    <p>{ taskDuration }</p>\n                    {!editDuration?\n                        <button onClick={()=> setEditDuration(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDuration\" id=\"taskDuration\" placeholder=\"in minutes\" value={taskDuration} onChange={e=> setTaskDuration(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditDuration(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                }  \n\n\n                <div>\n                    <h4>Collaborators</h4>\n                </div>\n            </div>\n            }\n\n        </div>\n    )\n}\n\nexport default DistinctTaskPage;"]},"metadata":{},"sourceType":"module"}