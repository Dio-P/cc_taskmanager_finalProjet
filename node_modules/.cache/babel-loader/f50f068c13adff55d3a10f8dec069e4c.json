{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctCategoryPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport { FaBars } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctCategoryPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    updateAppMainStateFromComponent\n  } = _ref;\n  const location = useLocation();\n  const category = location.state.category;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [editTitle, setEditTitle] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [categoryID, setCategoryID] = useState(category.id);\n  const [editColour, setEditColour] = useState(false);\n  const [colour, setColour] = useState(null); // const categories = location.state.categories;\n  // const priorities = location.state.priorities;\n\n  const {\n    put\n  } = useContext(RequestContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setTitle(category.title);\n    setColour(category.colour);\n  }, [category]);\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingDone = () => {\n    let updatedCategory = {\n      colour: colour,\n      title: title,\n      id: categoryID\n    };\n    put(`categories/${category.id}`, updatedCategory);\n    updateAppMainStateFromComponent(updatedCategory);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: /*#__PURE__*/_jsxDEV(FaBars, {\n          className: \"m-4\",\n          size: \"2rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row py-10 justify-center m-7\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"basis-1/3 font-semibold text-lg\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"basis-1/3 text-lg italic\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setEditTitle(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"title-field\",\n          type: \"text\",\n          name: \"newTitle\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            setEditTitle(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-box py-15 justify-center m-7\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"basis-1/3 font-semibold text-lg\",\n        children: \"Colour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"basis-1/3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          style: {\n            backgroundColor: colour\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), !editColour ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setEditColour(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"colour-info\",\n          children: \"Select colour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"colour-selector\",\n          type: \"color\",\n          name: \"newColour\",\n          value: colour,\n          onChange: e => setColour(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            setEditColour(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctCategoryPage, \"9Y41GldBgFu1TPropuFgXkP2nXA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = DistinctCategoryPage;\nexport default DistinctCategoryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctCategoryPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctCategoryPage.js"],"names":["useState","useEffect","useContext","useLocation","useNavigate","RequestContext","Menu","FaBars","DistinctCategoryPage","categories","priorities","updateAppMainStateFromComponent","location","category","state","isMenuOpen","setIsMenuOpen","editTitle","setEditTitle","title","setTitle","categoryID","setCategoryID","id","editColour","setEditColour","colour","setColour","put","navigate","closeMenuFunction","onClickingDone","updatedCategory","e","target","value","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport { FaBars } from \"react-icons/fa\";\n\nconst DistinctCategoryPage = ({ categories, priorities, updateAppMainStateFromComponent }) => {\n    const location = useLocation();\n    const category = location.state.category;\n    \n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [editTitle, setEditTitle] = useState(false);\n\n    const [title, setTitle] = useState(null);\n    const [categoryID, setCategoryID] = useState(category.id);\n    const [editColour, setEditColour] = useState(false);\n    const [colour, setColour] = useState(null);\n\n    \n    // const categories = location.state.categories;\n    // const priorities = location.state.priorities;\n\n    const { put } = useContext(RequestContext);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        setTitle(category.title);\n        setColour(category.colour);\n    }, [category]);\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingDone = () => {\n        let updatedCategory = {\n            colour: colour, \n            title: title,\n            id: categoryID\n        };\n        put(`categories/${category.id}`, updatedCategory);\n        updateAppMainStateFromComponent(updatedCategory);\n\n    }\n\n    return (\n        <div>\n            {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}><FaBars className='m-4' size='2rem'/></button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n            }\n            <div className='flex flex-row py-10 justify-center m-7'>\n                <label className='basis-1/3 font-semibold text-lg'>Title</label>\n                <h1 className='basis-1/3 text-lg italic'>{ title }</h1>\n                    {!editTitle?\n                        <button className='btn' onClick={()=> setEditTitle(true)}>Edit</button>\n                    :\n                        <div>\n                            <input className='title-field'\n                                type=\"text\" \n                                name=\"newTitle\" \n                                value={title} \n                                onChange={(e)=> setTitle(e.target.value)}\n                                required\n                                />\n                            <button className=\"btn\" onClick={()=> {\n                                setEditTitle(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </div>\n                        \n                    }\n            </div>\n            <div className='flex flex-box py-15 justify-center m-7'>\n                <label className='basis-1/3 font-semibold text-lg'>Colour</label>\n                <div className='basis-1/3'>\n                    <div className='circle' style = {{backgroundColor: colour}}></div>\n                </div>\n                {!editColour?\n                        <button className='btn' onClick={()=> setEditColour(true)}>Edit</button>\n                    :\n                        <div>\n                            <p className='colour-info'>Select colour</p>\n                            <input className='colour-selector'\n                                type=\"color\" \n                                name=\"newColour\" \n                                value={colour} \n                                onChange={(e)=> setColour(e.target.value)}\n                                required\n                                />\n                            <button className='btn' onClick={()=> {\n                                setEditColour(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </div>\n                        \n                    }\n            </div>\n        </div>\n    )\n}\n\nexport default DistinctCategoryPage;"]},"metadata":{},"sourceType":"module"}