{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctTaskPage = () => {\n  _s();\n\n  const location = useLocation();\n  const task = location.state.task;\n  const categories = location.state.categories;\n  const priorities = location.state.priorities;\n  console.log(\"location\", location);\n  console.log(\"task\", task);\n  const [loading, setLoading] = useState(true);\n  const [editTitle, setEditTitle] = useState(false);\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [taskCompleted, setTaskCompleted] = useState(task.completed); ///////////\n\n  const [editCategory, setEditCategory] = useState(false);\n  const [taskCategory, setTaskCategory] = useState(task.category.title);\n  const [editPriority, setEditPriority] = useState(false);\n  const [taskPriority, setTaskPriority] = useState(task.priority);\n  const [editDescription, setEditDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(task.description);\n  const [editDate, setEditDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(task.date);\n  const [editTime, setEditTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(task.time);\n  const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n  const [datedTaskType, setDatedTaskType] = useState(task.type);\n  const [editDuration, setEditDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(task.duration);\n  const [editCollaborators, setEditCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  useEffect(() => {\n    setLoading(false);\n  }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n\n  const onClickingTheCheckedButton = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskTitle\",\n          children: \"Task Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTitle(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskTitle\",\n            id: \"taskTitle\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditTitle(false),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: taskCompleted => setTaskCompleted(!taskCompleted),\n          checked: taskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: taskDate ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: taskDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distinctTaskFieldBox\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: datedTaskType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: taskTime ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Collaborators\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctTaskPage, \"vynsfCQ3fBPL+Day6lqHiYIapVQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = DistinctTaskPage;\nexport default DistinctTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js"],"names":["useState","useEffect","useNavigate","useLocation","DistinctTaskPage","location","task","state","categories","priorities","console","log","loading","setLoading","editTitle","setEditTitle","taskTitle","setTaskTitle","title","taskCompleted","setTaskCompleted","completed","editCategory","setEditCategory","taskCategory","setTaskCategory","category","editPriority","setEditPriority","taskPriority","setTaskPriority","priority","editDescription","setEditDescription","taskDescription","setTaskDescription","description","editDate","setEditDate","taskDate","setTaskDate","date","editTime","setEditTime","taskTime","setTaskTime","time","editdatedTaskType","setEditdatedTaskType","datedTaskType","setDatedTaskType","type","editDuration","setEditDuration","taskDuration","setTaskDuration","duration","editCollaborators","setEditCollaborators","taskCollaborators","setTaskCollaborators","onClickingTheCheckedButton","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst DistinctTaskPage = () => {\n    const location = useLocation();\n    const task = location.state.task;\n    const categories = location.state.categories;\n    const priorities = location.state.priorities;\n    console.log(\"location\", location);\n    console.log(\"task\", task);\n\n    const [loading, setLoading] = useState(true);\n\n    const [editTitle, setEditTitle] = useState(false);\n    const [taskTitle, setTaskTitle] = useState(task.title);\n    \n    const [taskCompleted, setTaskCompleted] = useState(task.completed);///////////\n\n    const [editCategory, setEditCategory] = useState(false);\n    const [taskCategory, setTaskCategory] = useState(task.category.title);\n    const [editPriority, setEditPriority] = useState(false);\n    const [taskPriority, setTaskPriority] = useState(task.priority);\n    \n\n    const [editDescription, setEditDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(task.description);\n    const [editDate, setEditDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(task.date);\n    const [editTime, setEditTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(task.time);\n    const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n    const [datedTaskType, setDatedTaskType] = useState(task.type);\n    \n    \n\n    const [editDuration, setEditDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(task.duration);\n    const [editCollaborators, setEditCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n    \n    useEffect(() => {\n        setLoading(false)\n        \n    }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n    \n\n    const onClickingTheCheckedButton = () => {\n            \n    }\n\n    return (\n        \n\n        <div>\n            {loading?\n            <h3>Loading</h3>\n            :\n\n\n            <div>\n                \n                <div>\n                    <label htmlFor=\"taskTitle\">Task Title</label>\n                    <h3>{taskTitle}</h3>\n                    {!editTitle?\n                    <button onClick={()=>setEditTitle(true)}>Edit</button>\n                    :\n                    <>\n                        <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                        <button onClick={()=>setEditTitle(false)}>Done</button>\n                    </>\n                    }  \n                </div>\n                \n                <div>\n                    <input type=\"checkbox\" onClick={(taskCompleted)=>setTaskCompleted(!taskCompleted)} checked={taskCompleted}/>\n                </div>\n            \n\n                <div>\n                    <h4>Category</h4>\n                    <p>{ taskCategory }</p>\n                </div>\n\n                <div>\n                    <h4>Priority</h4>\n                    <p>{ taskPriority }</p>\n                </div>\n\n                <div>\n                    <p>{ taskDescription }</p>\n                </div>\n\n                <div>\n                    <div>\n                        {taskDate?\n                            <p>{ taskDate }</p>\n                            :\n                            null\n                            }\n                    </div>\n\n                    <div className=\"distinctTaskFieldBox\">\n                        <p>{ datedTaskType }</p>\n                    </div>\n                </div>\n\n                <div>\n                    {taskTime?\n                        <p>{ taskTime }</p>\n                        :\n                        null\n                        }\n                </div>\n\n                <div>\n                    <p>{taskDuration}</p>\n                </div>\n\n                \n\n                <div>\n                    <h4>Collaborators</h4>\n                </div>\n            </div>\n            }\n\n        </div>\n    )\n}\n\nexport default DistinctTaskPage;"]},"metadata":{},"sourceType":"module"}