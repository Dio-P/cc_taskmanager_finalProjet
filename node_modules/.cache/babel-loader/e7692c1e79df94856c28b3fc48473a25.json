{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Menu from '../components/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = () => {\n  _s();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [firstName, setFirstName] = useState(null);\n  const [editFirstName, setEditFirstName] = useState(false);\n  const [lastName, setLastName] = useState(null);\n  const [editLastName, setEditLastName] = useState(false);\n  const location = useLocation();\n  const categories = location.state.categories;\n  const priorities = location.state.priorities;\n  const {\n    get,\n    post\n  } = useContext(RequestContext);\n  useEffect(() => {\n    if (!firstName) {\n      setEditFirstName(true);\n    }\n\n    if (!lastName) {\n      setEditLastName(true);\n    }\n  }, []);\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const sendInfoDb = () => {\n    let profileInfo = {\n      firstName,\n      lastName\n    }; // post( ,profileInfo)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" User Profile \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \" First Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), !editFirstName ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setEditFirstName(true),\n        children: \" Edit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [!firstName ? \"Choose a name\" : \"Choose a new name\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          onChange: e => setFirstName(e.target.value),\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \" Last Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), !editLastName ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setEditLastName(true),\n        children: \" Edit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [!firstName ? \"Choose a name\" : \"Choose a new name\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          onChange: e => setLastName(e.target.value),\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditLastName(false);\n            sendInfoDb();\n          },\n          children: \" Done \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfilePage, \"rSeepz+ij5lo6o4FNzzPJO4ozaE=\", false, function () {\n  return [useLocation];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/ProfilePage.js"],"names":["useState","useEffect","useContext","useLocation","Menu","ProfilePage","isMenuOpen","setIsMenuOpen","firstName","setFirstName","editFirstName","setEditFirstName","lastName","setLastName","editLastName","setEditLastName","location","categories","state","priorities","get","post","RequestContext","closeMenuFunction","sendInfoDb","profileInfo","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport Menu from '../components/Menu';\n\nconst ProfilePage = () => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [firstName, setFirstName] = useState(null);\n    const [editFirstName, setEditFirstName] = useState(false)\n    const [lastName, setLastName] = useState(null);\n    const [editLastName, setEditLastName] = useState(false);\n\n    const location = useLocation();\n    const categories = location.state.categories;\n    const priorities = location.state.priorities;\n    const {get, post} = useContext(RequestContext);\n\n    useEffect(() => {\n        if(!firstName){\n            setEditFirstName(true);\n        }\n        if(!lastName){\n            setEditLastName(true);\n        }\n\n    }, []);\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const sendInfoDb = () => {\n        let profileInfo = { firstName, lastName }\n        // post( ,profileInfo)\n    }\n\n    return(\n        <div>\n            {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}>Menu</button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n            }\n            <p> User Profile </p>\n            <div>\n                <label htmlFor=\"firstName\"> First Name </label>\n                {!editFirstName?\n                    <button onClick={setEditFirstName(true)}> Edit </button>\n                :\n                <>\n                    <p>{ !firstName? \"Choose a name\" : \"Choose a new name\" } </p>\n                    <input type=\"text\" id=\"firstName\" name=\"firstName\" onChange={e => setFirstName(e.target.value)} value={firstName}/>\n                </>\n                }\n            </div>\n            <div>\n                <label htmlFor=\"lastName\"> Last Name </label>\n                {!editLastName?\n                    <button onClick={setEditLastName(true)}> Edit </button>\n                :\n                    <>\n                        <p>{ !firstName? \"Choose a name\" : \"Choose a new name\" } </p>\n                        <input type=\"text\" id=\"lastName\" name=\"lastName\" onChange={e => setLastName(e.target.value)} value={lastName}/>\n                        <button onClick={() =>{\n                            setEditLastName(false)\n                            sendInfoDb()\n                        }}> Done </button>\n                    </>\n                }\n            </div>\n\n        </div>\n\n    ) \n}\n\nexport default ProfilePage;"]},"metadata":{},"sourceType":"module"}