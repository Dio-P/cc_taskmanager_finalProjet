{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/TasksBoxMainMenuBar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DropDownMenuCategory from \"./DropDownMenuCategory\";\nimport DropDownMenuPriority from \"./DropDownMenuPriority\";\nimport MultipleOptionsDropdown from \"./MultipleOptionsDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TasksBoxMainMenuBar = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities\n  } = _ref;\n  const [categoriesIsOpen, setCategoriesIsOpen] = useState(false);\n  const [prioritiesIsOpen, setPriotiesIsOpen] = useState(false);\n  const [categoriesTitles, setCategoriesTitles] = useState([]);\n  useEffect(() => {\n    let categoriesTitles = categories.map(category => category.title);\n    setCategoriesTitles(categoriesTitles);\n  }, [categories]); // const[categoriesToDisplay, setCategoriesToDisplay] = useState();\n  // const[prioritiesToDisplay, setPrioritiesToDisplay] = useState();\n  //     const setCategoryFromDropDown = (choosenOption) => {\n  //         setCategoriesToDisplay(choosenOption);\n  // }\n  //     const setPriorityFromDropDown = (choosenOption) => {\n  //         setPrioritiesToDisplay(choosenOption);\n  // }\n  // const [newTask, setNewTask] = useState()\n  // const navigate = useNavigate();\n  // const addTask = () => {\n  //     navigate(\"/task/createNewTask\", {\n  //         state:{\n  //             categories: categories,\n  //             priorities: priorities\n  //         }\n  //     });\n  // }\n  // const {\n  //     logout\n  //   } = useAuth0();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPriotiesIsOpen(!prioritiesIsOpen),\n          children: \"Priorities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), prioritiesIsOpen ? /*#__PURE__*/_jsxDEV(MultipleOptionsDropdown, {\n          priorities: priorities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCategoriesIsOpen(!categoriesIsOpen),\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), categoriesIsOpen ? /*#__PURE__*/_jsxDEV(MultipleOptionsDropdown, {\n          categoriesTitles: categoriesTitles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TasksBoxMainMenuBar, \"e/u6sYId+pl6DypZj5bxUvOkFs8=\");\n\n_c = TasksBoxMainMenuBar;\nexport default TasksBoxMainMenuBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksBoxMainMenuBar\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/TasksBoxMainMenuBar.js"],"names":["useEffect","useState","useNavigate","useAuth0","DropDownMenuCategory","DropDownMenuPriority","MultipleOptionsDropdown","TasksBoxMainMenuBar","categories","priorities","categoriesIsOpen","setCategoriesIsOpen","prioritiesIsOpen","setPriotiesIsOpen","categoriesTitles","setCategoriesTitles","map","category","title"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;;AAKA,MAAMC,mBAAmB,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA+B;AACxD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACW,gBAAD,EAAmBC,iBAAnB,IAAwCZ,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACa,gBAAD,EAAmBC,mBAAnB,IAA0Cd,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,gBAAgB,GAAGN,UAAU,CAACQ,GAAX,CAAeC,QAAQ,IAC1CA,QAAQ,CAACC,KADU,CAAvB;AAGAH,IAAAA,mBAAmB,CAACD,gBAAD,CAAnB;AAGH,GAPQ,EAON,CAACN,UAAD,CAPM,CAAT,CALwD,CAcxD;AACA;AAEJ;AACA;AAGA;AAEA;AACA;AAEI;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,sBACI;AAAA,2BACI;AAAA,8BACI;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAKK,iBAAiB,CAAC,CAACD,gBAAF,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKA,gBAAgB,gBACb,QAAC,uBAAD;AAAyB,UAAA,UAAU,EAAGH;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADa,GAGb,IALR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAKE,mBAAmB,CAAC,CAACD,gBAAF,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKA,gBAAgB,gBACb,QAAC,uBAAD;AAAyB,UAAA,gBAAgB,EAAGI;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADa,GAGb,IALR;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CApED;;GAAMP,mB;;KAAAA,mB;AAsEN,eAAeA,mBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DropDownMenuCategory from \"./DropDownMenuCategory\";\nimport DropDownMenuPriority from \"./DropDownMenuPriority\";\nimport MultipleOptionsDropdown from \"./MultipleOptionsDropdown\";\n\n\n\n\nconst TasksBoxMainMenuBar = ({ categories, priorities }) => {\n    const [categoriesIsOpen, setCategoriesIsOpen] = useState(false);\n    const [prioritiesIsOpen, setPriotiesIsOpen] = useState(false);\n    const [categoriesTitles, setCategoriesTitles] = useState([])\n\n    useEffect(() => {\n        let categoriesTitles = categories.map(category => (\n            category.title\n            ))\n        setCategoriesTitles(categoriesTitles)\n        \n        \n    }, [categories]);\n\n    // const[categoriesToDisplay, setCategoriesToDisplay] = useState();\n    // const[prioritiesToDisplay, setPrioritiesToDisplay] = useState();\n\n//     const setCategoryFromDropDown = (choosenOption) => {\n//         setCategoriesToDisplay(choosenOption);\n   \n    \n// }\n\n//     const setPriorityFromDropDown = (choosenOption) => {\n//         setPrioritiesToDisplay(choosenOption);\n        \n    // }\n    // const [newTask, setNewTask] = useState()\n\n    // const navigate = useNavigate();\n\n    // const addTask = () => {\n    //     navigate(\"/task/createNewTask\", {\n    //         state:{\n    //             categories: categories,\n    //             priorities: priorities\n    //         }\n    //     });\n        \n    // }\n\n    // const {\n    //     logout\n    //   } = useAuth0();\n\n    return (\n        <div>\n            <>\n                <div>\n                    <button onClick={()=> setPriotiesIsOpen(!prioritiesIsOpen)}>Priorities</button>\n                    {prioritiesIsOpen?\n                        <MultipleOptionsDropdown priorities={ priorities }/>\n                    :\n                        null\n                    }\n                </div>\n                <div>\n                    <button onClick={()=> setCategoriesIsOpen(!categoriesIsOpen)}>Categories</button>\n                    {categoriesIsOpen?\n                        <MultipleOptionsDropdown categoriesTitles={ categoriesTitles }/>\n                    :\n                        null\n                    }\n                </div>\n            </>\n        </div>\n\n    )\n}\n\nexport default TasksBoxMainMenuBar;"]},"metadata":{},"sourceType":"module"}