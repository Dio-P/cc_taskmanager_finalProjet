{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllGoalsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Goal from \"../components/Goal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllGoalsContainer = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    goals\n  } = _ref;\n  const [goalEndDate, setGoalEndDate] = useState(null);\n\n  const findDaysAfter = goal => {\n    console.log(\"within find days after\");\n\n    if (goal.type === \"DAILY\") {\n      console.log(\"of daily type\"); ///////\n\n      console.log(\"1 to be returned\"); ///////\n\n      return 1;\n    }\n\n    if (goal.type === \"WEEKLY\") {\n      console.log(\"of weekly type\"); ///////\n\n      console.log(\"7 to be returned\"); ///////\n\n      return 7;\n    }\n\n    if (goal.type === \"MONTHLY\") {\n      // return 30;\n      console.log(\"of monthly type\"); ///////\n\n      console.log(\"monthly to be returned\"); ///////\n\n      return \"MONTHLY\";\n    }\n  };\n\n  const findGoalEndDate = goal => {\n    console.log(\"within find goals end date\");\n    let daysAfter = findDaysAfter(goal);\n    let goalStartDate = goal.startDate;\n    let endDate = new Date(goalStartDate);\n\n    if (goalStartDate && daysAfter) {\n      if (daysAfter === \"MONTHLY\") {\n        endDate.setMonth(endDate.getMonth() + 1);\n        console.log(\"startDateMonth\", goalStartDate); //////////////\n\n        console.log(\"endDateMonth\", endDate); //////////////\n\n        return endDate;\n      } else {\n        endDate.setDate(endDate.getDate() + daysAfter);\n        console.log(\"startDateMonth\", goalStartDate); //////////////\n\n        console.log(\"endDate\", endDate); //////////////\n\n        return endDate;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goals.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n      goal: goal,\n      endDate: findGoalEndDate(goal),\n      categories: categories,\n      priorities: priorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllGoalsContainer, \"j6xvshJ7OU1Gr6tX36iS+S4tScc=\");\n\n_c = AllGoalsContainer;\nexport default AllGoalsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllGoalsContainer\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllGoalsContainer.js"],"names":["useState","Goal","AllGoalsContainer","categories","priorities","goals","goalEndDate","setGoalEndDate","findDaysAfter","goal","console","log","type","findGoalEndDate","daysAfter","goalStartDate","startDate","endDate","Date","setMonth","getMonth","setDate","getDate","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,iBAAiB,GAAG,QAAuC;AAAA;;AAAA,MAArC;AAACC,IAAAA,UAAD;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,GAAqC;AAC7D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMQ,aAAa,GAAIC,IAAD,IAAU;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AACA,QAAGF,IAAI,CAACG,IAAL,KAAY,OAAf,EAAuB;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADmB,CACU;;AAC7BD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAFmB,CAEa;;AAChC,aAAO,CAAP;AAEH;;AAAA,QAAGF,IAAI,CAACG,IAAL,KAAY,QAAf,EAAwB;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADqB,CACS;;AAC9BD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAFqB,CAEW;;AAChC,aAAO,CAAP;AAEH;;AAAA,QAAGF,IAAI,CAACG,IAAL,KAAY,SAAf,EAAyB;AACtB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAFsB,CAES;;AAC/BD,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAHsB,CAGgB;;AACtC,aAAO,SAAP;AAEH;AACJ,GAnBD;;AAqBA,QAAME,eAAe,GAAIJ,IAAD,IAAU;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAIG,SAAS,GAAGN,aAAa,CAACC,IAAD,CAA7B;AACA,QAAIM,aAAa,GAAGN,IAAI,CAACO,SAAzB;AACA,QAAIC,OAAO,GAAG,IAAIC,IAAJ,CAASH,aAAT,CAAd;;AACA,QAAGA,aAAa,IAAID,SAApB,EAA8B;AAC1B,UAAGA,SAAS,KAAG,SAAf,EAAyB;AACrBG,QAAAA,OAAO,CAACE,QAAR,CAAiBF,OAAO,CAACG,QAAR,KAAqB,CAAtC;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,aAA9B,EAFqB,CAEwB;;AAC7CL,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,OAA5B,EAHqB,CAGgB;;AACrC,eAAOA,OAAP;AAEH,OAND,MAMK;AAEDA,QAAAA,OAAO,CAACI,OAAR,CAAgBJ,OAAO,CAACK,OAAR,KAAoBR,SAApC;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,aAA9B,EAHC,CAG4C;;AAC7CL,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,OAAvB,EAJC,CAI+B;;AAChC,eAAOA,OAAP;AAEH;AACJ;AACJ,GArBD;;AAuBA,sBACI;AAAA,cACMZ,KAAK,CAACkB,GAAN,CAAUd,IAAI,iBACZ,QAAC,IAAD;AACA,MAAA,IAAI,EAAGA,IADP;AAEA,MAAA,OAAO,EAAGI,eAAe,CAACJ,IAAD,CAFzB;AAGA,MAAA,UAAU,EAAGN,UAHb;AAIA,MAAA,UAAU,EAAGC;AAJb;AAAA;AAAA;AAAA;AAAA,YADF;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA5DD;;GAAMF,iB;;KAAAA,iB;AA8DN,eAAeA,iBAAf","sourcesContent":["import { useState } from \"react\";\nimport Goal from \"../components/Goal\"\n\nconst AllGoalsContainer = ( {categories, priorities, goals} ) => {\n    const [goalEndDate, setGoalEndDate] = useState(null);\n\n    const findDaysAfter = (goal) => {\n        console.log(\"within find days after\");\n        if(goal.type===\"DAILY\"){\n            console.log(\"of daily type\");///////\n            console.log(\"1 to be returned\");///////\n            return 1;\n\n        }if(goal.type===\"WEEKLY\"){\n            console.log(\"of weekly type\");///////\n            console.log(\"7 to be returned\");///////\n            return 7;\n            \n        }if(goal.type===\"MONTHLY\"){\n            // return 30;\n            console.log(\"of monthly type\");///////\n            console.log(\"monthly to be returned\");///////\n            return \"MONTHLY\";\n            \n        } \n    }\n\n    const findGoalEndDate = (goal) => {\n        console.log(\"within find goals end date\");\n        let daysAfter = findDaysAfter(goal);\n        let goalStartDate = goal.startDate;\n        let endDate = new Date(goalStartDate);\n        if(goalStartDate && daysAfter){\n            if(daysAfter===\"MONTHLY\"){\n                endDate.setMonth(endDate.getMonth() + 1);\n                console.log(\"startDateMonth\", goalStartDate);//////////////\n                console.log(\"endDateMonth\", endDate);//////////////\n                return endDate;\n\n            }else{\n                \n                endDate.setDate(endDate.getDate() + daysAfter);\n                console.log(\"startDateMonth\", goalStartDate);//////////////\n                console.log(\"endDate\", endDate);//////////////\n                return endDate;\n\n            }\n        }\n    }\n\n    return(\n        <div>\n            { goals.map(goal => (\n                <Goal\n                goal={ goal }\n                endDate={ findGoalEndDate(goal) }\n                categories={ categories }\n                priorities={ priorities }\n                />\n            )) }\n        </div>\n\n    )\n}\n\nexport default AllGoalsContainer"]},"metadata":{},"sourceType":"module"}