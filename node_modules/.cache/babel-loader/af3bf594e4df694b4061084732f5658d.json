{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllTasksContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport TasksBox from \"./TasksBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllTasksContainer = _ref => {\n  _s();\n\n  let {\n    uncompletedTasksToDisplay,\n    completedTasksToDisplay,\n    categories,\n    priorities\n  } = _ref;\n  const [doOns, setDoOns] = useState([]);\n  const [doBys, setDoBys] = useState([]);\n  const [somedays, setSomedays] = useState([]);\n  const [doOnsCompl, setDoOnsCompl] = useState([]);\n  const [doBysCompl, setDoBysCompl] = useState([]);\n  const [somedaysCompl, setSomedaysCompl] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const doOnsHelper = [];\n    const doBysHelper = [];\n    const somedaysHelper = []; // deviding the tasks by type and setting it in states\n    // if(uncompletedTasks){\n\n    for (let task of uncompletedTasksToDisplay) {\n      // console.log(\"task\", task);/////////////\n      if (task.type === \"DO_ON\") {\n        doOnsHelper.push(task);\n      }\n\n      if (task.type === \"DO_BY\") {\n        doBysHelper.push(task);\n      }\n\n      if (task.type === \"SOMEDAY\") {\n        somedaysHelper.push(task);\n      }\n    }\n\n    setDoOns(doOnsHelper);\n    setDoBys(doBysHelper);\n    setSomedays(somedaysHelper); // }\n  }, [uncompletedTasksToDisplay]);\n  useEffect(() => {\n    const doOnsHelper = [];\n    const doBysHelper = [];\n    const somedaysHelper = []; // deviding the tasks by type and setting it in states\n    // if(uncompletedTasks){\n\n    for (let task of completedTasksToDisplay) {\n      // console.log(\"task\", task);/////////////\n      if (task.type === \"DO_ON\") {\n        doOnsHelper.push(task);\n      }\n\n      if (task.type === \"DO_BY\") {\n        doBysHelper.push(task);\n      }\n\n      if (task.type === \"SOMEDAY\") {\n        somedaysHelper.push(task);\n      }\n    }\n\n    setDoOnsCompl(doOnsHelper);\n    setDoBysCompl(doBysHelper);\n    setSomedaysCompl(somedaysHelper); // }\n  }, [completedTasksToDisplay]);\n  useEffect(() => {\n    if (doOns && doBys && somedays) {\n      setLoading(false);\n    }\n  }, [doOns, doBys, somedays]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TasksBox, {\n        tasks: doOns,\n        tasksComplete: doOnsCompl,\n        categories: categories,\n        priorities: priorities,\n        title: \"Weeks Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TasksBox, {\n        tasks: doBys,\n        tasksComplete: doBysCompl,\n        categories: categories,\n        priorities: priorities,\n        title: \"Get it done soon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TasksBox, {\n        tasks: somedays,\n        tasksComplete: somedaysCompl,\n        categories: categories,\n        priorities: priorities,\n        title: \"Get it done someday\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllTasksContainer, \"FamXwuPpH/g2LmfocJsut36UdE4=\");\n\n_c = AllTasksContainer;\nexport default AllTasksContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTasksContainer\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllTasksContainer.js"],"names":["useEffect","useState","TasksBox","AllTasksContainer","uncompletedTasksToDisplay","completedTasksToDisplay","categories","priorities","doOns","setDoOns","doBys","setDoBys","somedays","setSomedays","doOnsCompl","setDoOnsCompl","doBysCompl","setDoBysCompl","somedaysCompl","setSomedaysCompl","loading","setLoading","doOnsHelper","doBysHelper","somedaysHelper","task","type","push"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport TasksBox from \"./TasksBox\";\n\nconst AllTasksContainer = ({ uncompletedTasksToDisplay, completedTasksToDisplay, categories, priorities }) => {\n    const [doOns, setDoOns] = useState([]);\n    const [doBys, setDoBys] = useState([]);\n    const [somedays, setSomedays] = useState([]);\n    const [doOnsCompl, setDoOnsCompl] = useState([]);\n    const [doBysCompl, setDoBysCompl] = useState([]);\n    const [somedaysCompl, setSomedaysCompl] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const doOnsHelper = [];\n        const doBysHelper = [];\n        const somedaysHelper = [];\n\n        // deviding the tasks by type and setting it in states\n        // if(uncompletedTasks){\n            for(let task of uncompletedTasksToDisplay){\n                // console.log(\"task\", task);/////////////\n                if(task.type===\"DO_ON\"){\n                    doOnsHelper.push(task)\n\n                }if(task.type===\"DO_BY\"){\n                    doBysHelper.push(task)\n\n                }if(task.type===\"SOMEDAY\"){\n                    somedaysHelper.push(task)\n\n                }\n            }\n            setDoOns(doOnsHelper);\n                setDoBys(doBysHelper);\n                setSomedays(somedaysHelper);\n        // }\n    }, [uncompletedTasksToDisplay]);\n\n    useEffect(() => {\n        const doOnsHelper = [];\n        const doBysHelper = [];\n        const somedaysHelper = [];\n\n        // deviding the tasks by type and setting it in states\n        // if(uncompletedTasks){\n            for(let task of completedTasksToDisplay){\n                // console.log(\"task\", task);/////////////\n                if(task.type===\"DO_ON\"){\n                    doOnsHelper.push(task)\n\n                }if(task.type===\"DO_BY\"){\n                    doBysHelper.push(task)\n\n                }if(task.type===\"SOMEDAY\"){\n                    somedaysHelper.push(task)\n\n                }\n            }\n            setDoOnsCompl(doOnsHelper);\n            setDoBysCompl(doBysHelper);\n            setSomedaysCompl(somedaysHelper);\n        // }\n    }, [completedTasksToDisplay]);\n\n    useEffect(() => {\n        if(doOns&& doBys&& somedays){\n            setLoading(false);\n        }\n        \n    }, [doOns, doBys, somedays]);\n\n\n    return (\n        <div>\n            {(loading)? \n            <p>Loading</p>\n            :\n            <div>\n            <TasksBox \n                tasks={ doOns } \n                tasksComplete={ doOnsCompl }\n                categories={ categories }\n                priorities={ priorities } \n                title = \"Weeks Tasks\"\n            />\n\n            <TasksBox \n                tasks={ doBys } \n                tasksComplete={ doBysCompl }\n                categories={ categories }\n                priorities={ priorities }\n                title = \"Get it done soon\"\n            />\n\n            <TasksBox \n                tasks={ somedays } \n                tasksComplete={ somedaysCompl }\n                categories={ categories }\n                priorities={ priorities }\n                title = \"Get it done someday\"\n            />\n\n            </div>\n            }\n            \n        </div>\n    )\n}\n\nexport default AllTasksContainer;\n"]},"metadata":{},"sourceType":"module"}