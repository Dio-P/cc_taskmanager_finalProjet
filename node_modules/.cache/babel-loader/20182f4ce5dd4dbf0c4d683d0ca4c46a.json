{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/TasksBoxMainMenuBar.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DropDownMenuCategory from \"./DropDownMenuCategory\";\nimport DropDownMenuPriority from \"./DropDownMenuPriority\";\nimport MultipleOptionsDropdown from \"./MultipleOptionsDropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TasksBoxMainMenuBar = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    setCategoriesFromDropDown,\n    setPrioritiesFromDropDown,\n    categoriesTitles\n  } = _ref;\n  const [categoriesIsOpen, setCategoriesIsOpen] = useState(true);\n  const [prioritiesIsOpen, setPrioritiesIsOpen] = useState(true);\n  const [uiStateCategories, setUiStateCategories] = useState(\"invisible\");\n  const [uiStatePriorities, setUiStatePriorities] = useState(\"invisible\");\n  useEffect(() => {\n    if (categoriesIsOpen) {\n      setUiStateCategories(\"invisible\");\n    } else {\n      setUiStateCategories();\n    }\n  }, [categoriesIsOpen]);\n  useEffect(() => {\n    if (prioritiesIsOpen) {\n      setUiStatePriorities(\"invisible\");\n    } else {\n      setUiStatePriorities(\"visible\");\n    }\n  }, [prioritiesIsOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prior-tab\",\n        onClick: () => setPrioritiesIsOpen(!prioritiesIsOpen),\n        children: \"Priorities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), !prioritiesIsOpen ? /*#__PURE__*/_jsxDEV(MultipleOptionsDropdown, {\n        options: priorities,\n        setOptionsFromDropDown: setPrioritiesFromDropDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"categ-tab\",\n        onClick: () => setCategoriesIsOpen(!categoriesIsOpen),\n        children: \"Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), !categoriesIsOpen ? /*#__PURE__*/_jsxDEV(MultipleOptionsDropdown, {\n        options: categoriesTitles,\n        setOptionsFromDropDown: setCategoriesFromDropDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TasksBoxMainMenuBar, \"WV/4sO4ukdvG4d3lxoPq6dN+3F4=\");\n\n_c = TasksBoxMainMenuBar;\nexport default TasksBoxMainMenuBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksBoxMainMenuBar\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/components/TasksBoxMainMenuBar.js"],"names":["useEffect","useState","useNavigate","useAuth0","DropDownMenuCategory","DropDownMenuPriority","MultipleOptionsDropdown","TasksBoxMainMenuBar","categories","priorities","setCategoriesFromDropDown","setPrioritiesFromDropDown","categoriesTitles","categoriesIsOpen","setCategoriesIsOpen","prioritiesIsOpen","setPrioritiesIsOpen","uiStateCategories","setUiStateCategories","uiStatePriorities","setUiStatePriorities"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;;AAKA,MAAMC,mBAAmB,GAAG,QAAwG;AAAA;;AAAA,MAAvG;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,yBAA1B;AAAqDC,IAAAA,yBAArD;AAAgFC,IAAAA;AAAhF,GAAuG;AAChI,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACgB,iBAAD,EAAoBC,oBAApB,IAA4CjB,QAAQ,CAAC,WAAD,CAA1D;AACA,QAAM,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,WAAD,CAA1D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGa,gBAAH,EAAoB;AAChBK,MAAAA,oBAAoB,CAAC,WAAD,CAApB;AACH,KAFD,MAEK;AACDA,MAAAA,oBAAoB;AACvB;AAEJ,GAPQ,EAON,CAAEL,gBAAF,CAPM,CAAT;AASAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,gBAAH,EAAoB;AAChBK,MAAAA,oBAAoB,CAAC,WAAD,CAApB;AACH,KAFD,MAEK;AACDA,MAAAA,oBAAoB,CAAC,SAAD,CAApB;AACH;AAEJ,GAPQ,EAON,CAAEL,gBAAF,CAPM,CAAT;AASA,sBACI;AAAA,4BAEQ;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAKC,mBAAmB,CAAC,CAACD,gBAAF,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,CAACA,gBAAD,gBACG,QAAC,uBAAD;AACI,QAAA,OAAO,EAAGN,UADd;AAEI,QAAA,sBAAsB,EAAGE;AAF7B;AAAA;AAAA;AAAA;AAAA,cADH,GAMG,IARR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAaQ;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAKG,mBAAmB,CAAC,CAACD,gBAAF,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,CAACA,gBAAD,gBACG,QAAC,uBAAD;AACI,QAAA,OAAO,EAAGD,gBADd;AAEI,QAAA,sBAAsB,EAAGF;AAF7B;AAAA;AAAA;AAAA;AAAA,cADH,GAMG,IARR;AAAA;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA,kBADJ;AA6BH,CArDD;;GAAMH,mB;;KAAAA,mB;AAuDN,eAAeA,mBAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport DropDownMenuCategory from \"./DropDownMenuCategory\";\nimport DropDownMenuPriority from \"./DropDownMenuPriority\";\nimport MultipleOptionsDropdown from \"./MultipleOptionsDropdown\";\n\n\n\n\nconst TasksBoxMainMenuBar = ({ categories, priorities, setCategoriesFromDropDown, setPrioritiesFromDropDown, categoriesTitles }) => {\n    const [categoriesIsOpen, setCategoriesIsOpen] = useState(true);\n    const [prioritiesIsOpen, setPrioritiesIsOpen] = useState(true);\n    const [uiStateCategories, setUiStateCategories] = useState(\"invisible\");\n    const [uiStatePriorities, setUiStatePriorities] = useState(\"invisible\");\n\n    useEffect(() => {\n        if(categoriesIsOpen){\n            setUiStateCategories(\"invisible\");\n        }else{\n            setUiStateCategories();\n        }\n        \n    }, [ categoriesIsOpen ]);\n\n    useEffect(() => {\n        if(prioritiesIsOpen){\n            setUiStatePriorities(\"invisible\");\n        }else{\n            setUiStatePriorities(\"visible\");\n        }\n        \n    }, [ prioritiesIsOpen ]);\n\n    return (\n        <>\n           \n                <div>\n                    <button className=\"prior-tab\" onClick={()=> setPrioritiesIsOpen(!prioritiesIsOpen)}>Priorities</button>\n                    {!prioritiesIsOpen?\n                        <MultipleOptionsDropdown \n                            options={ priorities }\n                            setOptionsFromDropDown={ setPrioritiesFromDropDown }\n                            />\n                    :\n                        null\n                    }\n                </div>\n                <div>\n                    <button className=\"categ-tab\" onClick={()=> setCategoriesIsOpen(!categoriesIsOpen)}>Categories</button>\n                    {!categoriesIsOpen?\n                        <MultipleOptionsDropdown \n                            options={ categoriesTitles }\n                            setOptionsFromDropDown={ setCategoriesFromDropDown }\n                            />\n                    :\n                        null\n                    }\n                </div>\n           \n        </>\n\n    )\n}\n\nexport default TasksBoxMainMenuBar;"]},"metadata":{},"sourceType":"module"}