{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctGoalPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctGoalPage = (categories, priorities, goals, goalTypesList) => {\n  _s();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [goalTitle, setGoalTitle] = useState(null);\n  const [editGoalTitle, setEditGoalTitle] = useState(false);\n  const [goalType, setGoalType] = useState(null);\n  const [editGoalType, setEditGoalType] = useState(false);\n  const [goalTarget, setGoalTarget] = useState(null);\n  const [editGoalTarget, setEditGoalTarget] = useState(false);\n  const [goalStartDate, setGoalStartDate] = useState(null);\n  const [editGoalStartDate, setEditGoalStartDate] = useState(false);\n  const [goalEndDate, setGoalEndDate] = useState(null);\n  const [editGoalEndDate, setEditGoalEndDate] = useState(false);\n  const [goalCategories, setGoalCategories] = useState(null);\n  const [editGoalCategories, setEditGoalCategories] = useState(false);\n  const [goalActive, setGoalActive] = useState(true); // const [goalSucceeded, setGoalSucceeded] = useState(true);\n\n  const {\n    get,\n    post\n  } = useContext(RequestContext);\n  const location = useLocation();\n  const goal = location.state.goal; // const categories = location.state.categories;\n  // const priorities = location.state.priorities;\n\n  const endDate = location.state.endDate;\n  useEffect(() => {\n    setGoalTitle(goal.title);\n    setGoalType(goal.type);\n    setGoalTarget(goal.target);\n    setGoalStartDate(goal.startDate);\n    setGoalEndDate(endDate);\n    setGoalCategories(goal.categories);\n    setGoalActive(goal.active);\n  }, [goal]);\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingDone = () => {\n    let updatedGoal = {\n      goalTitle,\n      goalType,\n      goalTarget,\n      goalStartDate\n    };\n    console.log(\"updatedGoal\", updatedGoal); // post(, updatedGoal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), !editGoalTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalTitle(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"goalTitle\",\n          id: \"goalTitle\",\n          value: goalTitle,\n          onChange: e => setGoalTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalTitle(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), !editGoalType ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalType(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"goalType\",\n          id: \"goalType\",\n          onChange: e => setGoalType(e.target.value),\n          children: goalTypesList.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalType(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Target \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalTarget\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), !editGoalTarget ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalTarget(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"goalTarget\",\n          id: \"goalTarget\",\n          value: goalTarget,\n          onChange: e => setGoalTarget(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalTarget(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal Start Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalStartDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), !editGoalStartDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditGoalStartDate(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"goalStartDate\",\n          id: \"goalStartDate\",\n          value: goalStartDate,\n          onChange: e => setGoalStartDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditGoalStartDate(false);\n            onClickingDone();\n          },\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Goal End Date \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: goalEndDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctGoalPage, \"hc65fuALSsPpqx4HFv1GP5zySgE=\", false, function () {\n  return [useLocation];\n});\n\n_c = DistinctGoalPage;\nexport default DistinctGoalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctGoalPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctGoalPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","RequestContext","Menu","DistinctGoalPage","categories","priorities","goals","goalTypesList","isMenuOpen","setIsMenuOpen","goalTitle","setGoalTitle","editGoalTitle","setEditGoalTitle","goalType","setGoalType","editGoalType","setEditGoalType","goalTarget","setGoalTarget","editGoalTarget","setEditGoalTarget","goalStartDate","setGoalStartDate","editGoalStartDate","setEditGoalStartDate","goalEndDate","setGoalEndDate","editGoalEndDate","setEditGoalEndDate","goalCategories","setGoalCategories","editGoalCategories","setEditGoalCategories","goalActive","setGoalActive","get","post","location","goal","state","endDate","title","type","target","startDate","active","closeMenuFunction","onClickingDone","updatedGoal","console","log","e","value","map"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext  } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\n\nconst DistinctGoalPage = (categories, priorities, goals, goalTypesList) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [goalTitle, setGoalTitle] = useState(null);\n    const [editGoalTitle, setEditGoalTitle] = useState(false);\n    const [goalType, setGoalType] = useState(null);\n    const [editGoalType, setEditGoalType] = useState(false);\n    const [goalTarget, setGoalTarget] = useState(null);\n    const [editGoalTarget, setEditGoalTarget] = useState(false);\n    const [goalStartDate, setGoalStartDate] = useState(null);\n    const [editGoalStartDate, setEditGoalStartDate] = useState(false);\n    const [goalEndDate, setGoalEndDate] = useState(null);\n    const [editGoalEndDate, setEditGoalEndDate] = useState(false);\n    const [goalCategories, setGoalCategories] = useState(null);\n    const [editGoalCategories, setEditGoalCategories] = useState(false);\n    const [goalActive, setGoalActive] = useState(true);\n    // const [goalSucceeded, setGoalSucceeded] = useState(true);\n\n    const {get, post} = useContext(RequestContext);\n\n    const location = useLocation();\n    const goal = location.state.goal;\n    // const categories = location.state.categories;\n    // const priorities = location.state.priorities;\n    const endDate = location.state.endDate;\n\n    useEffect(() => {\n        setGoalTitle(goal.title);\n        setGoalType(goal.type);\n        setGoalTarget(goal.target);\n        setGoalStartDate(goal.startDate);\n        setGoalEndDate(endDate);\n        setGoalCategories(goal.categories);\n        setGoalActive(goal.active);\n\n    }, [goal]);\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingDone = () => {\n        let updatedGoal = {goalTitle, goalType, goalTarget, goalStartDate}\n        console.log(\"updatedGoal\", updatedGoal);\n        // post(, updatedGoal);\n        \n    }\n\n    return(\n        <div>\n             {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}>Menu</button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n            }\n            <div>\n                <label> Goal Title </label>\n                <h3>{goalTitle}</h3>\n                {!editGoalTitle?\n                    <button onClick={()=>setEditGoalTitle(true)}>Edit</button>\n                :\n                    <>\n                        <input \n                            type=\"text\" \n                            name=\"goalTitle\" \n                            id=\"goalTitle\" \n                            value={goalTitle} \n                            onChange={e=> setGoalTitle(e.target.value)} \n                            required\n                        />\n                        <button onClick={()=>{\n                            setEditGoalTitle(false)\n                            onClickingDone()\n                            }}>Done</button>\n                    </>\n                }  \n            </div>\n            <div>\n                <label> Goal Type </label>\n                <h3>{goalType}</h3>\n                {!editGoalType?\n                    <button onClick={()=>setEditGoalType(true)}>Edit</button>\n                :\n                    <>\n                        <select name=\"goalType\" id=\"goalType\" onChange={e=> setGoalType(e.target.value)}>\n                            {goalTypesList.map(type => (\n                                <option value={ type }>{ type }</option>\n                            ))}\n                        </select>\n                        <button onClick={()=>{\n                            setEditGoalType(false)\n                            onClickingDone()\n                            }}>Done</button>\n                    </>\n                }  \n            </div>\n            <div>\n                <label> Goal Target </label>\n                <h3>{goalTarget}</h3>\n                {!editGoalTarget?\n                    <button onClick={()=>setEditGoalTarget(true)}>Edit</button>\n                :\n                    <>\n                        <input \n                            type=\"text\" \n                            name=\"goalTarget\" \n                            id=\"goalTarget\" \n                            value={goalTarget} \n                            onChange={e=> setGoalTarget(e.target.value)} \n                            required\n                        />\n                        <button onClick={()=>{\n                            setEditGoalTarget(false)\n                            onClickingDone()\n                            }}>Done</button>\n                    </>\n                }  \n            </div>\n            <div>\n                <label> Goal Start Date </label>\n                <h3>{goalStartDate}</h3>\n                {!editGoalStartDate?\n                    <button onClick={()=>setEditGoalStartDate(true)}>Edit</button>\n                :\n                    <>\n                        <input type=\"date\" name=\"goalStartDate\" id=\"goalStartDate\" value={goalStartDate} onChange={e=> setGoalStartDate(e.target.value)} required/>\n                        <button onClick={()=>{\n                            setEditGoalStartDate(false)\n                            onClickingDone()\n                            }}>Done</button>\n                    </>\n                }  \n            </div>\n            <div>\n                <label> Goal End Date </label>\n                <h3>{goalEndDate}</h3>\n            </div>\n{/*             how will the categories be looked for?\n            <div>\n                <label> Goal Categories </label>\n                <h3>{goalCategories}</h3>\n                {!editGoalCategories?\n                    <button onClick={()=>setEditGoalCategories(true)}>Edit</button>\n                :\n                    <>\n                        <input type=\"text\" name=\"goalCategories\" id=\"goalCategories\" value={goalSetDate} onChange={e=> setGoalCategories(e.target.value)} required/>\n                        <button onClick={()=>{\n                            setEditGoalCategories(false)\n                            onClickingDone()\n                            }}>Done</button>\n                    </>\n                }  \n            </div> */}\n        </div>\n\n    )\n}\n\nexport default DistinctGoalPage;"]},"metadata":{},"sourceType":"module"}