{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllGoalsContainer.js\";\nimport { useState } from \"react\";\nimport Goal from \"../components/Goal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllGoalsContainer = _ref => {\n  let {\n    categories,\n    priorities,\n    goals\n  } = _ref;\n  // const [goalEndDate, setGoalEndDate] = useState(null);\n  // const findDaysAfter = (goal) => {\n  //     console.log(\"within find days after\");\n  //     if(goal.type===\"DAILY\"){\n  //         console.log(\"of daily type\");///////\n  //         console.log(\"1 to be returned\");///////\n  //         return 1;\n  //     }if(goal.type===\"WEEKLY\"){\n  //         console.log(\"of weekly type\");///////\n  //         console.log(\"7 to be returned\");///////\n  //         return 7;\n  //     }if(goal.type===\"MONTHLY\"){\n  //         // return 30;\n  //         console.log(\"of monthly type\");///////\n  //         console.log(\"monthly to be returned\");///////\n  //         return \"MONTHLY\";\n  //     } \n  // }\n  // const findGoalEndDate = (goal) => {\n  //     console.log(\"within find goals end date\");\n  //     let daysAfter = findDaysAfter(goal);\n  //     let goalStartDate = goal.startDate;\n  //     let endDate = new Date(goalStartDate.split(\"/\").reverse().toString());\n  //     const options = { year: \"numeric\", month: \"numeric\", day: \"numeric\" }; \n  //     if(goalStartDate && daysAfter){\n  //         if(daysAfter===\"MONTHLY\"){\n  //             // console.log('goalStartDate.splilt(\"/\")', goalStartDate.split(\"/\").reverse().toString());\n  //             // console.log(\"start Date Month\", endDate);\n  //             // console.log(\"getMonth\", endDate.getMonth());\n  //             endDate.setMonth(endDate.getMonth() + 1);\n  //             // console.log(\"startDateMonth\", goalStartDate);//////////////\n  //             // console.log(\"endDateMonth\", endDate.toLocaleDateString('en-GB',options));//////////////\n  //             return endDate.toLocaleDateString();\n  //         }else{\n  //             // console.log(\"start Date\", endDate);\n  //             // console.log(\"daysAfter\", daysAfter);\n  //             // console.log(\"getDay\", endDate.getDate());\n  //             endDate.setDate(endDate.getDate() + daysAfter);\n  //             // console.log(\"startDate\", goalStartDate);//////////////\n  //             // console.log(\"endDate\", endDate.toLocaleDateString('en-GB', options));//////////////\n  //             return endDate.toLocaleDateString();\n  //         }\n  //     }\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goals.map(goal => /*#__PURE__*/_jsxDEV(Goal, {\n      goal: goal // endDate={ findGoalEndDate(goal) }\n      ,\n      categories: categories,\n      priorities: priorities\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AllGoalsContainer;\nexport default AllGoalsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllGoalsContainer\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AllGoalsContainer.js"],"names":["useState","Goal","AllGoalsContainer","categories","priorities","goals","map","goal","Math","random"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,iBAAiB,GAAG,QAAuC;AAAA,MAArC;AAACC,IAAAA,UAAD;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,GAAqC;AAC7D;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACI;AAAA,cACMA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACZ,QAAC,IAAD;AAEI,MAAA,IAAI,EAAGA,IAFX,CAGI;AAHJ;AAII,MAAA,UAAU,EAAGJ,UAJjB;AAKI,MAAA,UAAU,EAAGC;AALjB,OACSI,IAAI,CAACC,MAAL,EADT;AAAA;AAAA;AAAA;AAAA,YADF;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnED;;KAAMP,iB;AAqEN,eAAeA,iBAAf","sourcesContent":["import { useState } from \"react\";\nimport Goal from \"../components/Goal\"\n\nconst AllGoalsContainer = ( {categories, priorities, goals} ) => {\n    // const [goalEndDate, setGoalEndDate] = useState(null);\n\n    // const findDaysAfter = (goal) => {\n    //     console.log(\"within find days after\");\n    //     if(goal.type===\"DAILY\"){\n    //         console.log(\"of daily type\");///////\n    //         console.log(\"1 to be returned\");///////\n    //         return 1;\n\n    //     }if(goal.type===\"WEEKLY\"){\n    //         console.log(\"of weekly type\");///////\n    //         console.log(\"7 to be returned\");///////\n    //         return 7;\n            \n    //     }if(goal.type===\"MONTHLY\"){\n    //         // return 30;\n    //         console.log(\"of monthly type\");///////\n    //         console.log(\"monthly to be returned\");///////\n    //         return \"MONTHLY\";\n            \n    //     } \n    // }\n\n    // const findGoalEndDate = (goal) => {\n    //     console.log(\"within find goals end date\");\n    //     let daysAfter = findDaysAfter(goal);\n    //     let goalStartDate = goal.startDate;\n    //     let endDate = new Date(goalStartDate.split(\"/\").reverse().toString());\n    //     const options = { year: \"numeric\", month: \"numeric\", day: \"numeric\" }; \n    //     if(goalStartDate && daysAfter){\n    //         if(daysAfter===\"MONTHLY\"){\n    //             // console.log('goalStartDate.splilt(\"/\")', goalStartDate.split(\"/\").reverse().toString());\n    //             // console.log(\"start Date Month\", endDate);\n    //             // console.log(\"getMonth\", endDate.getMonth());\n    //             endDate.setMonth(endDate.getMonth() + 1);\n    //             // console.log(\"startDateMonth\", goalStartDate);//////////////\n    //             // console.log(\"endDateMonth\", endDate.toLocaleDateString('en-GB',options));//////////////\n    //             return endDate.toLocaleDateString();\n\n    //         }else{\n    //             // console.log(\"start Date\", endDate);\n    //             // console.log(\"daysAfter\", daysAfter);\n    //             // console.log(\"getDay\", endDate.getDate());\n    //             endDate.setDate(endDate.getDate() + daysAfter);\n    //             // console.log(\"startDate\", goalStartDate);//////////////\n    //             // console.log(\"endDate\", endDate.toLocaleDateString('en-GB', options));//////////////\n    //             return endDate.toLocaleDateString();\n\n    //         }\n    //     }\n    // }\n\n    return(\n        <div>\n            { goals.map(goal => (\n                <Goal\n                    key={Math.random()}\n                    goal={ goal }\n                    // endDate={ findGoalEndDate(goal) }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n            )) }\n        </div>\n\n    )\n}\n\nexport default AllGoalsContainer"]},"metadata":{},"sourceType":"module"}