{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenu from \"../components/DropDownMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddNewTaskPage = () => {\n  _s();\n\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [taskCategory, setTaskCategory] = useState(null);\n  const [taskPriority, setTaskPriority] = useState(null);\n  const [hasDescription, setHasDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(null);\n  const [hasDate, setHasDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(null);\n  const [datedTaskType, setDatedTaskType] = useState(null);\n  const [hasTime, setHasTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(null);\n  const [hasDuration, setHasDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(null);\n  const [hasCollaborators, setHasCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  const location = useLocation();\n  const categories = location.state.categories;\n  const priorities = location.state.priorities;\n  const {\n    get,\n    post\n  } = useContext(RequestContext); // let year = Date.prototype.getFullYear()\n  // let month = Date.prototype.getMonth()\n  // let day = Date.prototype.getDate()\n\n  useEffect(() => {\n    setHasDescription(false);\n  }, []);\n\n  const setCategoryFromDropDown = choosenOption => {\n    setTaskCategory(choosenOption);\n  };\n\n  const setPriorityFromDropDown = choosenOption => {\n    setTaskPriority(choosenOption);\n  };\n\n  const addNewTask = e => {\n    e.preventDefault();\n    let newTask = {};\n    newTask[\"title\"] = taskTitle;\n    newTask[\"category\"] = taskCategory;\n    newTask[\"priority\"] = taskPriority;\n    newTask[\"completed\"] = false;\n    newTask[\"completedTimeStamp\"] = Date.now();\n\n    if (taskDescription) {\n      newTask[\"description\"] = taskDescription;\n    }\n\n    if (taskDate) {\n      newTask[\"date\"] = taskDate;\n      newTask[\"type\"] = datedTaskType;\n    } else {\n      newTask[\"type\"] = \"SOMEDAY\";\n    }\n\n    if (taskTime) {\n      newTask[\"time\"] = taskTime;\n    }\n\n    if (taskDuration) {\n      newTask[\"duration\"] = taskDuration;\n    }\n\n    console.log(\"newTask\", newTask);\n    post(\"tasks\", newTask);\n  }; // redirect to home page\n  // const location = useLocation();\n  // useEffect(() => {\n  //     if(location){\n  //         const task = location.state.task;\n  //         setTaskToBeEdited(task);\n  //     }\n  // }, [location]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNewTask,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskTitle\",\n        children: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"taskTitle\",\n        id: \"taskTitle\",\n        value: taskTitle,\n        onChange: e => setTaskTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskCategory\",\n        children: \"Task Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownMenu, {\n        options: categories,\n        setValueFromDropDown: choosenOption => setCategoryFromDropDown(choosenOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskPriority\",\n        children: \"Task Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownMenu, {\n        options: priorities,\n        setValueFromDropDown: choosenOption => setPriorityFromDropDown(choosenOption)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), hasDescription ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDescription\",\n          children: \"Task Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"taskDescription\",\n          id: \"taskDescription\",\n          value: taskDescription,\n          onChange: e => setTaskDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setHasDescription(false),\n          children: \"- Remove Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasDescription(true),\n        children: \"+ Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), hasDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDate\",\n          children: \"Task Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"taskDate\",\n          id: \"taskDate\",\n          value: taskDate,\n          onChange: e => setTaskDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_ON\",\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_BY\",\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setHasDate(false),\n          children: \"- Remove Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasDate(true),\n        children: \"+ Add Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), hasTime ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDate\",\n          children: \"Task Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"taskDate\",\n          id: \"taskDate\",\n          value: taskTime,\n          onChange: e => setTaskTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setHasTime(false),\n          children: \"- Remove Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasTime(true),\n        children: \"+ Add Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), hasDuration ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDuration\",\n          children: \"Task Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"taskDuration\",\n          id: \"taskDuration\",\n          placeholder: \"in minutes\",\n          value: taskDuration,\n          onChange: e => setTaskDuration(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setHasDuration(false),\n          children: \"- Remove Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setHasDuration(true),\n        children: \"+ Add Duration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddNewTaskPage, \"lMW/Mz4nj6j3LkOEg4pgeh3tlac=\", false, function () {\n  return [useLocation];\n});\n\n_c = AddNewTaskPage;\nexport default AddNewTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/AddNewTaskPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","RequestContext","DropDownMenu","AddNewTaskPage","taskTitle","setTaskTitle","taskCategory","setTaskCategory","taskPriority","setTaskPriority","hasDescription","setHasDescription","taskDescription","setTaskDescription","hasDate","setHasDate","taskDate","setTaskDate","datedTaskType","setDatedTaskType","hasTime","setHasTime","taskTime","setTaskTime","hasDuration","setHasDuration","taskDuration","setTaskDuration","hasCollaborators","setHasCollaborators","taskCollaborators","setTaskCollaborators","location","categories","state","priorities","get","post","setCategoryFromDropDown","choosenOption","setPriorityFromDropDown","addNewTask","e","preventDefault","newTask","Date","now","console","log","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport RequestContext from \"../context/RequestContext\";\nimport DropDownMenu from \"../components/DropDownMenu\";\n\nconst AddNewTaskPage = () => {\n    const [taskTitle, setTaskTitle] = useState(\"\");\n    const [taskCategory, setTaskCategory] = useState(null);\n    const [taskPriority, setTaskPriority] = useState(null);\n\n    const [hasDescription, setHasDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(null);\n    const [hasDate, setHasDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(null);\n    const [datedTaskType, setDatedTaskType] = useState(null);\n    const [hasTime, setHasTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(null);\n    \n\n    const [hasDuration, setHasDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(null);\n    const [hasCollaborators, setHasCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n    const location = useLocation();\n    const categories = location.state.categories;\n    const priorities = location.state.priorities;\n\n    const {get, post} = useContext(RequestContext);\n\n    // let year = Date.prototype.getFullYear()\n    // let month = Date.prototype.getMonth()\n    // let day = Date.prototype.getDate()\n    \n    useEffect(() => {\n        setHasDescription(false)\n        \n    }, []);\n\n    const setCategoryFromDropDown = (choosenOption) => {\n            setTaskCategory(choosenOption);\n       \n        \n    }\n\n    const setPriorityFromDropDown = (choosenOption) => {\n            setTaskPriority(choosenOption);\n        \n    }\n\n    const addNewTask = (e) => {\n        e.preventDefault();\n        let newTask = {};\n        newTask[\"title\"]=taskTitle;\n        newTask[\"category\"]=taskCategory;\n        newTask[\"priority\"]=taskPriority;\n        newTask[\"completed\"]=false;\n        newTask[\"completedTimeStamp\"]=Date.now();\n\n        if(taskDescription){newTask[\"description\"]=taskDescription;}\n        if(taskDate){\n            newTask[\"date\"]=taskDate;\n            newTask[\"type\"]=datedTaskType;\n        }else{\n            newTask[\"type\"]=\"SOMEDAY\";\n\n        }\n        if(taskTime){newTask[\"time\"]=taskTime;}\n        if(taskDuration){newTask[\"duration\"]=taskDuration;}\n        \n        console.log(\"newTask\", newTask);\n       post(\"tasks\", newTask)\n    }\n    \n\n        // redirect to home page\n    \n    // const location = useLocation();\n    \n\n    // useEffect(() => {\n    //     if(location){\n    //         const task = location.state.task;\n    //         setTaskToBeEdited(task);\n    //     }\n        \n    // }, [location]);\n   \n\n\n    return (\n        <div>\n            \n            <form onSubmit={addNewTask}>\n                <label htmlFor=\"taskTitle\">Task Title</label>\n                <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n\n                <label htmlFor=\"taskCategory\">Task Category</label>\n                <DropDownMenu options={ categories } setValueFromDropDown={(choosenOption)=> setCategoryFromDropDown(choosenOption)}/>\n\n                <label htmlFor=\"taskPriority\">Task Priority</label>\n                <DropDownMenu options={ priorities } setValueFromDropDown={(choosenOption)=> setPriorityFromDropDown(choosenOption)}/>\n\n                {hasDescription?\n                <>\n                    <label htmlFor=\"taskDescription\">Task Description</label>\n                    <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" value={taskDescription} onChange={e=> setTaskDescription(e.target.value)}/>\n                    <button onClick={()=> setHasDescription(false)}>- Remove Description</button>\n                </>\n                :\n                <button onClick={()=> setHasDescription(true)}>+ Add Description</button>\n                }\n\n                {hasDate?\n                <>\n                    <label htmlFor=\"taskDate\">Task Date</label>\n                    <input type=\"date\" name=\"taskDate\" id=\"taskDate\" value={taskDate} onChange={e=> setTaskDate(e.target.value)}/>\n                    <div>\n                    <label htmlFor=\"taskDate\">Do On</label>\n                    <input type=\"radio\" name=\"timedTaskType\" id=\"do_on\" value=\"DO_ON\" onChange={e=> setDatedTaskType(e.target.value)}/>\n                    <label htmlFor=\"taskDate\">Do By</label>\n                    <input type=\"radio\" name=\"timedTaskType\" id=\"do_on\" value=\"DO_BY\" onChange={e=> setDatedTaskType(e.target.value)}/>\n\n                    </div>\n                    <button onClick={()=> setHasDate(false)}>- Remove Date</button>\n                </>\n                :\n                <button onClick={()=> setHasDate(true)}>+ Add Date</button>\n                }\n\n                {hasTime?\n                <>\n                    <label htmlFor=\"taskDate\">Task Time</label>\n                    <input type=\"time\" name=\"taskDate\" id=\"taskDate\" value={taskTime} onChange={e=> setTaskTime(e.target.value)}/>\n                    <button onClick={()=> setHasTime(false)}>- Remove Date</button>\n                </>\n                :\n                <button onClick={()=> setHasTime(true)}>+ Add Time</button>\n                }\n\n                {hasDuration?\n                <>\n                    <label htmlFor=\"taskDuration\">Task Duration</label>\n                    <input type=\"text\" name=\"taskDuration\" id=\"taskDuration\" placeholder=\"in minutes\" value={taskDuration} onChange={e=> setTaskDuration(e.target.value)}/>\n                    <button onClick={()=> setHasDuration(false)}>- Remove Duration</button>\n                </>\n                :\n                <button onClick={()=> setHasDuration(true)}>+ Add Duration</button>\n                }  \n\n                <button type=\"submit\">Create Task </button>\n            </form>\n\n        </div>\n    )\n    \n}\n\nexport default AddNewTaskPage;"]},"metadata":{},"sourceType":"module"}