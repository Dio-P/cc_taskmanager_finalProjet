{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { FaBars, FaUser } from 'react-icons/fa';\nimport { useLocation } from \"react-router-dom\";\nimport Menu from '../components/Menu';\nimport RequestContext from '../context/RequestContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = () => {\n  _s();\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false); // substitute the one under to the actual user object value\n\n  const [firstName, setFirstName] = useState(null);\n  const [editFirstName, setEditFirstName] = useState(false); // substitute the one under to the actual user object value\n\n  const [lastName, setLastName] = useState(null);\n  const [editLastName, setEditLastName] = useState(false);\n  const location = useLocation();\n  const categories = location.state.categories;\n  const priorities = location.state.priorities;\n  const {\n    get,\n    post\n  } = useContext(RequestContext);\n  useEffect(() => {\n    if (!firstName) {\n      setEditFirstName(true);\n    }\n\n    if (!lastName) {\n      setEditLastName(true);\n    }\n  }, []);\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const sendInfoDb = () => {\n    let profileInfo = {\n      firstName,\n      lastName\n    };\n    console.log(\"profileInfo\", profileInfo); ///////\n    // post( ,profileInfo)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMenuOpen(!isMenuOpen),\n        children: /*#__PURE__*/_jsxDEV(FaBars, {\n          className: \"m-4\",\n          size: \"2rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n      closeMenuFunction: () => closeMenuFunction(),\n      categories: categories,\n      priorities: priorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cat-header\",\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FaUser, {\n      className: \"user-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colour-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"font-semibold text-2xl\",\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), !editFirstName ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setEditFirstName(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-p text-xl\",\n          children: [!firstName ? \"Enter a name\" : \"Enter a new name\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"category-input\",\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          onChange: e => setFirstName(e.target.value),\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            sendInfoDb();\n            setEditFirstName(false);\n          },\n          children: \" Done \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colour-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"font-semibold text-2xl\",\n        htmlFor: \"lastName\",\n        children: \" Last Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), !editLastName ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setEditLastName(true),\n        children: \" Edit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-p text-xl\",\n          children: [!firstName ? \"Enter a name\" : \"Enter a new name\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"category-input\",\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          onChange: e => setLastName(e.target.value),\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => {\n            sendInfoDb();\n            setEditLastName(false);\n          },\n          children: \" Done \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfilePage, \"rSeepz+ij5lo6o4FNzzPJO4ozaE=\", false, function () {\n  return [useLocation];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/ProfilePage.js"],"names":["useState","useEffect","useContext","FaBars","FaUser","useLocation","Menu","RequestContext","ProfilePage","isMenuOpen","setIsMenuOpen","firstName","setFirstName","editFirstName","setEditFirstName","lastName","setLastName","editLastName","setEditLastName","location","categories","state","priorities","get","post","closeMenuFunction","sendInfoDb","profileInfo","console","log","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { FaBars, FaUser } from 'react-icons/fa';\nimport { useLocation } from \"react-router-dom\";\nimport Menu from '../components/Menu';\nimport RequestContext from '../context/RequestContext';\n\nconst ProfilePage = () => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    // substitute the one under to the actual user object value\n    const [firstName, setFirstName] = useState(null);\n    const [editFirstName, setEditFirstName] = useState(false);\n    // substitute the one under to the actual user object value\n    const [lastName, setLastName] = useState(null);\n    const [editLastName, setEditLastName] = useState(false);\n\n    const location = useLocation();\n    const categories = location.state.categories;\n    const priorities = location.state.priorities;\n    const {get, post} = useContext(RequestContext);\n\n    useEffect(() => {\n        if(!firstName){\n            setEditFirstName(true);\n\n        }\n        if(!lastName){\n            setEditLastName(true);\n\n        }\n\n    }, []);\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const sendInfoDb = () => {\n        let profileInfo = { firstName, lastName }\n        console.log(\"profileInfo\", profileInfo);///////\n        // post( ,profileInfo)\n    }\n\n    return(\n        <div>\n            {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}><FaBars className='m-4' size='2rem'/></button>\n                </>\n            :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n            }\n            <p className='cat-header'>My Profile</p>\n            <FaUser className='user-icon'/>\n            <div className='colour-section'>\n                <label className='font-semibold text-2xl' htmlFor=\"firstName\">First Name</label>\n                {!editFirstName?\n                    <button className='btn' onClick={()=> setEditFirstName(true)}>Edit</button>\n                :\n                <>\n                    <p className='title-p text-xl'>{ !firstName? \"Enter a name\" : \"Enter a new name\" } </p>\n                    <input className='category-input' type=\"text\" id=\"firstName\" name=\"firstName\" onChange={e => setFirstName(e.target.value)} value={firstName}/>\n                    <button className='btn' onClick={() => {\n                            sendInfoDb()\n                            setEditFirstName(false)\n                        }}> Done </button>\n                </>\n                }\n            </div>\n            <div className='colour-section'>\n                <label className='font-semibold text-2xl' htmlFor=\"lastName\"> Last Name </label>\n                {!editLastName?\n                    <button className='btn' onClick={()=> setEditLastName(true)}> Edit </button>\n                :\n                    <>\n                        <p className='title-p text-xl'>{ !firstName? \"Enter a name\" : \"Enter a new name\" } </p>\n                        <input className='category-input' type=\"text\" id=\"lastName\" name=\"lastName\" onChange={e => setLastName(e.target.value)} value={lastName}/>\n                        <button className='btn' onClick={() => {\n                            sendInfoDb()\n                            setEditLastName(false)\n                        }}> Done </button>\n                    </>\n                }\n            </div>\n\n        </div>\n\n    ) \n}\n\nexport default ProfilePage;"]},"metadata":{},"sourceType":"module"}