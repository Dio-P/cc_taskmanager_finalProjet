{"ast":null,"code":"var _jsxFileName = \"/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DistinctTaskPage = _ref => {\n  _s();\n\n  let {\n    categories,\n    priorities,\n    users,\n    updateWholeMainPageTasksFromComponent\n  } = _ref;\n  const location = useLocation();\n  const task = location.state.task;\n  const navigate = useNavigate(); // const categories = location.state.categories;\n  // const priorities = location.state.priorities;\n\n  const [loading, setLoading] = useState(true);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [editTitle, setEditTitle] = useState(false);\n  const [taskTitle, setTaskTitle] = useState(task.title);\n  const [taskID, setTaskID] = useState(task.id);\n  const [taskCompleted, setTaskCompleted] = useState(task.completed); ///////////\n\n  const [editCategory, setEditCategory] = useState(false);\n  const [taskCategory, setTaskCategory] = useState(task.category);\n  const [editPriority, setEditPriority] = useState(false);\n  const [taskPriority, setTaskPriority] = useState(task.priority);\n  const [editDescription, setEditDescription] = useState(false);\n  const [taskDescription, setTaskDescription] = useState(task.description);\n  const [editDate, setEditDate] = useState(false);\n  const [taskDate, setTaskDate] = useState(task.date);\n  const [editTime, setEditTime] = useState(false);\n  const [taskTime, setTaskTime] = useState(task.time);\n  const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n  const [datedTaskType, setDatedTaskType] = useState(task.type);\n  const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n  const [editDuration, setEditDuration] = useState(false);\n  const [taskDuration, setTaskDuration] = useState(task.duration);\n  const [editCollaborators, setEditCollaborators] = useState(false);\n  const [taskCollaborators, setTaskCollaborators] = useState(null);\n  const [collaboratorsToDisplay, setCollaboratorsToDisplay] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const {\n    put,\n    deleteElement\n  } = useContext(RequestContext);\n  useEffect(() => {\n    setLoading(false);\n  }, [taskTitle, taskCompleted, taskCategory, taskPriority]); // useEffect(() => {\n  //     setTaskID(task)\n  // }, [task]);\n\n  useEffect(() => {\n    let collaboratorsToDisplay = users.filter(user => {\n      return user.firstName.toLowerCase().match(searchInput);\n    });\n    setCollaboratorsToDisplay(collaboratorsToDisplay);\n  }, [searchInput]);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  };\n\n  const onClickingACollaborator = (collaborator, e) => {\n    e.preventDefault();\n    const existingCollaboratorsIDs = Object.values(taskCollaborators).map(collaborator => collaborator.id);\n\n    if (existingCollaboratorsIDs.includes(collaborator.id)) {\n      alert(\"this collaborator has already been added\");\n    } else {\n      setTaskCollaborators([...taskCollaborators, collaborator]);\n    }\n\n    setSearchInput(\"\");\n  };\n\n  const removeCollaborator = colaboratorID => {\n    const newCollaborators = taskCollaborators.filter(category => category.id !== colaboratorID);\n    setTaskCollaborators(newCollaborators);\n  };\n\n  const setCategoryFromDropDown = choosenOption => {\n    setTaskCategory(choosenOption);\n  };\n\n  const setPriorityFromDropDown = choosenOption => {\n    setTaskPriority(choosenOption);\n  };\n\n  const closeMenuFunction = () => {\n    setIsMenuOpen(false);\n  };\n\n  const onClickingComplete = () => {\n    // console.log(\"inside Complete\");\n    setTaskCompleted(!taskCompleted);\n\n    if (!completedTimeStamp) {\n      let timestamp = Date.parse(new Date());\n      setCompletedTimeStamp(timestamp); // onClickingDone()\n    } else {\n      setCompletedTimeStamp(null); // onClickingDone()\n    }\n  };\n\n  const onClickingDone = () => {\n    const updatedTask = {};\n    updatedTask[\"title\"] = taskTitle;\n    updatedTask[\"id\"] = taskID;\n    updatedTask[\"category\"] = taskCategory;\n    updatedTask[\"priority\"] = taskPriority;\n    updatedTask[\"completed\"] = taskCompleted;\n    updatedTask[\"completedTimeStamp\"] = completedTimeStamp;\n\n    if (taskDescription) {\n      updatedTask[\"description\"] = taskDescription;\n    }\n\n    if (taskDate) {\n      updatedTask[\"date\"] = taskDate;\n      updatedTask[\"type\"] = datedTaskType;\n    } else {\n      updatedTask[\"type\"] = \"SOMEDAY\";\n    }\n\n    if (taskTime) {\n      updatedTask[\"time\"] = taskTime;\n    }\n\n    if (taskDuration) {\n      updatedTask[\"duration\"] = taskDuration;\n    }\n\n    console.log(\"updatedTask\", updatedTask); /////////////\n\n    put(`tasks/${task.id}`, updatedTask);\n    updateWholeMainPageTasksFromComponent(updatedTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!isMenuOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsMenuOpen(!isMenuOpen),\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(Menu, {\n        closeMenuFunction: () => closeMenuFunction(),\n        categories: categories,\n        priorities: priorities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: taskTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), !editTitle ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTitle(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskTitle\",\n            id: \"taskTitle\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditTitle(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => {\n            onClickingComplete();\n          },\n          checked: taskCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskCategory.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), !editCategory ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditCategory(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenuCategory, {\n            options: categories,\n            setValueFromDropDown: choosenOption => setCategoryFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditCategory(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), !editPriority ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditPriority(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropDownMenuPriority, {\n            options: priorities,\n            setValueFromDropDown: choosenOption => setPriorityFromDropDown(choosenOption)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditPriority(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), taskDescription ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), !editDescription ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDescription(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDescription\",\n            id: \"taskDescription\",\n            value: taskDescription,\n            onChange: e => setTaskDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditDescription(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this) : null, taskDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Date \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: taskDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), !editDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditDate(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"taskDate\",\n              id: \"taskDate\",\n              value: taskDate,\n              onChange: e => setTaskDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setEditDate(false);\n                onClickingDone();\n              },\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_ON\",\n            checked: datedTaskType === \"DO_ON\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"taskDate\",\n            children: \"Do By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"timedTaskType\",\n            id: \"do_on\",\n            value: \"DO_BY\",\n            checked: datedTaskType === \"DO_BY\" ? true : false,\n            onChange: e => setDatedTaskType(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this) : null, taskTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDate\",\n          children: \"Task Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), !editTime ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditTime(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"taskDate\",\n            id: \"taskDate\",\n            value: taskTime,\n            onChange: e => setTaskTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditTime(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this) : null, taskDuration ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDuration\",\n          children: \"Task Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: taskDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }, this), !editDuration ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditDuration(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"taskDuration\",\n            id: \"taskDuration\",\n            placeholder: \"in minutes\",\n            value: taskDuration,\n            onChange: e => setTaskDuration(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditDuration(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this) : null, taskCollaborators ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \" Collaborators \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), taskCollaborators.length > 0 && Object.values(taskCollaborators).map(collaborator => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [collaborator.firstName, \" \", collaborator.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeCollaborator(collaborator.id),\n            children: \"X\"\n          }, collaborator.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this)), !editCollaborators ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditCollaborators(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Add Collaborators\",\n            onChange: handleChange,\n            value: searchInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this), searchInput.length > 0 && /*#__PURE__*/_jsxDEV(SearchBar, {\n            onClickingAnOption: (users, e) => onClickingACollaborator(users, e),\n            optionsToDisplay: collaboratorsToDisplay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditCollaborators(false);\n              onClickingDone();\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          deleteElement(\"tasks\", taskID);\n          navigate(\"/\");\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        children: \"Back to Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DistinctTaskPage, \"uqciBjJZ8Wf46v2PCcJl2UPoaVM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = DistinctTaskPage;\nexport default DistinctTaskPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DistinctTaskPage\");","map":{"version":3,"sources":["/Users/dionysiospapadopoulos/Documents/CodeClan/taskManagerFinalProject/task_manager/client/src/containers/DistinctTaskPage.js"],"names":["useState","useEffect","useContext","useNavigate","useLocation","DropDownMenuCategory","DropDownMenuPriority","RequestContext","Menu","SearchBar","DistinctTaskPage","categories","priorities","users","updateWholeMainPageTasksFromComponent","location","task","state","navigate","loading","setLoading","isMenuOpen","setIsMenuOpen","editTitle","setEditTitle","taskTitle","setTaskTitle","title","taskID","setTaskID","id","taskCompleted","setTaskCompleted","completed","editCategory","setEditCategory","taskCategory","setTaskCategory","category","editPriority","setEditPriority","taskPriority","setTaskPriority","priority","editDescription","setEditDescription","taskDescription","setTaskDescription","description","editDate","setEditDate","taskDate","setTaskDate","date","editTime","setEditTime","taskTime","setTaskTime","time","editdatedTaskType","setEditdatedTaskType","datedTaskType","setDatedTaskType","type","completedTimeStamp","setCompletedTimeStamp","editDuration","setEditDuration","taskDuration","setTaskDuration","duration","editCollaborators","setEditCollaborators","taskCollaborators","setTaskCollaborators","collaboratorsToDisplay","setCollaboratorsToDisplay","searchInput","setSearchInput","put","deleteElement","filter","user","firstName","toLowerCase","match","handleChange","e","preventDefault","target","value","onClickingACollaborator","collaborator","existingCollaboratorsIDs","Object","values","map","includes","alert","removeCollaborator","colaboratorID","newCollaborators","setCategoryFromDropDown","choosenOption","setPriorityFromDropDown","closeMenuFunction","onClickingComplete","timestamp","Date","parse","onClickingDone","updatedTask","console","log","length","lastName"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport DropDownMenuCategory from \"../components/DropDownMenuCategory\";\nimport DropDownMenuPriority from \"../components/DropDownMenuPriority\";\nimport RequestContext from \"../context/RequestContext\";\nimport Menu from \"../components/Menu\";\nimport SearchBar from \"../components/SearchBar\";\n\nconst DistinctTaskPage = ({ categories, priorities, users, updateWholeMainPageTasksFromComponent }) => {\n    const location = useLocation();\n    const task = location.state.task;\n    const navigate = useNavigate();\n    // const categories = location.state.categories;\n    // const priorities = location.state.priorities;\n\n    const [loading, setLoading] = useState(true);\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n    const [editTitle, setEditTitle] = useState(false);\n    const [taskTitle, setTaskTitle] = useState(task.title);\n    const [taskID, setTaskID] = useState(task.id);\n    \n    const [taskCompleted, setTaskCompleted] = useState(task.completed);///////////\n\n    const [editCategory, setEditCategory] = useState(false);\n    const [taskCategory, setTaskCategory] = useState(task.category);\n    const [editPriority, setEditPriority] = useState(false);\n    const [taskPriority, setTaskPriority] = useState(task.priority);\n    \n\n    const [editDescription, setEditDescription] = useState(false);\n    const [taskDescription, setTaskDescription] = useState(task.description);\n    const [editDate, setEditDate] = useState(false);\n    const [taskDate, setTaskDate] = useState(task.date);\n    const [editTime, setEditTime] = useState(false);\n    const [taskTime, setTaskTime] = useState(task.time);\n    const [editdatedTaskType, setEditdatedTaskType] = useState(false);\n    const [datedTaskType, setDatedTaskType] = useState(task.type);\n    const [completedTimeStamp, setCompletedTimeStamp] = useState(null);\n    \n    \n\n    const [editDuration, setEditDuration] = useState(false);\n    const [taskDuration, setTaskDuration] = useState(task.duration);\n    const [editCollaborators, setEditCollaborators] = useState(false);\n    const [taskCollaborators, setTaskCollaborators] = useState(null);\n\n    const [collaboratorsToDisplay, setCollaboratorsToDisplay] = useState([]);\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    const {put, deleteElement} = useContext(RequestContext);\n    \n    useEffect(() => {\n        setLoading(false)\n        \n    }, [taskTitle, taskCompleted, taskCategory, taskPriority]);\n\n    // useEffect(() => {\n    //     setTaskID(task)\n    // }, [task]);\n\n    useEffect(() => {\n        let collaboratorsToDisplay = users.filter((user) => {\n          return user.firstName.toLowerCase().match(searchInput);\n        });\n        setCollaboratorsToDisplay(collaboratorsToDisplay);\n      }, [searchInput]);\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setSearchInput(e.target.value.toLowerCase());\n      };\n\n    const onClickingACollaborator = (collaborator,e) => {\n        e.preventDefault();\n        const existingCollaboratorsIDs = \n        Object.values(taskCollaborators).map(collaborator => (\n            collaborator.id\n        ));\n        if(existingCollaboratorsIDs.includes(collaborator.id)){\n            alert(\"this collaborator has already been added\")\n        }else{\n            setTaskCollaborators([...taskCollaborators, collaborator]);\n        }\n        \n        setSearchInput(\"\");\n    \n      };\n    \n    const removeCollaborator = (colaboratorID) => {\n    const newCollaborators = taskCollaborators.filter(\n        (category) => category.id !== colaboratorID\n    );\n    setTaskCollaborators(newCollaborators);\n    };\n    \n    const setCategoryFromDropDown = (choosenOption) => {\n        setTaskCategory(choosenOption);\n    }\n\n    const setPriorityFromDropDown = (choosenOption) => {\n            setTaskPriority(choosenOption);\n    }\n\n    const closeMenuFunction = () => {\n        setIsMenuOpen(false);\n    }\n\n    const onClickingComplete = () => {\n        // console.log(\"inside Complete\");\n        setTaskCompleted(!taskCompleted)\n        if(!completedTimeStamp){\n            let timestamp = Date.parse(new Date());\n            setCompletedTimeStamp(timestamp);\n            // onClickingDone()\n        }else{\n            setCompletedTimeStamp(null);\n            // onClickingDone()\n        }\n    }\n\n    const onClickingDone = () => {\n        const updatedTask= { }\n        updatedTask[\"title\"] = taskTitle;\n        updatedTask[\"id\"] = taskID;\n        updatedTask[\"category\"] = taskCategory;\n        updatedTask[\"priority\"] = taskPriority;\n        updatedTask[\"completed\"]=taskCompleted;\n        updatedTask[\"completedTimeStamp\"]=completedTimeStamp;\n\n        if(taskDescription){\n            updatedTask[\"description\"]=taskDescription;\n        }\n        if(taskDate){\n            updatedTask[\"date\"]=taskDate;\n            updatedTask[\"type\"]=datedTaskType;\n        }else{\n            updatedTask[\"type\"]=\"SOMEDAY\";\n\n        }\n        if(taskTime){\n            updatedTask[\"time\"]=taskTime;\n        }\n        if(taskDuration){\n            updatedTask[\"duration\"]=taskDuration;\n        }\n        \n        console.log(\"updatedTask\", updatedTask);/////////////\n        \n        put(`tasks/${task.id}`, updatedTask)\n        updateWholeMainPageTasksFromComponent(updatedTask);       \n    }\n\n    return (\n        \n\n        <div>\n            {loading?\n            <h3>Loading</h3>\n            :\n\n            <div>\n                {!isMenuOpen?\n                <>\n                    <button onClick={()=>setIsMenuOpen(!isMenuOpen)}>Menu</button>\n                </>\n                :\n                <Menu\n                    closeMenuFunction={ ()=>closeMenuFunction() }\n                    categories={ categories }\n                    priorities={ priorities }\n                />\n                }\n                \n                <div>\n                    <label>Task Title</label>\n                    <h3>{taskTitle}</h3>\n                    {!editTitle?\n                        <button onClick={()=>setEditTitle(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" value={taskTitle} onChange={e=> setTaskTitle(e.target.value)} required/>\n                            <button onClick={()=>{\n                                setEditTitle(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }  \n                </div>\n                \n                <div>\n                    <label>Completed</label>\n                    <input type=\"checkbox\" onClick={()=>{onClickingComplete()}} checked={taskCompleted}/>\n                </div>\n            \n\n                <div>\n                    <label>Category</label>\n                    <p>{ taskCategory.title }</p>\n                    {!editCategory?\n                        <button onClick={()=>setEditCategory(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuCategory options={ categories } setValueFromDropDown={(choosenOption)=> setCategoryFromDropDown(choosenOption)}/>\n                            <button onClick={()=>{\n                                setEditCategory(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                <div>\n                    <label>Priority</label>\n                    <p>{ taskPriority }</p>\n                    {!editPriority?\n                        <button onClick={()=>setEditPriority(true)}>Edit</button>\n                    :\n                        <>\n                            <DropDownMenuPriority options={ priorities } setValueFromDropDown={(choosenOption)=> setPriorityFromDropDown(choosenOption)}/>\n                            <button onClick={()=>{\n                                setEditPriority(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n\n                    }\n                </div>\n\n                \n                {taskDescription?\n                <div>\n                    <label> Description </label>\n                    <p>{ taskDescription }</p>\n                    {!editDescription?\n                        <button onClick={()=>setEditDescription(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" value={taskDescription} onChange={e=> setTaskDescription(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditDescription(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                }\n                \n\n                {taskDate?\n                <div>\n\n                    <div>\n                        <label> Date </label>\n                        <p>{ taskDate }</p>\n                        {!editDate?\n                            <button onClick={()=>setEditDate(true)}>Edit</button>\n                        :\n                            <>\n                                <input type=\"date\" name=\"taskDate\" id=\"taskDate\" value={taskDate} onChange={e=> setTaskDate(e.target.value)}/>\n                                <button onClick={()=>{\n                                setEditDate(false)\n                                onClickingDone()\n                                }}>Done</button>\n                            </>\n                        }\n                    </div>\n\n                    <div>\n                        <label> Type </label>\n                        <label htmlFor=\"taskDate\">Do On</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_ON\" \n                            checked={datedTaskType===\"DO_ON\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                        <label htmlFor=\"taskDate\">Do By</label>\n                        <input \n                            type=\"radio\" \n                            name=\"timedTaskType\" \n                            id=\"do_on\" \n                            value=\"DO_BY\" \n                            checked={datedTaskType===\"DO_BY\"?true:false} \n                            onChange={e=> setDatedTaskType(e.target.value)}\n                        />\n                    </div>\n\n                </div>\n                        :\n                            null  \n                }\n\n\n                {taskTime?\n                <div>\n                    <label htmlFor=\"taskDate\">Task Time</label>\n                    <p>{ taskTime }</p>\n                    {!editTime?\n                        <button onClick={()=> setEditTime(true)}>Edit</button>   \n                    :\n                        <>\n                            <input type=\"time\" name=\"taskDate\" id=\"taskDate\" value={taskTime} onChange={e=> setTaskTime(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditTime(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }    \n                </div>\n                :\n                    null\n                }\n\n\n                {taskDuration?\n                <div>\n                    <label htmlFor=\"taskDuration\">Task Duration</label>\n                    <p>{ taskDuration }</p>\n                    {!editDuration?\n                        <button onClick={()=> setEditDuration(true)}>Edit</button>\n                    :\n                        <>\n                            <input type=\"text\" name=\"taskDuration\" id=\"taskDuration\" placeholder=\"in minutes\" value={taskDuration} onChange={e=> setTaskDuration(e.target.value)}/>\n                            <button onClick={()=>{\n                                setEditDuration(false)\n                                onClickingDone()\n                                }}>Done</button>\n                        </>\n                    }\n                </div>\n                :\n                    null\n                } \n                \n\n\n                {taskCollaborators? (   \n                <div>\n                    <label> Collaborators </label>\n                    {taskCollaborators.length > 0 &&\n                        Object.values(taskCollaborators).map((collaborator) => (\n                        <div>\n                            <p>{ collaborator.firstName } { collaborator.lastName }</p>\n                            <button key={collaborator.id} onClick={() => removeCollaborator(collaborator.id)}>\n                            X\n                            </button>\n                        </div>\n                        ))}\n\n                    {!editCollaborators? ( \n                        <button onClick={()=> setEditCollaborators(true)}>Edit</button>\n                    ) : ( \n                        <>\n                    <input\n                    type=\"text\"\n                    placeholder=\"Add Collaborators\"\n                    onChange={handleChange}\n                    value={searchInput}\n                    />\n                        {searchInput.length > 0 \n                            && \n                        <SearchBar\n                            onClickingAnOption={ (users, e)=> onClickingACollaborator(users, e) }\n                            optionsToDisplay={ collaboratorsToDisplay }\n                        />\n                    }\n                    <button onClick={()=>{\n                        setEditCollaborators(false)\n                        onClickingDone()\n                        }}>Done</button>\n                    </>\n                    )}\n                </div>\n                ) : (\n                    null\n                )}\n                \n            </div>\n            }\n            <div>\n                <button onClick={()=>{\n                deleteElement(\"tasks\", taskID)\n                navigate(\"/\")\n                }}>Delete</button>\n            </div>\n\n            <div>\n                <button onClick={()=>navigate(\"/\")}>Back to Tasks</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default DistinctTaskPage;"]},"metadata":{},"sourceType":"module"}